<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="662" onload="init(evt)" viewBox="0 0 1200 662" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="662.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="645" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="645" > </text>
<g id="frames">
<g >
<title>nvme_complete_rq (1 samples, 0.02%)</title><rect x="1082.3" y="165" width="0.3" height="15.0" fill="rgb(238,58,48)" rx="2" ry="2" />
<text  x="1085.28" y="175.5" ></text>
</g>
<g >
<title>do_user_addr_fault (19 samples, 0.47%)</title><rect x="1147.0" y="517" width="5.5" height="15.0" fill="rgb(246,152,48)" rx="2" ry="2" />
<text  x="1150.03" y="527.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (7 samples, 0.17%)</title><rect x="1153.4" y="549" width="2.0" height="15.0" fill="rgb(254,10,28)" rx="2" ry="2" />
<text  x="1156.42" y="559.5" ></text>
</g>
<g >
<title>[C2J] (191 samples, 4.70%)</title><rect x="716.1" y="421" width="55.5" height="15.0" fill="rgb(210,7,38)" rx="2" ry="2" />
<text  x="719.14" y="431.5" >[C2J]</text>
</g>
<g >
<title>create_empty_buffers (2 samples, 0.05%)</title><rect x="33.8" y="357" width="0.6" height="15.0" fill="rgb(233,50,19)" rx="2" ry="2" />
<text  x="36.81" y="367.5" ></text>
</g>
<g >
<title>rwsem_down_read_slowpath (2 samples, 0.05%)</title><rect x="1168.8" y="485" width="0.6" height="15.0" fill="rgb(226,157,3)" rx="2" ry="2" />
<text  x="1171.80" y="495.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="714.4" y="277" width="0.3" height="15.0" fill="rgb(211,146,13)" rx="2" ry="2" />
<text  x="717.40" y="287.5" ></text>
</g>
<g >
<title>task_tick_fair (1 samples, 0.02%)</title><rect x="57.3" y="389" width="0.3" height="15.0" fill="rgb(216,160,8)" rx="2" ry="2" />
<text  x="60.33" y="399.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="1163.3" y="533" width="0.3" height="15.0" fill="rgb(213,83,32)" rx="2" ry="2" />
<text  x="1166.29" y="543.5" ></text>
</g>
<g >
<title>ext4_block_write_begin (13 samples, 0.32%)</title><rect x="33.8" y="373" width="3.8" height="15.0" fill="rgb(249,35,38)" rx="2" ry="2" />
<text  x="36.81" y="383.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (89 samples, 2.19%)</title><rect x="1110.7" y="565" width="25.9" height="15.0" fill="rgb(232,189,41)" rx="2" ry="2" />
<text  x="1113.73" y="575.5" >e..</text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (2 samples, 0.05%)</title><rect x="307.3" y="453" width="0.6" height="15.0" fill="rgb(231,177,19)" rx="2" ry="2" />
<text  x="310.32" y="463.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="714.7" y="325" width="0.3" height="15.0" fill="rgb(207,33,49)" rx="2" ry="2" />
<text  x="717.69" y="335.5" ></text>
</g>
<g >
<title>change_pte_range (2 samples, 0.05%)</title><rect x="1126.1" y="453" width="0.6" height="15.0" fill="rgb(228,89,30)" rx="2" ry="2" />
<text  x="1129.12" y="463.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="1082.3" y="261" width="0.3" height="15.0" fill="rgb(239,176,20)" rx="2" ry="2" />
<text  x="1085.28" y="271.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="714.4" y="325" width="0.3" height="15.0" fill="rgb(224,51,29)" rx="2" ry="2" />
<text  x="717.40" y="335.5" ></text>
</g>
<g >
<title>mem_cgroup_charge_statistics (1 samples, 0.02%)</title><rect x="1151.7" y="437" width="0.3" height="15.0" fill="rgb(250,171,33)" rx="2" ry="2" />
<text  x="1154.67" y="447.5" ></text>
</g>
<g >
<title>notifier_call_chain (1 samples, 0.02%)</title><rect x="1108.1" y="341" width="0.3" height="15.0" fill="rgb(237,100,12)" rx="2" ry="2" />
<text  x="1111.12" y="351.5" ></text>
</g>
<g >
<title>__do_page_fault (58 samples, 1.43%)</title><rect x="1168.8" y="533" width="16.8" height="15.0" fill="rgb(240,136,40)" rx="2" ry="2" />
<text  x="1171.80" y="543.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (22 samples, 0.54%)</title><rect x="1173.4" y="437" width="6.4" height="15.0" fill="rgb(219,63,30)" rx="2" ry="2" />
<text  x="1176.45" y="447.5" ></text>
</g>
<g >
<title>activate_task (7 samples, 0.17%)</title><rect x="314.6" y="421" width="2.0" height="15.0" fill="rgb(234,193,3)" rx="2" ry="2" />
<text  x="317.58" y="431.5" ></text>
</g>
<g >
<title>std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair (2 samples, 0.05%)</title><rect x="1092.4" y="437" width="0.6" height="15.0" fill="rgb(239,33,45)" rx="2" ry="2" />
<text  x="1095.44" y="447.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.10%)</title><rect x="715.0" y="261" width="1.1" height="15.0" fill="rgb(232,138,32)" rx="2" ry="2" />
<text  x="717.98" y="271.5" ></text>
</g>
<g >
<title>truncate_pagecache (35 samples, 0.86%)</title><rect x="20.2" y="389" width="10.1" height="15.0" fill="rgb(216,80,44)" rx="2" ry="2" />
<text  x="23.16" y="399.5" ></text>
</g>
<g >
<title>ext4_es_insert_delayed_block (1 samples, 0.02%)</title><rect x="37.0" y="325" width="0.3" height="15.0" fill="rgb(253,54,11)" rx="2" ry="2" />
<text  x="40.00" y="335.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="1171.4" y="469" width="0.3" height="15.0" fill="rgb(218,135,34)" rx="2" ry="2" />
<text  x="1174.42" y="479.5" ></text>
</g>
<g >
<title>__clone (15 samples, 0.37%)</title><rect x="57.9" y="565" width="4.4" height="15.0" fill="rgb(228,225,32)" rx="2" ry="2" />
<text  x="60.91" y="575.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (4 samples, 0.10%)</title><rect x="715.0" y="309" width="1.1" height="15.0" fill="rgb(226,85,27)" rx="2" ry="2" />
<text  x="717.98" y="319.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (89 samples, 2.19%)</title><rect x="31.2" y="437" width="25.8" height="15.0" fill="rgb(212,153,7)" rx="2" ry="2" />
<text  x="34.20" y="447.5" >e..</text>
</g>
<g >
<title>std::deque&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::push_back (16 samples, 0.39%)</title><rect x="1089.5" y="501" width="4.7" height="15.0" fill="rgb(227,136,18)" rx="2" ry="2" />
<text  x="1092.54" y="511.5" ></text>
</g>
<g >
<title>osq_unlock (1 samples, 0.02%)</title><rect x="1168.8" y="453" width="0.3" height="15.0" fill="rgb(237,204,14)" rx="2" ry="2" />
<text  x="1171.80" y="463.5" ></text>
</g>
<g >
<title>wake_up_page_bit (1 samples, 0.02%)</title><rect x="1082.6" y="293" width="0.3" height="15.0" fill="rgb(228,215,23)" rx="2" ry="2" />
<text  x="1085.57" y="303.5" ></text>
</g>
<g >
<title>_IO_file_xsputn@@GLIBC_2.2.5 (4 samples, 0.10%)</title><rect x="16.7" y="565" width="1.1" height="15.0" fill="rgb(238,86,7)" rx="2" ry="2" />
<text  x="19.68" y="575.5" ></text>
</g>
<g >
<title>psi_task_change (1 samples, 0.02%)</title><rect x="1082.9" y="277" width="0.2" height="15.0" fill="rgb(226,26,28)" rx="2" ry="2" />
<text  x="1085.86" y="287.5" ></text>
</g>
<g >
<title>_IO_default_xsputn (5 samples, 0.12%)</title><rect x="14.6" y="549" width="1.5" height="15.0" fill="rgb(218,67,13)" rx="2" ry="2" />
<text  x="17.65" y="559.5" ></text>
</g>
<g >
<title>do_page_fault (19 samples, 0.47%)</title><rect x="1147.0" y="549" width="5.5" height="15.0" fill="rgb(222,218,18)" rx="2" ry="2" />
<text  x="1150.03" y="559.5" ></text>
</g>
<g >
<title>wake_up_q (28 samples, 0.69%)</title><rect x="308.8" y="469" width="8.1" height="15.0" fill="rgb(254,216,20)" rx="2" ry="2" />
<text  x="311.77" y="479.5" ></text>
</g>
<g >
<title>mpage_map_and_submit_extent (3 samples, 0.07%)</title><rect x="1082.0" y="373" width="0.9" height="15.0" fill="rgb(211,95,39)" rx="2" ry="2" />
<text  x="1084.99" y="383.5" ></text>
</g>
<g >
<title>__schedule (21 samples, 0.52%)</title><rect x="1115.1" y="453" width="6.1" height="15.0" fill="rgb(210,6,13)" rx="2" ry="2" />
<text  x="1118.09" y="463.5" ></text>
</g>
<g >
<title>__update_load_avg_se (1 samples, 0.02%)</title><rect x="57.3" y="357" width="0.3" height="15.0" fill="rgb(233,140,7)" rx="2" ry="2" />
<text  x="60.33" y="367.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="714.7" y="373" width="0.3" height="15.0" fill="rgb(210,132,6)" rx="2" ry="2" />
<text  x="717.69" y="383.5" ></text>
</g>
<g >
<title>ext4_da_get_block_prep (11 samples, 0.27%)</title><rect x="34.4" y="357" width="3.2" height="15.0" fill="rgb(249,218,46)" rx="2" ry="2" />
<text  x="37.39" y="367.5" ></text>
</g>
<g >
<title>page_evictable (2 samples, 0.05%)</title><rect x="46.6" y="261" width="0.6" height="15.0" fill="rgb(218,213,11)" rx="2" ry="2" />
<text  x="49.58" y="271.5" ></text>
</g>
<g >
<title>__handle_mm_fault (47 samples, 1.16%)</title><rect x="1170.5" y="485" width="13.7" height="15.0" fill="rgb(215,19,50)" rx="2" ry="2" />
<text  x="1173.55" y="495.5" ></text>
</g>
<g >
<title>pagevec_lookup_range_tag (2 samples, 0.05%)</title><rect x="1084.3" y="357" width="0.6" height="15.0" fill="rgb(253,16,13)" rx="2" ry="2" />
<text  x="1087.31" y="367.5" ></text>
</g>
<g >
<title>std::getline&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (2 samples, 0.05%)</title><rect x="1107.8" y="533" width="0.6" height="15.0" fill="rgb(232,84,38)" rx="2" ry="2" />
<text  x="1110.83" y="543.5" ></text>
</g>
<g >
<title>__mod_memcg_state (1 samples, 0.02%)</title><rect x="46.0" y="245" width="0.3" height="15.0" fill="rgb(219,99,7)" rx="2" ry="2" />
<text  x="49.00" y="255.5" ></text>
</g>
<g >
<title>native_write_msr (20 samples, 0.49%)</title><rect x="1115.4" y="357" width="5.8" height="15.0" fill="rgb(245,131,31)" rx="2" ry="2" />
<text  x="1118.38" y="367.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="946.4" y="421" width="0.3" height="15.0" fill="rgb(207,165,31)" rx="2" ry="2" />
<text  x="949.39" y="431.5" ></text>
</g>
<g >
<title>xas_alloc (1 samples, 0.02%)</title><rect x="44.6" y="277" width="0.2" height="15.0" fill="rgb(239,157,28)" rx="2" ry="2" />
<text  x="47.55" y="287.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.0 (20 samples, 0.49%)</title><rect x="1115.4" y="405" width="5.8" height="15.0" fill="rgb(252,53,21)" rx="2" ry="2" />
<text  x="1118.38" y="415.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="1163.3" y="501" width="0.3" height="15.0" fill="rgb(239,227,19)" rx="2" ry="2" />
<text  x="1166.29" y="511.5" ></text>
</g>
<g >
<title>ext4_es_lookup_extent (1 samples, 0.02%)</title><rect x="37.3" y="325" width="0.3" height="15.0" fill="rgb(208,166,18)" rx="2" ry="2" />
<text  x="40.29" y="335.5" ></text>
</g>
<g >
<title>native_write_msr (72 samples, 1.77%)</title><rect x="74.5" y="341" width="20.9" height="15.0" fill="rgb(207,139,10)" rx="2" ry="2" />
<text  x="77.46" y="351.5" ></text>
</g>
<g >
<title>native_write_msr (4 samples, 0.10%)</title><rect x="1188.8" y="373" width="1.2" height="15.0" fill="rgb(206,78,44)" rx="2" ry="2" />
<text  x="1191.84" y="383.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;&amp;, std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*&gt;::_M_set_node (1 samples, 0.02%)</title><rect x="926.4" y="373" width="0.2" height="15.0" fill="rgb(252,0,15)" rx="2" ry="2" />
<text  x="929.36" y="383.5" ></text>
</g>
<g >
<title>_int_free (134 samples, 3.30%)</title><rect x="278.9" y="565" width="38.9" height="15.0" fill="rgb(239,193,14)" rx="2" ry="2" />
<text  x="281.87" y="575.5" >_in..</text>
</g>
<g >
<title>__update_load_avg_cfs_rq (1 samples, 0.02%)</title><rect x="95.4" y="373" width="0.3" height="15.0" fill="rgb(246,196,45)" rx="2" ry="2" />
<text  x="98.36" y="383.5" ></text>
</g>
<g >
<title>finish_task_switch (4 samples, 0.10%)</title><rect x="31.8" y="293" width="1.1" height="15.0" fill="rgb(205,20,51)" rx="2" ry="2" />
<text  x="34.78" y="303.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (8 samples, 0.20%)</title><rect x="1181.9" y="453" width="2.3" height="15.0" fill="rgb(244,57,37)" rx="2" ry="2" />
<text  x="1184.87" y="463.5" ></text>
</g>
<g >
<title>do_anonymous_page (3 samples, 0.07%)</title><rect x="1108.7" y="437" width="0.9" height="15.0" fill="rgb(252,139,17)" rx="2" ry="2" />
<text  x="1111.70" y="447.5" ></text>
</g>
<g >
<title>__wake_up_locked_key_bookmark (1 samples, 0.02%)</title><rect x="1082.6" y="277" width="0.3" height="15.0" fill="rgb(236,224,54)" rx="2" ry="2" />
<text  x="1085.57" y="287.5" ></text>
</g>
<g >
<title>lru_cache_add_active_or_unevictable (4 samples, 0.10%)</title><rect x="1150.5" y="453" width="1.2" height="15.0" fill="rgb(252,142,31)" rx="2" ry="2" />
<text  x="1153.51" y="463.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.02%)</title><rect x="1093.3" y="453" width="0.3" height="15.0" fill="rgb(224,26,54)" rx="2" ry="2" />
<text  x="1096.31" y="463.5" ></text>
</g>
<g >
<title>__schedule (4 samples, 0.10%)</title><rect x="31.8" y="309" width="1.1" height="15.0" fill="rgb(253,65,8)" rx="2" ry="2" />
<text  x="34.78" y="319.5" ></text>
</g>
<g >
<title>mpage_map_and_submit_buffers (3 samples, 0.07%)</title><rect x="1082.0" y="357" width="0.9" height="15.0" fill="rgb(221,2,6)" rx="2" ry="2" />
<text  x="1084.99" y="367.5" ></text>
</g>
<g >
<title>test_clear_page_writeback (1 samples, 0.02%)</title><rect x="1082.3" y="53" width="0.3" height="15.0" fill="rgb(218,200,24)" rx="2" ry="2" />
<text  x="1085.28" y="63.5" ></text>
</g>
<g >
<title>ext4_reserve_inode_write (6 samples, 0.15%)</title><rect x="51.2" y="309" width="1.8" height="15.0" fill="rgb(246,225,7)" rx="2" ry="2" />
<text  x="54.23" y="319.5" ></text>
</g>
<g >
<title>wait_for_stable_page (1 samples, 0.02%)</title><rect x="47.2" y="373" width="0.3" height="15.0" fill="rgb(252,159,4)" rx="2" ry="2" />
<text  x="50.17" y="383.5" ></text>
</g>
<g >
<title>clockevents_program_event (2 samples, 0.05%)</title><rect x="182.2" y="469" width="0.6" height="15.0" fill="rgb(214,146,50)" rx="2" ry="2" />
<text  x="185.18" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (5 samples, 0.12%)</title><rect x="337.5" y="565" width="1.5" height="15.0" fill="rgb(222,92,3)" rx="2" ry="2" />
<text  x="340.52" y="575.5" ></text>
</g>
<g >
<title>free_unref_page_commit (2 samples, 0.05%)</title><rect x="21.9" y="309" width="0.6" height="15.0" fill="rgb(234,68,1)" rx="2" ry="2" />
<text  x="24.90" y="319.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64.part.0 (1 samples, 0.02%)</title><rect x="1108.1" y="421" width="0.3" height="15.0" fill="rgb(214,198,44)" rx="2" ry="2" />
<text  x="1111.12" y="431.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (99 samples, 2.44%)</title><rect x="98.8" y="565" width="28.8" height="15.0" fill="rgb(212,45,16)" rx="2" ry="2" />
<text  x="101.85" y="575.5" >__..</text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="1082.3" y="245" width="0.3" height="15.0" fill="rgb(254,43,51)" rx="2" ry="2" />
<text  x="1085.28" y="255.5" ></text>
</g>
<g >
<title>__vfprintf_internal (18 samples, 0.44%)</title><rect x="1101.4" y="517" width="5.3" height="15.0" fill="rgb(211,135,30)" rx="2" ry="2" />
<text  x="1104.44" y="527.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1082.3" y="309" width="0.3" height="15.0" fill="rgb(243,179,54)" rx="2" ry="2" />
<text  x="1085.28" y="319.5" ></text>
</g>
<g >
<title>do_syscall_64 (7 samples, 0.17%)</title><rect x="1153.4" y="565" width="2.0" height="15.0" fill="rgb(246,96,29)" rx="2" ry="2" />
<text  x="1156.42" y="575.5" ></text>
</g>
<g >
<title>__x64_sys_execve (4 samples, 0.10%)</title><rect x="1188.8" y="533" width="1.2" height="15.0" fill="rgb(238,7,31)" rx="2" ry="2" />
<text  x="1191.84" y="543.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_out (1 samples, 0.02%)</title><rect x="73.3" y="421" width="0.3" height="15.0" fill="rgb(219,155,4)" rx="2" ry="2" />
<text  x="76.30" y="431.5" ></text>
</g>
<g >
<title>start_this_handle (2 samples, 0.05%)</title><rect x="33.2" y="341" width="0.6" height="15.0" fill="rgb(215,142,9)" rx="2" ry="2" />
<text  x="36.23" y="351.5" ></text>
</g>
<g >
<title>__unlock_page_memcg (1 samples, 0.02%)</title><rect x="54.4" y="309" width="0.3" height="15.0" fill="rgb(220,138,36)" rx="2" ry="2" />
<text  x="57.42" y="319.5" ></text>
</g>
<g >
<title>std::deque&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::max_size (1 samples, 0.02%)</title><rect x="1093.9" y="453" width="0.3" height="15.0" fill="rgb(206,61,39)" rx="2" ry="2" />
<text  x="1096.89" y="463.5" ></text>
</g>
<g >
<title>check_cfs_rq_runtime (1 samples, 0.02%)</title><rect x="95.7" y="389" width="0.2" height="15.0" fill="rgb(241,150,7)" rx="2" ry="2" />
<text  x="98.65" y="399.5" ></text>
</g>
<g >
<title>ret_from_fork (15 samples, 0.37%)</title><rect x="57.9" y="549" width="4.4" height="15.0" fill="rgb(248,222,53)" rx="2" ry="2" />
<text  x="60.91" y="559.5" ></text>
</g>
<g >
<title>ext4_journal_check_start (1 samples, 0.02%)</title><rect x="48.9" y="309" width="0.3" height="15.0" fill="rgb(243,22,47)" rx="2" ry="2" />
<text  x="51.91" y="319.5" ></text>
</g>
<g >
<title>__x64_sys_mprotect (83 samples, 2.04%)</title><rect x="1112.2" y="533" width="24.1" height="15.0" fill="rgb(207,11,3)" rx="2" ry="2" />
<text  x="1115.19" y="543.5" >_..</text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="35.3" y="325" width="0.3" height="15.0" fill="rgb(217,118,19)" rx="2" ry="2" />
<text  x="38.26" y="335.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.02%)</title><rect x="1136.3" y="501" width="0.3" height="15.0" fill="rgb(249,114,53)" rx="2" ry="2" />
<text  x="1139.28" y="511.5" ></text>
</g>
<g >
<title>___slab_alloc (1 samples, 0.02%)</title><rect x="44.6" y="229" width="0.2" height="15.0" fill="rgb(206,43,33)" rx="2" ry="2" />
<text  x="47.55" y="239.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (7 samples, 0.17%)</title><rect x="45.1" y="293" width="2.1" height="15.0" fill="rgb(214,123,37)" rx="2" ry="2" />
<text  x="48.13" y="303.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (10 samples, 0.25%)</title><rect x="1090.4" y="469" width="2.9" height="15.0" fill="rgb(245,35,0)" rx="2" ry="2" />
<text  x="1093.41" y="479.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void  (2,123 samples, 52.24%)</title><rect x="343.9" y="565" width="616.4" height="15.0" fill="rgb(208,10,16)" rx="2" ry="2" />
<text  x="346.91" y="575.5" >std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void </text>
</g>
<g >
<title>drop_buffers (2 samples, 0.05%)</title><rect x="28.3" y="245" width="0.6" height="15.0" fill="rgb(209,222,31)" rx="2" ry="2" />
<text  x="31.29" y="255.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="317.8" y="565" width="0.3" height="15.0" fill="rgb(238,132,31)" rx="2" ry="2" />
<text  x="320.78" y="575.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="317.8" y="549" width="0.3" height="15.0" fill="rgb(212,104,31)" rx="2" ry="2" />
<text  x="320.78" y="559.5" ></text>
</g>
<g >
<title>__x64_sys_write (91 samples, 2.24%)</title><rect x="30.9" y="517" width="26.4" height="15.0" fill="rgb(225,129,7)" rx="2" ry="2" />
<text  x="33.91" y="527.5" >_..</text>
</g>
<g >
<title>get_mem_cgroup_from_mm (1 samples, 0.02%)</title><rect x="43.1" y="293" width="0.3" height="15.0" fill="rgb(218,121,51)" rx="2" ry="2" />
<text  x="46.10" y="303.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="278.6" y="469" width="0.3" height="15.0" fill="rgb(217,66,22)" rx="2" ry="2" />
<text  x="281.58" y="479.5" ></text>
</g>
<g >
<title>sprintf (3 samples, 0.07%)</title><rect x="788.1" y="421" width="0.9" height="15.0" fill="rgb(226,181,32)" rx="2" ry="2" />
<text  x="791.15" y="431.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (1 samples, 0.02%)</title><rect x="10.0" y="469" width="0.3" height="15.0" fill="rgb(205,12,42)" rx="2" ry="2" />
<text  x="13.00" y="479.5" ></text>
</g>
<g >
<title>irq_enter (1 samples, 0.02%)</title><rect x="336.9" y="517" width="0.3" height="15.0" fill="rgb(221,72,11)" rx="2" ry="2" />
<text  x="339.94" y="527.5" ></text>
</g>
<g >
<title>grab_cache_page_write_begin (33 samples, 0.81%)</title><rect x="37.6" y="373" width="9.6" height="15.0" fill="rgb(226,115,6)" rx="2" ry="2" />
<text  x="40.58" y="383.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.02%)</title><rect x="1082.6" y="197" width="0.3" height="15.0" fill="rgb(236,87,25)" rx="2" ry="2" />
<text  x="1085.57" y="207.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (5 samples, 0.12%)</title><rect x="341.6" y="533" width="1.4" height="15.0" fill="rgb(205,153,50)" rx="2" ry="2" />
<text  x="344.58" y="543.5" ></text>
</g>
<g >
<title>clear_page_erms (9 samples, 0.22%)</title><rect x="1175.2" y="405" width="2.6" height="15.0" fill="rgb(231,27,16)" rx="2" ry="2" />
<text  x="1178.19" y="415.5" ></text>
</g>
<g >
<title>osq_lock (1 samples, 0.02%)</title><rect x="1113.1" y="469" width="0.2" height="15.0" fill="rgb(236,224,36)" rx="2" ry="2" />
<text  x="1116.06" y="479.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;&amp;, std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="1093.6" y="437" width="0.3" height="15.0" fill="rgb(224,138,5)" rx="2" ry="2" />
<text  x="1096.60" y="447.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (4 samples, 0.10%)</title><rect x="715.0" y="405" width="1.1" height="15.0" fill="rgb(212,4,27)" rx="2" ry="2" />
<text  x="717.98" y="415.5" ></text>
</g>
<g >
<title>io_schedule (12 samples, 0.30%)</title><rect x="66.3" y="389" width="3.5" height="15.0" fill="rgb(208,94,39)" rx="2" ry="2" />
<text  x="69.33" y="399.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (1 samples, 0.02%)</title><rect x="21.0" y="325" width="0.3" height="15.0" fill="rgb(228,155,18)" rx="2" ry="2" />
<text  x="24.03" y="335.5" ></text>
</g>
<g >
<title>ctx_resched (4 samples, 0.10%)</title><rect x="1188.8" y="437" width="1.2" height="15.0" fill="rgb(241,203,23)" rx="2" ry="2" />
<text  x="1191.84" y="447.5" ></text>
</g>
<g >
<title>__strchrnul_avx2 (2 samples, 0.05%)</title><rect x="1095.9" y="517" width="0.6" height="15.0" fill="rgb(207,76,13)" rx="2" ry="2" />
<text  x="1098.93" y="527.5" ></text>
</g>
<g >
<title>xas_create (1 samples, 0.02%)</title><rect x="44.6" y="293" width="0.2" height="15.0" fill="rgb(211,63,4)" rx="2" ry="2" />
<text  x="47.55" y="303.5" ></text>
</g>
<g >
<title>_int_free (2 samples, 0.05%)</title><rect x="786.1" y="421" width="0.6" height="15.0" fill="rgb(241,225,16)" rx="2" ry="2" />
<text  x="789.12" y="431.5" ></text>
</g>
<g >
<title>free_unref_page_list (2 samples, 0.05%)</title><rect x="1154.9" y="357" width="0.5" height="15.0" fill="rgb(220,67,26)" rx="2" ry="2" />
<text  x="1157.87" y="367.5" ></text>
</g>
<g >
<title>_IO_str_init_static_internal (4 samples, 0.10%)</title><rect x="19.0" y="565" width="1.2" height="15.0" fill="rgb(206,130,4)" rx="2" ry="2" />
<text  x="22.00" y="575.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="714.4" y="309" width="0.3" height="15.0" fill="rgb(230,76,28)" rx="2" ry="2" />
<text  x="717.40" y="319.5" ></text>
</g>
<g >
<title>std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair (7 samples, 0.17%)</title><rect x="917.1" y="421" width="2.0" height="15.0" fill="rgb(227,16,52)" rx="2" ry="2" />
<text  x="920.07" y="431.5" ></text>
</g>
<g >
<title>_IO_do_write@@GLIBC_2.2.5 (2 samples, 0.05%)</title><rect x="16.1" y="565" width="0.6" height="15.0" fill="rgb(213,200,10)" rx="2" ry="2" />
<text  x="19.10" y="575.5" ></text>
</g>
<g >
<title>schedule (5 samples, 0.12%)</title><rect x="1082.9" y="325" width="1.4" height="15.0" fill="rgb(243,1,42)" rx="2" ry="2" />
<text  x="1085.86" y="335.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (2 samples, 0.05%)</title><rect x="1154.9" y="389" width="0.5" height="15.0" fill="rgb(235,177,43)" rx="2" ry="2" />
<text  x="1157.87" y="399.5" ></text>
</g>
<g >
<title>mem_cgroup_commit_charge (1 samples, 0.02%)</title><rect x="1151.7" y="453" width="0.3" height="15.0" fill="rgb(227,62,15)" rx="2" ry="2" />
<text  x="1154.67" y="463.5" ></text>
</g>
<g >
<title>iov_iter_fault_in_readable (1 samples, 0.02%)</title><rect x="55.9" y="389" width="0.3" height="15.0" fill="rgb(238,157,9)" rx="2" ry="2" />
<text  x="58.88" y="399.5" ></text>
</g>
<g >
<title>perf_event_exec (4 samples, 0.10%)</title><rect x="1188.8" y="453" width="1.2" height="15.0" fill="rgb(247,93,21)" rx="2" ry="2" />
<text  x="1191.84" y="463.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="946.4" y="405" width="0.3" height="15.0" fill="rgb(246,8,36)" rx="2" ry="2" />
<text  x="949.39" y="415.5" ></text>
</g>
<g >
<title>sync_regs (1 samples, 0.02%)</title><rect x="1109.6" y="533" width="0.3" height="15.0" fill="rgb(205,171,14)" rx="2" ry="2" />
<text  x="1112.57" y="543.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.12%)</title><rect x="14.6" y="565" width="1.5" height="15.0" fill="rgb(247,157,10)" rx="2" ry="2" />
<text  x="17.65" y="575.5" ></text>
</g>
<g >
<title>__vsprintf_internal (2 samples, 0.05%)</title><rect x="785.5" y="421" width="0.6" height="15.0" fill="rgb(225,103,23)" rx="2" ry="2" />
<text  x="788.54" y="431.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (3 samples, 0.07%)</title><rect x="304.4" y="549" width="0.9" height="15.0" fill="rgb(243,111,13)" rx="2" ry="2" />
<text  x="307.42" y="559.5" ></text>
</g>
<g >
<title>do_user_addr_fault (3 samples, 0.07%)</title><rect x="1108.7" y="485" width="0.9" height="15.0" fill="rgb(214,128,15)" rx="2" ry="2" />
<text  x="1111.70" y="495.5" ></text>
</g>
<g >
<title>schedule (4 samples, 0.10%)</title><rect x="31.8" y="325" width="1.1" height="15.0" fill="rgb(219,168,19)" rx="2" ry="2" />
<text  x="34.78" y="335.5" ></text>
</g>
<g >
<title>sync_regs (7 samples, 0.17%)</title><rect x="1186.8" y="565" width="2.0" height="15.0" fill="rgb(223,156,12)" rx="2" ry="2" />
<text  x="1189.81" y="575.5" ></text>
</g>
<g >
<title>_int_free (4 samples, 0.10%)</title><rect x="933.3" y="437" width="1.2" height="15.0" fill="rgb(229,207,42)" rx="2" ry="2" />
<text  x="936.33" y="447.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="278.6" y="453" width="0.3" height="15.0" fill="rgb(214,12,6)" rx="2" ry="2" />
<text  x="281.58" y="463.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="20.2" y="357" width="0.3" height="15.0" fill="rgb(243,92,1)" rx="2" ry="2" />
<text  x="23.16" y="367.5" ></text>
</g>
<g >
<title>_IO_default_xsputn (79 samples, 1.94%)</title><rect x="133.7" y="549" width="22.9" height="15.0" fill="rgb(217,178,3)" rx="2" ry="2" />
<text  x="136.69" y="559.5" >_..</text>
</g>
<g >
<title>malloc (8 samples, 0.20%)</title><rect x="318.1" y="565" width="2.3" height="15.0" fill="rgb(240,127,0)" rx="2" ry="2" />
<text  x="321.07" y="575.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (1 samples, 0.02%)</title><rect x="10.0" y="421" width="0.3" height="15.0" fill="rgb(229,33,36)" rx="2" ry="2" />
<text  x="13.00" y="431.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="37.3" y="293" width="0.3" height="15.0" fill="rgb(229,76,14)" rx="2" ry="2" />
<text  x="40.29" y="303.5" ></text>
</g>
<g >
<title>alloc_page_buffers (1 samples, 0.02%)</title><rect x="34.1" y="341" width="0.3" height="15.0" fill="rgb(249,226,11)" rx="2" ry="2" />
<text  x="37.10" y="351.5" ></text>
</g>
<g >
<title>truncate_inode_pages_range (34 samples, 0.84%)</title><rect x="20.2" y="373" width="9.8" height="15.0" fill="rgb(248,103,54)" rx="2" ry="2" />
<text  x="23.16" y="383.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (1 samples, 0.02%)</title><rect x="54.1" y="277" width="0.3" height="15.0" fill="rgb(250,104,54)" rx="2" ry="2" />
<text  x="57.13" y="287.5" ></text>
</g>
<g >
<title>__mod_node_page_state (1 samples, 0.02%)</title><rect x="21.0" y="309" width="0.3" height="15.0" fill="rgb(218,106,6)" rx="2" ry="2" />
<text  x="24.03" y="319.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="1082.3" y="229" width="0.3" height="15.0" fill="rgb(238,128,11)" rx="2" ry="2" />
<text  x="1085.28" y="239.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="714.7" y="341" width="0.3" height="15.0" fill="rgb(229,185,30)" rx="2" ry="2" />
<text  x="717.69" y="351.5" ></text>
</g>
<g >
<title>up_write (1 samples, 0.02%)</title><rect x="1134.0" y="469" width="0.3" height="15.0" fill="rgb(246,174,9)" rx="2" ry="2" />
<text  x="1136.96" y="479.5" ></text>
</g>
<g >
<title>std::queue&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::deque&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::front (6 samples, 0.15%)</title><rect x="920.0" y="421" width="1.7" height="15.0" fill="rgb(239,128,10)" rx="2" ry="2" />
<text  x="922.97" y="431.5" ></text>
</g>
<g >
<title>vfs_read (26 samples, 0.64%)</title><rect x="62.6" y="485" width="7.5" height="15.0" fill="rgb(225,68,11)" rx="2" ry="2" />
<text  x="65.55" y="495.5" ></text>
</g>
<g >
<title>x86_pmu_enable (1 samples, 0.02%)</title><rect x="10.0" y="437" width="0.3" height="15.0" fill="rgb(239,167,21)" rx="2" ry="2" />
<text  x="13.00" y="447.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (72 samples, 1.77%)</title><rect x="74.5" y="405" width="20.9" height="15.0" fill="rgb(237,168,15)" rx="2" ry="2" />
<text  x="77.46" y="415.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (2 samples, 0.05%)</title><rect x="1154.9" y="405" width="0.5" height="15.0" fill="rgb(206,158,15)" rx="2" ry="2" />
<text  x="1157.87" y="415.5" ></text>
</g>
<g >
<title>ttwu_do_wakeup (1 samples, 0.02%)</title><rect x="1082.6" y="165" width="0.3" height="15.0" fill="rgb(241,181,24)" rx="2" ry="2" />
<text  x="1085.57" y="175.5" ></text>
</g>
<g >
<title>node_dirty_ok (1 samples, 0.02%)</title><rect x="39.9" y="277" width="0.3" height="15.0" fill="rgb(206,160,29)" rx="2" ry="2" />
<text  x="42.91" y="287.5" ></text>
</g>
<g >
<title>std::deque&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::pop_front (16 samples, 0.39%)</title><rect x="922.0" y="405" width="4.6" height="15.0" fill="rgb(242,40,2)" rx="2" ry="2" />
<text  x="925.00" y="415.5" ></text>
</g>
<g >
<title>generic_file_buffered_read (24 samples, 0.59%)</title><rect x="62.8" y="405" width="7.0" height="15.0" fill="rgb(237,171,44)" rx="2" ry="2" />
<text  x="65.84" y="415.5" ></text>
</g>
<g >
<title>ttwu_do_activate (1 samples, 0.02%)</title><rect x="1082.6" y="181" width="0.3" height="15.0" fill="rgb(242,58,6)" rx="2" ry="2" />
<text  x="1085.57" y="191.5" ></text>
</g>
<g >
<title>get_page_from_freelist (13 samples, 0.32%)</title><rect x="37.9" y="293" width="3.7" height="15.0" fill="rgb(223,150,40)" rx="2" ry="2" />
<text  x="40.87" y="303.5" ></text>
</g>
<g >
<title>switch_fpu_return (1 samples, 0.02%)</title><rect x="98.6" y="533" width="0.2" height="15.0" fill="rgb(220,75,13)" rx="2" ry="2" />
<text  x="101.56" y="543.5" ></text>
</g>
<g >
<title>exit_mmap (7 samples, 0.17%)</title><rect x="1153.4" y="485" width="2.0" height="15.0" fill="rgb(222,25,29)" rx="2" ry="2" />
<text  x="1156.42" y="495.5" ></text>
</g>
<g >
<title>search_binary_handler (4 samples, 0.10%)</title><rect x="1188.8" y="501" width="1.2" height="15.0" fill="rgb(248,164,45)" rx="2" ry="2" />
<text  x="1191.84" y="511.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="278.6" y="533" width="0.3" height="15.0" fill="rgb(220,83,6)" rx="2" ry="2" />
<text  x="281.58" y="543.5" ></text>
</g>
<g >
<title>rmqueue (1 samples, 0.02%)</title><rect x="1150.2" y="405" width="0.3" height="15.0" fill="rgb(237,109,39)" rx="2" ry="2" />
<text  x="1153.22" y="415.5" ></text>
</g>
<g >
<title>unlock_page (1 samples, 0.02%)</title><rect x="30.0" y="373" width="0.3" height="15.0" fill="rgb(213,177,33)" rx="2" ry="2" />
<text  x="33.03" y="383.5" ></text>
</g>
<g >
<title>find_vma (3 samples, 0.07%)</title><rect x="1121.2" y="501" width="0.9" height="15.0" fill="rgb(241,34,36)" rx="2" ry="2" />
<text  x="1124.19" y="511.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.02%)</title><rect x="30.9" y="485" width="0.3" height="15.0" fill="rgb(237,128,8)" rx="2" ry="2" />
<text  x="33.91" y="495.5" ></text>
</g>
<g >
<title>CSV2JSON::WriteJSON (2 samples, 0.05%)</title><rect x="1094.5" y="533" width="0.6" height="15.0" fill="rgb(250,194,44)" rx="2" ry="2" />
<text  x="1097.47" y="543.5" ></text>
</g>
<g >
<title>ext4_mark_inode_dirty (13 samples, 0.32%)</title><rect x="49.2" y="325" width="3.8" height="15.0" fill="rgb(207,103,51)" rx="2" ry="2" />
<text  x="52.20" y="335.5" ></text>
</g>
<g >
<title>malloc (28 samples, 0.69%)</title><rect x="1155.4" y="581" width="8.2" height="15.0" fill="rgb(251,98,11)" rx="2" ry="2" />
<text  x="1158.45" y="591.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="830.8" y="341" width="0.3" height="15.0" fill="rgb(217,38,8)" rx="2" ry="2" />
<text  x="833.83" y="351.5" ></text>
</g>
<g >
<title>finish_task_switch (4 samples, 0.10%)</title><rect x="715.0" y="325" width="1.1" height="15.0" fill="rgb(242,54,41)" rx="2" ry="2" />
<text  x="717.98" y="335.5" ></text>
</g>
<g >
<title>wake_page_function (1 samples, 0.02%)</title><rect x="1082.6" y="245" width="0.3" height="15.0" fill="rgb(210,77,34)" rx="2" ry="2" />
<text  x="1085.57" y="255.5" ></text>
</g>
<g >
<title>x86_pmu_enable (15 samples, 0.37%)</title><rect x="57.9" y="469" width="4.4" height="15.0" fill="rgb(237,143,3)" rx="2" ry="2" />
<text  x="60.91" y="479.5" ></text>
</g>
<g >
<title>__schedule (4 samples, 0.10%)</title><rect x="715.0" y="341" width="1.1" height="15.0" fill="rgb(205,20,33)" rx="2" ry="2" />
<text  x="717.98" y="351.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="1093.6" y="421" width="0.3" height="15.0" fill="rgb(207,156,32)" rx="2" ry="2" />
<text  x="1096.60" y="431.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1154.9" y="341" width="0.3" height="15.0" fill="rgb(223,44,8)" rx="2" ry="2" />
<text  x="1157.87" y="351.5" ></text>
</g>
<g >
<title>prep_new_page (2 samples, 0.05%)</title><rect x="1177.8" y="405" width="0.6" height="15.0" fill="rgb(226,165,32)" rx="2" ry="2" />
<text  x="1180.81" y="415.5" ></text>
</g>
<g >
<title>_IO_old_init (4 samples, 0.10%)</title><rect x="17.8" y="565" width="1.2" height="15.0" fill="rgb(215,128,22)" rx="2" ry="2" />
<text  x="20.84" y="575.5" ></text>
</g>
<g >
<title>std::move&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="1089.0" y="517" width="0.2" height="15.0" fill="rgb(221,218,13)" rx="2" ry="2" />
<text  x="1091.96" y="527.5" ></text>
</g>
<g >
<title>should_fail_alloc_page (1 samples, 0.02%)</title><rect x="1180.1" y="437" width="0.3" height="15.0" fill="rgb(237,198,20)" rx="2" ry="2" />
<text  x="1183.13" y="447.5" ></text>
</g>
<g >
<title>ext4_inode_csum_set (3 samples, 0.07%)</title><rect x="50.4" y="277" width="0.8" height="15.0" fill="rgb(208,86,39)" rx="2" ry="2" />
<text  x="53.36" y="287.5" ></text>
</g>
<g >
<title>try_to_wake_up (28 samples, 0.69%)</title><rect x="308.8" y="453" width="8.1" height="15.0" fill="rgb(239,206,37)" rx="2" ry="2" />
<text  x="311.77" y="463.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="714.4" y="293" width="0.3" height="15.0" fill="rgb(247,227,9)" rx="2" ry="2" />
<text  x="717.40" y="303.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (5 samples, 0.12%)</title><rect x="786.7" y="421" width="1.4" height="15.0" fill="rgb(238,91,18)" rx="2" ry="2" />
<text  x="789.70" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::substr (38 samples, 0.94%)</title><rect x="903.7" y="421" width="11.0" height="15.0" fill="rgb(212,9,17)" rx="2" ry="2" />
<text  x="906.71" y="431.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (1 samples, 0.02%)</title><rect x="31.5" y="405" width="0.3" height="15.0" fill="rgb(218,25,22)" rx="2" ry="2" />
<text  x="34.49" y="415.5" ></text>
</g>
<g >
<title>__do_execve_file.isra.0 (4 samples, 0.10%)</title><rect x="1188.8" y="517" width="1.2" height="15.0" fill="rgb(216,68,27)" rx="2" ry="2" />
<text  x="1191.84" y="527.5" ></text>
</g>
<g >
<title>std::deque&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::emplace_back&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (16 samples, 0.39%)</title><rect x="1089.5" y="485" width="4.7" height="15.0" fill="rgb(227,104,39)" rx="2" ry="2" />
<text  x="1092.54" y="495.5" ></text>
</g>
<g >
<title>find_get_entries (4 samples, 0.10%)</title><rect x="24.5" y="341" width="1.2" height="15.0" fill="rgb(207,69,14)" rx="2" ry="2" />
<text  x="27.52" y="351.5" ></text>
</g>
<g >
<title>do_syscall_64 (90 samples, 2.21%)</title><rect x="72.4" y="533" width="26.2" height="15.0" fill="rgb(225,119,53)" rx="2" ry="2" />
<text  x="75.43" y="543.5" >d..</text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.10%)</title><rect x="22.5" y="261" width="1.1" height="15.0" fill="rgb(219,224,16)" rx="2" ry="2" />
<text  x="25.49" y="271.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (15 samples, 0.37%)</title><rect x="10.3" y="565" width="4.3" height="15.0" fill="rgb(207,225,1)" rx="2" ry="2" />
<text  x="13.29" y="575.5" ></text>
</g>
<g >
<title>delete_from_page_cache_batch (3 samples, 0.07%)</title><rect x="23.6" y="357" width="0.9" height="15.0" fill="rgb(254,109,46)" rx="2" ry="2" />
<text  x="26.65" y="367.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="57.3" y="405" width="0.3" height="15.0" fill="rgb(243,41,6)" rx="2" ry="2" />
<text  x="60.33" y="415.5" ></text>
</g>
<g >
<title>mem_cgroup_from_task (1 samples, 0.02%)</title><rect x="1184.5" y="501" width="0.3" height="15.0" fill="rgb(212,215,33)" rx="2" ry="2" />
<text  x="1187.48" y="511.5" ></text>
</g>
<g >
<title>generic_file_read_iter (24 samples, 0.59%)</title><rect x="62.8" y="421" width="7.0" height="15.0" fill="rgb(236,41,36)" rx="2" ry="2" />
<text  x="65.84" y="431.5" ></text>
</g>
<g >
<title>ext4_bio_write_page (3 samples, 0.07%)</title><rect x="1082.0" y="325" width="0.9" height="15.0" fill="rgb(205,63,7)" rx="2" ry="2" />
<text  x="1084.99" y="335.5" ></text>
</g>
<g >
<title>native_write_msr (1 samples, 0.02%)</title><rect x="182.5" y="453" width="0.3" height="15.0" fill="rgb(228,84,5)" rx="2" ry="2" />
<text  x="185.47" y="463.5" ></text>
</g>
<g >
<title>down_write_trylock (1 samples, 0.02%)</title><rect x="56.7" y="421" width="0.3" height="15.0" fill="rgb(226,184,40)" rx="2" ry="2" />
<text  x="59.75" y="431.5" ></text>
</g>
<g >
<title>lru_cache_add (7 samples, 0.17%)</title><rect x="45.1" y="325" width="2.1" height="15.0" fill="rgb(254,61,48)" rx="2" ry="2" />
<text  x="48.13" y="335.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="48.9" y="293" width="0.3" height="15.0" fill="rgb(228,75,32)" rx="2" ry="2" />
<text  x="51.91" y="303.5" ></text>
</g>
<g >
<title>do_anonymous_page (1 samples, 0.02%)</title><rect x="1184.2" y="485" width="0.3" height="15.0" fill="rgb(224,212,12)" rx="2" ry="2" />
<text  x="1187.19" y="495.5" ></text>
</g>
<g >
<title>ext4_end_bio (1 samples, 0.02%)</title><rect x="1082.3" y="101" width="0.3" height="15.0" fill="rgb(213,144,26)" rx="2" ry="2" />
<text  x="1085.28" y="111.5" ></text>
</g>
<g >
<title>__ext4_journal_get_write_access (1 samples, 0.02%)</title><rect x="52.4" y="293" width="0.3" height="15.0" fill="rgb(220,51,0)" rx="2" ry="2" />
<text  x="55.39" y="303.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="1172.6" y="453" width="0.3" height="15.0" fill="rgb(220,43,39)" rx="2" ry="2" />
<text  x="1175.58" y="463.5" ></text>
</g>
<g >
<title>[unknown] (17 samples, 0.42%)</title><rect x="339.0" y="549" width="4.9" height="15.0" fill="rgb(211,217,33)" rx="2" ry="2" />
<text  x="341.97" y="559.5" ></text>
</g>
<g >
<title>allocate_slab (1 samples, 0.02%)</title><rect x="44.6" y="197" width="0.2" height="15.0" fill="rgb(241,8,34)" rx="2" ry="2" />
<text  x="47.55" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (27 samples, 0.66%)</title><rect x="946.7" y="437" width="7.8" height="15.0" fill="rgb(228,205,27)" rx="2" ry="2" />
<text  x="949.68" y="447.5" ></text>
</g>
<g >
<title>CSV2JSON::ThreadingParseDatas (1 samples, 0.02%)</title><rect x="10.0" y="581" width="0.3" height="15.0" fill="rgb(228,133,5)" rx="2" ry="2" />
<text  x="13.00" y="591.5" ></text>
</g>
<g >
<title>native_write_msr (1 samples, 0.02%)</title><rect x="1136.3" y="405" width="0.3" height="15.0" fill="rgb(210,14,23)" rx="2" ry="2" />
<text  x="1139.28" y="415.5" ></text>
</g>
<g >
<title>ext4_invalidatepage (13 samples, 0.32%)</title><rect x="26.3" y="341" width="3.7" height="15.0" fill="rgb(212,129,29)" rx="2" ry="2" />
<text  x="29.26" y="351.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.10%)</title><rect x="31.8" y="245" width="1.1" height="15.0" fill="rgb(223,22,36)" rx="2" ry="2" />
<text  x="34.78" y="255.5" ></text>
</g>
<g >
<title>iov_iter_copy_from_user_atomic (2 samples, 0.05%)</title><rect x="55.3" y="389" width="0.6" height="15.0" fill="rgb(209,63,26)" rx="2" ry="2" />
<text  x="58.30" y="399.5" ></text>
</g>
<g >
<title>change_pte_range (2 samples, 0.05%)</title><rect x="1126.7" y="469" width="0.6" height="15.0" fill="rgb(230,5,41)" rx="2" ry="2" />
<text  x="1129.70" y="479.5" ></text>
</g>
<g >
<title>native_write_msr (4 samples, 0.10%)</title><rect x="715.0" y="245" width="1.1" height="15.0" fill="rgb(205,197,3)" rx="2" ry="2" />
<text  x="717.98" y="255.5" ></text>
</g>
<g >
<title>std::queue&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::deque&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::empty (2 samples, 0.05%)</title><rect x="919.4" y="421" width="0.6" height="15.0" fill="rgb(228,164,3)" rx="2" ry="2" />
<text  x="922.39" y="431.5" ></text>
</g>
<g >
<title>native_write_msr (1 samples, 0.02%)</title><rect x="10.0" y="405" width="0.3" height="15.0" fill="rgb(228,105,26)" rx="2" ry="2" />
<text  x="13.00" y="415.5" ></text>
</g>
<g >
<title>ext4_alloc_da_blocks (10 samples, 0.25%)</title><rect x="1082.0" y="453" width="2.9" height="15.0" fill="rgb(250,87,41)" rx="2" ry="2" />
<text  x="1084.99" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (7 samples, 0.17%)</title><rect x="914.7" y="421" width="2.1" height="15.0" fill="rgb(212,189,48)" rx="2" ry="2" />
<text  x="917.74" y="431.5" ></text>
</g>
<g >
<title>schedule (21 samples, 0.52%)</title><rect x="1115.1" y="469" width="6.1" height="15.0" fill="rgb(230,225,11)" rx="2" ry="2" />
<text  x="1118.09" y="479.5" ></text>
</g>
<g >
<title>get_page_from_freelist (4 samples, 0.10%)</title><rect x="1149.4" y="421" width="1.1" height="15.0" fill="rgb(241,104,30)" rx="2" ry="2" />
<text  x="1152.35" y="431.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.10%)</title><rect x="1083.1" y="245" width="1.2" height="15.0" fill="rgb(249,224,7)" rx="2" ry="2" />
<text  x="1086.15" y="255.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (24 samples, 0.59%)</title><rect x="62.8" y="437" width="7.0" height="15.0" fill="rgb(248,170,9)" rx="2" ry="2" />
<text  x="65.84" y="447.5" ></text>
</g>
<g >
<title>handle_mm_fault (3 samples, 0.07%)</title><rect x="1108.7" y="469" width="0.9" height="15.0" fill="rgb(240,115,45)" rx="2" ry="2" />
<text  x="1111.70" y="479.5" ></text>
</g>
<g >
<title>__ext4_journal_start_sb (1 samples, 0.02%)</title><rect x="48.9" y="325" width="0.3" height="15.0" fill="rgb(212,118,47)" rx="2" ry="2" />
<text  x="51.91" y="335.5" ></text>
</g>
<g >
<title>zap_pte_range.isra.0 (7 samples, 0.17%)</title><rect x="1153.4" y="421" width="2.0" height="15.0" fill="rgb(236,175,12)" rx="2" ry="2" />
<text  x="1156.42" y="431.5" ></text>
</g>
<g >
<title>perf_pmu_disable.part.0 (1 samples, 0.02%)</title><rect x="73.3" y="373" width="0.3" height="15.0" fill="rgb(253,203,8)" rx="2" ry="2" />
<text  x="76.30" y="383.5" ></text>
</g>
<g >
<title>jbd2_journal_stop (3 samples, 0.07%)</title><rect x="47.5" y="357" width="0.8" height="15.0" fill="rgb(205,149,33)" rx="2" ry="2" />
<text  x="50.46" y="367.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (7 samples, 0.17%)</title><rect x="771.6" y="421" width="2.0" height="15.0" fill="rgb(213,75,42)" rx="2" ry="2" />
<text  x="774.60" y="431.5" ></text>
</g>
<g >
<title>find_get_pages_range_tag (1 samples, 0.02%)</title><rect x="1084.3" y="341" width="0.3" height="15.0" fill="rgb(230,43,13)" rx="2" ry="2" />
<text  x="1087.31" y="351.5" ></text>
</g>
<g >
<title>ext4_inode_table (1 samples, 0.02%)</title><rect x="52.7" y="293" width="0.3" height="15.0" fill="rgb(254,148,44)" rx="2" ry="2" />
<text  x="55.68" y="303.5" ></text>
</g>
<g >
<title>all (4,064 samples, 100%)</title><rect x="10.0" y="613" width="1180.0" height="15.0" fill="rgb(240,103,44)" rx="2" ry="2" />
<text  x="13.00" y="623.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="954.2" y="405" width="0.3" height="15.0" fill="rgb(245,5,28)" rx="2" ry="2" />
<text  x="957.23" y="415.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (4 samples, 0.10%)</title><rect x="1149.4" y="437" width="1.1" height="15.0" fill="rgb(251,68,54)" rx="2" ry="2" />
<text  x="1152.35" y="447.5" ></text>
</g>
<g >
<title>blk_mq_end_request (1 samples, 0.02%)</title><rect x="1082.3" y="149" width="0.3" height="15.0" fill="rgb(252,36,11)" rx="2" ry="2" />
<text  x="1085.28" y="159.5" ></text>
</g>
<g >
<title>__handle_mm_fault (3 samples, 0.07%)</title><rect x="1108.7" y="453" width="0.9" height="15.0" fill="rgb(233,9,28)" rx="2" ry="2" />
<text  x="1111.70" y="463.5" ></text>
</g>
<g >
<title>__x64_sys_openat (35 samples, 0.86%)</title><rect x="20.2" y="517" width="10.1" height="15.0" fill="rgb(229,145,0)" rx="2" ry="2" />
<text  x="23.16" y="527.5" ></text>
</g>
<g >
<title>pick_next_task_fair (1 samples, 0.02%)</title><rect x="946.4" y="341" width="0.3" height="15.0" fill="rgb(220,65,42)" rx="2" ry="2" />
<text  x="949.39" y="351.5" ></text>
</g>
<g >
<title>page_fault (23 samples, 0.57%)</title><rect x="1145.9" y="565" width="6.6" height="15.0" fill="rgb(216,30,0)" rx="2" ry="2" />
<text  x="1148.87" y="575.5" ></text>
</g>
<g >
<title>copy_page_to_iter (11 samples, 0.27%)</title><rect x="63.1" y="389" width="3.2" height="15.0" fill="rgb(233,73,21)" rx="2" ry="2" />
<text  x="66.13" y="399.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;&amp;, std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*&gt;::_Deque_iterator (4 samples, 0.10%)</title><rect x="920.6" y="373" width="1.1" height="15.0" fill="rgb(211,37,32)" rx="2" ry="2" />
<text  x="923.55" y="383.5" ></text>
</g>
<g >
<title>rwsem_optimistic_spin (2 samples, 0.05%)</title><rect x="1168.8" y="469" width="0.6" height="15.0" fill="rgb(219,2,40)" rx="2" ry="2" />
<text  x="1171.80" y="479.5" ></text>
</g>
<g >
<title>std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair (1 samples, 0.02%)</title><rect x="959.7" y="437" width="0.3" height="15.0" fill="rgb(234,68,30)" rx="2" ry="2" />
<text  x="962.75" y="447.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (1 samples, 0.02%)</title><rect x="1140.9" y="565" width="0.3" height="15.0" fill="rgb(232,107,2)" rx="2" ry="2" />
<text  x="1143.93" y="575.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (4 samples, 0.10%)</title><rect x="1083.1" y="277" width="1.2" height="15.0" fill="rgb(217,54,8)" rx="2" ry="2" />
<text  x="1086.15" y="287.5" ></text>
</g>
<g >
<title>update_cfs_rq_h_load (1 samples, 0.02%)</title><rect x="316.6" y="437" width="0.3" height="15.0" fill="rgb(245,123,4)" rx="2" ry="2" />
<text  x="319.61" y="447.5" ></text>
</g>
<g >
<title>native_write_msr (1 samples, 0.02%)</title><rect x="73.3" y="325" width="0.3" height="15.0" fill="rgb(218,22,53)" rx="2" ry="2" />
<text  x="76.30" y="335.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.17%)</title><rect x="1153.4" y="581" width="2.0" height="15.0" fill="rgb(206,205,40)" rx="2" ry="2" />
<text  x="1156.42" y="591.5" ></text>
</g>
<g >
<title>__mprotect (108 samples, 2.66%)</title><rect x="1109.9" y="581" width="31.3" height="15.0" fill="rgb(214,28,15)" rx="2" ry="2" />
<text  x="1112.86" y="591.5" >__..</text>
</g>
<g >
<title>ext4_get_reserved_space (1 samples, 0.02%)</title><rect x="36.7" y="293" width="0.3" height="15.0" fill="rgb(214,170,0)" rx="2" ry="2" />
<text  x="39.71" y="303.5" ></text>
</g>
<g >
<title>find_vma (1 samples, 0.02%)</title><rect x="1147.0" y="501" width="0.3" height="15.0" fill="rgb(224,47,9)" rx="2" ry="2" />
<text  x="1150.03" y="511.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (41 samples, 1.01%)</title><rect x="773.6" y="421" width="11.9" height="15.0" fill="rgb(215,203,41)" rx="2" ry="2" />
<text  x="776.63" y="431.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (1 samples, 0.02%)</title><rect x="57.6" y="517" width="0.3" height="15.0" fill="rgb(220,88,20)" rx="2" ry="2" />
<text  x="60.62" y="527.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (4 samples, 0.10%)</title><rect x="22.5" y="293" width="1.1" height="15.0" fill="rgb(228,28,28)" rx="2" ry="2" />
<text  x="25.49" y="303.5" ></text>
</g>
<g >
<title>may_expand_vm (1 samples, 0.02%)</title><rect x="1122.1" y="501" width="0.2" height="15.0" fill="rgb(220,21,4)" rx="2" ry="2" />
<text  x="1125.06" y="511.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (4 samples, 0.10%)</title><rect x="1182.7" y="421" width="1.2" height="15.0" fill="rgb(221,9,11)" rx="2" ry="2" />
<text  x="1185.74" y="431.5" ></text>
</g>
<g >
<title>main (86 samples, 2.12%)</title><rect x="1084.9" y="565" width="25.0" height="15.0" fill="rgb(245,139,18)" rx="2" ry="2" />
<text  x="1087.89" y="575.5" >m..</text>
</g>
<g >
<title>std::deque&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::begin (4 samples, 0.10%)</title><rect x="920.6" y="389" width="1.1" height="15.0" fill="rgb(228,201,33)" rx="2" ry="2" />
<text  x="923.55" y="399.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (5 samples, 0.12%)</title><rect x="924.0" y="357" width="1.5" height="15.0" fill="rgb(217,70,45)" rx="2" ry="2" />
<text  x="927.04" y="367.5" ></text>
</g>
<g >
<title>account_process_tick (1 samples, 0.02%)</title><rect x="278.6" y="437" width="0.3" height="15.0" fill="rgb(212,52,12)" rx="2" ry="2" />
<text  x="281.58" y="447.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (2 samples, 0.05%)</title><rect x="714.4" y="405" width="0.6" height="15.0" fill="rgb(242,156,26)" rx="2" ry="2" />
<text  x="717.40" y="415.5" ></text>
</g>
<g >
<title>finish_task_switch (4 samples, 0.10%)</title><rect x="1083.1" y="293" width="1.2" height="15.0" fill="rgb(226,126,51)" rx="2" ry="2" />
<text  x="1086.15" y="303.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="954.2" y="389" width="0.3" height="15.0" fill="rgb(248,112,45)" rx="2" ry="2" />
<text  x="957.23" y="399.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;&amp;, std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*&gt;::_M_set_node (1 samples, 0.02%)</title><rect x="1093.6" y="453" width="0.3" height="15.0" fill="rgb(219,35,54)" rx="2" ry="2" />
<text  x="1096.60" y="463.5" ></text>
</g>
<g >
<title>std::operator==&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;&amp;, std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*&gt; (2 samples, 0.05%)</title><rect x="919.4" y="389" width="0.6" height="15.0" fill="rgb(208,29,48)" rx="2" ry="2" />
<text  x="922.39" y="399.5" ></text>
</g>
<g >
<title>security_file_mprotect (1 samples, 0.02%)</title><rect x="1134.5" y="501" width="0.3" height="15.0" fill="rgb(244,170,30)" rx="2" ry="2" />
<text  x="1137.54" y="511.5" ></text>
</g>
<g >
<title>default_wake_function (1 samples, 0.02%)</title><rect x="1082.6" y="213" width="0.3" height="15.0" fill="rgb(207,159,27)" rx="2" ry="2" />
<text  x="1085.57" y="223.5" ></text>
</g>
<g >
<title>ext4_da_reserve_space (1 samples, 0.02%)</title><rect x="36.7" y="325" width="0.3" height="15.0" fill="rgb(213,212,53)" rx="2" ry="2" />
<text  x="39.71" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (5 samples, 0.12%)</title><rect x="1108.4" y="549" width="1.5" height="15.0" fill="rgb(230,62,15)" rx="2" ry="2" />
<text  x="1111.41" y="559.5" ></text>
</g>
<g >
<title>ext4_da_write_end (25 samples, 0.62%)</title><rect x="47.5" y="389" width="7.2" height="15.0" fill="rgb(251,6,47)" rx="2" ry="2" />
<text  x="50.46" y="399.5" ></text>
</g>
<g >
<title>down_read_trylock (1 samples, 0.02%)</title><rect x="1169.4" y="501" width="0.3" height="15.0" fill="rgb(239,213,32)" rx="2" ry="2" />
<text  x="1172.38" y="511.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (20 samples, 0.49%)</title><rect x="1115.4" y="421" width="5.8" height="15.0" fill="rgb(233,229,42)" rx="2" ry="2" />
<text  x="1118.38" y="431.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.10%)</title><rect x="1188.8" y="405" width="1.2" height="15.0" fill="rgb(251,75,32)" rx="2" ry="2" />
<text  x="1191.84" y="415.5" ></text>
</g>
<g >
<title>page_mapping (1 samples, 0.02%)</title><rect x="1082.0" y="309" width="0.3" height="15.0" fill="rgb(220,211,15)" rx="2" ry="2" />
<text  x="1084.99" y="319.5" ></text>
</g>
<g >
<title>do_anonymous_page (43 samples, 1.06%)</title><rect x="1171.7" y="469" width="12.5" height="15.0" fill="rgb(211,89,19)" rx="2" ry="2" />
<text  x="1174.71" y="479.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator (1 samples, 0.02%)</title><rect x="916.8" y="421" width="0.3" height="15.0" fill="rgb(220,210,43)" rx="2" ry="2" />
<text  x="919.78" y="431.5" ></text>
</g>
<g >
<title>__lru_cache_add (1 samples, 0.02%)</title><rect x="44.8" y="325" width="0.3" height="15.0" fill="rgb(222,211,36)" rx="2" ry="2" />
<text  x="47.84" y="335.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="830.8" y="405" width="0.3" height="15.0" fill="rgb(233,133,53)" rx="2" ry="2" />
<text  x="833.83" y="415.5" ></text>
</g>
<g >
<title>std::tuple&lt;void  (1 samples, 0.02%)</title><rect x="10.0" y="549" width="0.3" height="15.0" fill="rgb(250,154,47)" rx="2" ry="2" />
<text  x="13.00" y="559.5" ></text>
</g>
<g >
<title>native_write_msr (4 samples, 0.10%)</title><rect x="31.8" y="213" width="1.1" height="15.0" fill="rgb(234,60,38)" rx="2" ry="2" />
<text  x="34.78" y="223.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.0 (4 samples, 0.10%)</title><rect x="1188.8" y="421" width="1.2" height="15.0" fill="rgb(220,220,32)" rx="2" ry="2" />
<text  x="1191.84" y="431.5" ></text>
</g>
<g >
<title>unlock_page (1 samples, 0.02%)</title><rect x="1082.6" y="309" width="0.3" height="15.0" fill="rgb(230,222,27)" rx="2" ry="2" />
<text  x="1085.57" y="319.5" ></text>
</g>
<g >
<title>ext4_release_file (10 samples, 0.25%)</title><rect x="1082.0" y="469" width="2.9" height="15.0" fill="rgb(226,11,12)" rx="2" ry="2" />
<text  x="1084.99" y="479.5" ></text>
</g>
<g >
<title>__find_get_block (1 samples, 0.02%)</title><rect x="51.8" y="261" width="0.3" height="15.0" fill="rgb(252,100,51)" rx="2" ry="2" />
<text  x="54.81" y="271.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (10 samples, 0.25%)</title><rect x="1082.0" y="533" width="2.9" height="15.0" fill="rgb(206,41,54)" rx="2" ry="2" />
<text  x="1084.99" y="543.5" ></text>
</g>
<g >
<title>pick_next_task_fair (1 samples, 0.02%)</title><rect x="95.4" y="421" width="0.3" height="15.0" fill="rgb(211,28,3)" rx="2" ry="2" />
<text  x="98.36" y="431.5" ></text>
</g>
<g >
<title>__do_execve_file.isra.0 (1 samples, 0.02%)</title><rect x="317.8" y="517" width="0.3" height="15.0" fill="rgb(247,145,36)" rx="2" ry="2" />
<text  x="320.78" y="527.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.0 (1 samples, 0.02%)</title><rect x="1136.3" y="453" width="0.3" height="15.0" fill="rgb(213,219,50)" rx="2" ry="2" />
<text  x="1139.28" y="463.5" ></text>
</g>
<g >
<title>new_sync_write (89 samples, 2.19%)</title><rect x="31.2" y="453" width="25.8" height="15.0" fill="rgb(229,71,53)" rx="2" ry="2" />
<text  x="34.20" y="463.5" >n..</text>
</g>
<g >
<title>std::deque&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_pop_front_aux (3 samples, 0.07%)</title><rect x="925.8" y="389" width="0.8" height="15.0" fill="rgb(222,175,32)" rx="2" ry="2" />
<text  x="928.78" y="399.5" ></text>
</g>
<g >
<title>__count_memcg_events (1 samples, 0.02%)</title><rect x="1181.6" y="421" width="0.3" height="15.0" fill="rgb(226,188,51)" rx="2" ry="2" />
<text  x="1184.58" y="431.5" ></text>
</g>
<g >
<title>do_sys_open (35 samples, 0.86%)</title><rect x="20.2" y="501" width="10.1" height="15.0" fill="rgb(244,138,51)" rx="2" ry="2" />
<text  x="23.16" y="511.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="1108.7" y="405" width="0.3" height="15.0" fill="rgb(239,90,30)" rx="2" ry="2" />
<text  x="1111.70" y="415.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (1 samples, 0.02%)</title><rect x="1108.1" y="437" width="0.3" height="15.0" fill="rgb(229,19,48)" rx="2" ry="2" />
<text  x="1111.12" y="447.5" ></text>
</g>
<g >
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="1136.3" y="485" width="0.3" height="15.0" fill="rgb(243,3,42)" rx="2" ry="2" />
<text  x="1139.28" y="495.5" ></text>
</g>
<g >
<title>rwsem_spin_on_owner (1 samples, 0.02%)</title><rect x="1169.1" y="453" width="0.3" height="15.0" fill="rgb(244,189,54)" rx="2" ry="2" />
<text  x="1172.09" y="463.5" ></text>
</g>
<g >
<title>get_futex_value_locked (3 samples, 0.07%)</title><rect x="97.7" y="453" width="0.9" height="15.0" fill="rgb(236,207,35)" rx="2" ry="2" />
<text  x="100.69" y="463.5" ></text>
</g>
<g >
<title>std::queue&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::deque&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::pop (17 samples, 0.42%)</title><rect x="921.7" y="421" width="4.9" height="15.0" fill="rgb(244,212,35)" rx="2" ry="2" />
<text  x="924.71" y="431.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.0 (4 samples, 0.10%)</title><rect x="715.0" y="293" width="1.1" height="15.0" fill="rgb(229,35,16)" rx="2" ry="2" />
<text  x="717.98" y="303.5" ></text>
</g>
<g >
<title>dequeue_task_fair (3 samples, 0.07%)</title><rect x="73.6" y="405" width="0.9" height="15.0" fill="rgb(237,99,54)" rx="2" ry="2" />
<text  x="76.59" y="415.5" ></text>
</g>
<g >
<title>sysmalloc (87 samples, 2.14%)</title><rect x="1163.6" y="581" width="25.2" height="15.0" fill="rgb(232,62,48)" rx="2" ry="2" />
<text  x="1166.58" y="591.5" >s..</text>
</g>
<g >
<title>pagevec_lru_move_fn (4 samples, 0.10%)</title><rect x="1180.4" y="421" width="1.2" height="15.0" fill="rgb(222,166,11)" rx="2" ry="2" />
<text  x="1183.42" y="431.5" ></text>
</g>
<g >
<title>balance_dirty_pages_ratelimited (4 samples, 0.10%)</title><rect x="31.8" y="389" width="1.1" height="15.0" fill="rgb(206,132,34)" rx="2" ry="2" />
<text  x="34.78" y="399.5" ></text>
</g>
<g >
<title>jbd2_journal_try_to_free_buffers (8 samples, 0.20%)</title><rect x="27.4" y="277" width="2.3" height="15.0" fill="rgb(229,109,27)" rx="2" ry="2" />
<text  x="30.42" y="287.5" ></text>
</g>
<g >
<title>__clone (1 samples, 0.02%)</title><rect x="10.0" y="533" width="0.3" height="15.0" fill="rgb(232,151,41)" rx="2" ry="2" />
<text  x="13.00" y="543.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (2 samples, 0.05%)</title><rect x="55.3" y="373" width="0.6" height="15.0" fill="rgb(251,203,17)" rx="2" ry="2" />
<text  x="58.30" y="383.5" ></text>
</g>
<g >
<title>__add_to_page_cache_locked (11 samples, 0.27%)</title><rect x="41.6" y="325" width="3.2" height="15.0" fill="rgb(216,187,41)" rx="2" ry="2" />
<text  x="44.65" y="335.5" ></text>
</g>
<g >
<title>enqueue_entity (2 samples, 0.05%)</title><rect x="315.5" y="389" width="0.5" height="15.0" fill="rgb(222,141,8)" rx="2" ry="2" />
<text  x="318.45" y="399.5" ></text>
</g>
<g >
<title>CSV2JSON::Split2List (1,221 samples, 30.04%)</title><rect x="361.6" y="421" width="354.5" height="15.0" fill="rgb(225,180,16)" rx="2" ry="2" />
<text  x="364.62" y="431.5" >CSV2JSON::Split2List</text>
</g>
<g >
<title>__perf_event_task_sched_in (4 samples, 0.10%)</title><rect x="35.6" y="245" width="1.1" height="15.0" fill="rgb(206,189,46)" rx="2" ry="2" />
<text  x="38.55" y="255.5" ></text>
</g>
<g >
<title>do_user_addr_fault (55 samples, 1.35%)</title><rect x="1168.8" y="517" width="16.0" height="15.0" fill="rgb(250,109,4)" rx="2" ry="2" />
<text  x="1171.80" y="527.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (72 samples, 1.77%)</title><rect x="74.5" y="357" width="20.9" height="15.0" fill="rgb(253,128,29)" rx="2" ry="2" />
<text  x="77.46" y="367.5" ></text>
</g>
<g >
<title>crc32c_pcl_intel_update (2 samples, 0.05%)</title><rect x="50.6" y="229" width="0.6" height="15.0" fill="rgb(234,73,26)" rx="2" ry="2" />
<text  x="53.65" y="239.5" ></text>
</g>
<g >
<title>ttwu_do_activate (7 samples, 0.17%)</title><rect x="314.6" y="437" width="2.0" height="15.0" fill="rgb(243,122,10)" rx="2" ry="2" />
<text  x="317.58" y="447.5" ></text>
</g>
<g >
<title>alloc_buffer_head (1 samples, 0.02%)</title><rect x="34.1" y="325" width="0.3" height="15.0" fill="rgb(249,39,20)" rx="2" ry="2" />
<text  x="37.10" y="335.5" ></text>
</g>
<g >
<title>block_write_end (6 samples, 0.15%)</title><rect x="53.0" y="357" width="1.7" height="15.0" fill="rgb(206,86,42)" rx="2" ry="2" />
<text  x="55.97" y="367.5" ></text>
</g>
<g >
<title>enqueue_task_fair (5 samples, 0.12%)</title><rect x="314.6" y="405" width="1.4" height="15.0" fill="rgb(241,124,45)" rx="2" ry="2" />
<text  x="317.58" y="415.5" ></text>
</g>
<g >
<title>futex_wake (36 samples, 0.89%)</title><rect x="306.5" y="485" width="10.4" height="15.0" fill="rgb(226,37,34)" rx="2" ry="2" />
<text  x="309.45" y="495.5" ></text>
</g>
<g >
<title>release_pages (7 samples, 0.17%)</title><rect x="20.5" y="341" width="2.0" height="15.0" fill="rgb(241,215,19)" rx="2" ry="2" />
<text  x="23.45" y="351.5" ></text>
</g>
<g >
<title>__mod_node_page_state (1 samples, 0.02%)</title><rect x="1151.1" y="373" width="0.3" height="15.0" fill="rgb(240,137,3)" rx="2" ry="2" />
<text  x="1154.09" y="383.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.10%)</title><rect x="35.6" y="197" width="1.1" height="15.0" fill="rgb(237,174,43)" rx="2" ry="2" />
<text  x="38.55" y="207.5" ></text>
</g>
<g >
<title>__set_page_dirty (2 samples, 0.05%)</title><rect x="53.8" y="309" width="0.6" height="15.0" fill="rgb(220,121,34)" rx="2" ry="2" />
<text  x="56.84" y="319.5" ></text>
</g>
<g >
<title>rmqueue (4 samples, 0.10%)</title><rect x="1178.4" y="405" width="1.1" height="15.0" fill="rgb(210,76,2)" rx="2" ry="2" />
<text  x="1181.39" y="415.5" ></text>
</g>
<g >
<title>__GI___libc_write (95 samples, 2.34%)</title><rect x="30.3" y="565" width="27.6" height="15.0" fill="rgb(246,48,53)" rx="2" ry="2" />
<text  x="33.32" y="575.5" >_..</text>
</g>
<g >
<title>__pagevec_release (7 samples, 0.17%)</title><rect x="20.5" y="357" width="2.0" height="15.0" fill="rgb(241,47,38)" rx="2" ry="2" />
<text  x="23.45" y="367.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1163.3" y="565" width="0.3" height="15.0" fill="rgb(220,13,54)" rx="2" ry="2" />
<text  x="1166.29" y="575.5" ></text>
</g>
<g >
<title>get_futex_key (3 samples, 0.07%)</title><rect x="307.9" y="469" width="0.9" height="15.0" fill="rgb(213,151,4)" rx="2" ry="2" />
<text  x="310.90" y="479.5" ></text>
</g>
<g >
<title>ext4_finish_bio (1 samples, 0.02%)</title><rect x="1082.3" y="85" width="0.3" height="15.0" fill="rgb(225,110,43)" rx="2" ry="2" />
<text  x="1085.28" y="95.5" ></text>
</g>
<g >
<title>__ext4_journal_start_sb (3 samples, 0.07%)</title><rect x="32.9" y="373" width="0.9" height="15.0" fill="rgb(231,169,12)" rx="2" ry="2" />
<text  x="35.94" y="383.5" ></text>
</g>
<g >
<title>_raw_spin_lock (2 samples, 0.05%)</title><rect x="1125.5" y="453" width="0.6" height="15.0" fill="rgb(253,46,35)" rx="2" ry="2" />
<text  x="1128.54" y="463.5" ></text>
</g>
<g >
<title>__x64_sys_futex (2 samples, 0.05%)</title><rect x="305.3" y="533" width="0.6" height="15.0" fill="rgb(211,119,23)" rx="2" ry="2" />
<text  x="308.29" y="543.5" ></text>
</g>
<g >
<title>std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::~pair (1 samples, 0.02%)</title><rect x="925.5" y="357" width="0.3" height="15.0" fill="rgb(222,34,25)" rx="2" ry="2" />
<text  x="928.49" y="367.5" ></text>
</g>
<g >
<title>alloc_slab_page (1 samples, 0.02%)</title><rect x="44.6" y="181" width="0.2" height="15.0" fill="rgb(220,99,31)" rx="2" ry="2" />
<text  x="47.55" y="191.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1082.3" y="293" width="0.3" height="15.0" fill="rgb(209,214,33)" rx="2" ry="2" />
<text  x="1085.28" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (13 samples, 0.32%)</title><rect x="789.0" y="421" width="3.8" height="15.0" fill="rgb(237,32,43)" rx="2" ry="2" />
<text  x="792.02" y="431.5" ></text>
</g>
<g >
<title>std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair (1 samples, 0.02%)</title><rect x="1093.0" y="453" width="0.3" height="15.0" fill="rgb(227,102,37)" rx="2" ry="2" />
<text  x="1096.02" y="463.5" ></text>
</g>
<g >
<title>jbd2_journal_get_write_access (1 samples, 0.02%)</title><rect x="52.4" y="277" width="0.3" height="15.0" fill="rgb(225,10,42)" rx="2" ry="2" />
<text  x="55.39" y="287.5" ></text>
</g>
<g >
<title>__mod_zone_page_state (1 samples, 0.02%)</title><rect x="1179.3" y="389" width="0.2" height="15.0" fill="rgb(251,4,26)" rx="2" ry="2" />
<text  x="1182.26" y="399.5" ></text>
</g>
<g >
<title>schedule_tail (15 samples, 0.37%)</title><rect x="57.9" y="533" width="4.4" height="15.0" fill="rgb(221,72,20)" rx="2" ry="2" />
<text  x="60.91" y="543.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.02%)</title><rect x="1134.8" y="453" width="0.3" height="15.0" fill="rgb(246,30,6)" rx="2" ry="2" />
<text  x="1137.83" y="463.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="1091.3" y="437" width="0.3" height="15.0" fill="rgb(213,137,54)" rx="2" ry="2" />
<text  x="1094.28" y="447.5" ></text>
</g>
<g >
<title>blk_mq_complete_request (1 samples, 0.02%)</title><rect x="1082.3" y="197" width="0.3" height="15.0" fill="rgb(224,16,32)" rx="2" ry="2" />
<text  x="1085.28" y="207.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (1 samples, 0.02%)</title><rect x="74.2" y="357" width="0.3" height="15.0" fill="rgb(207,192,54)" rx="2" ry="2" />
<text  x="77.17" y="367.5" ></text>
</g>
<g >
<title>update_load_avg (1 samples, 0.02%)</title><rect x="95.4" y="389" width="0.3" height="15.0" fill="rgb(227,122,16)" rx="2" ry="2" />
<text  x="98.36" y="399.5" ></text>
</g>
<g >
<title>load_elf_binary (1 samples, 0.02%)</title><rect x="317.8" y="485" width="0.3" height="15.0" fill="rgb(219,48,48)" rx="2" ry="2" />
<text  x="320.78" y="495.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="714.4" y="357" width="0.3" height="15.0" fill="rgb(214,176,35)" rx="2" ry="2" />
<text  x="717.40" y="367.5" ></text>
</g>
<g >
<title>__queue_work (1 samples, 0.02%)</title><rect x="337.2" y="421" width="0.3" height="15.0" fill="rgb(227,87,10)" rx="2" ry="2" />
<text  x="340.23" y="431.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (4 samples, 0.10%)</title><rect x="1167.6" y="565" width="1.2" height="15.0" fill="rgb(233,154,54)" rx="2" ry="2" />
<text  x="1170.64" y="575.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void  (2,123 samples, 52.24%)</title><rect x="343.9" y="485" width="616.4" height="15.0" fill="rgb(219,4,12)" rx="2" ry="2" />
<text  x="346.91" y="495.5" >std::thread::_Invoker&lt;std::tuple&lt;void </text>
</g>
<g >
<title>add_transaction_credits (1 samples, 0.02%)</title><rect x="33.5" y="325" width="0.3" height="15.0" fill="rgb(242,154,9)" rx="2" ry="2" />
<text  x="36.52" y="335.5" ></text>
</g>
<g >
<title>record_times (1 samples, 0.02%)</title><rect x="1115.1" y="421" width="0.3" height="15.0" fill="rgb(239,9,20)" rx="2" ry="2" />
<text  x="1118.09" y="431.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="337.2" y="517" width="0.3" height="15.0" fill="rgb(245,0,46)" rx="2" ry="2" />
<text  x="340.23" y="527.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="771.3" y="325" width="0.3" height="15.0" fill="rgb(238,214,17)" rx="2" ry="2" />
<text  x="774.31" y="335.5" ></text>
</g>
<g >
<title>__vsprintf_internal (511 samples, 12.57%)</title><rect x="130.5" y="565" width="148.4" height="15.0" fill="rgb(246,215,18)" rx="2" ry="2" />
<text  x="133.50" y="575.5" >__vsprintf_internal</text>
</g>
<g >
<title>std::getline&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (3 samples, 0.07%)</title><rect x="343.0" y="533" width="0.9" height="15.0" fill="rgb(215,72,40)" rx="2" ry="2" />
<text  x="346.04" y="543.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="714.4" y="341" width="0.3" height="15.0" fill="rgb(216,172,31)" rx="2" ry="2" />
<text  x="717.40" y="351.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="954.2" y="341" width="0.3" height="15.0" fill="rgb(213,109,51)" rx="2" ry="2" />
<text  x="957.23" y="351.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.02%)</title><rect x="922.9" y="357" width="0.3" height="15.0" fill="rgb(247,109,50)" rx="2" ry="2" />
<text  x="925.87" y="367.5" ></text>
</g>
<g >
<title>fprintf (41 samples, 1.01%)</title><rect x="1095.1" y="533" width="11.9" height="15.0" fill="rgb(221,62,41)" rx="2" ry="2" />
<text  x="1098.05" y="543.5" ></text>
</g>
<g >
<title>__slab_alloc (1 samples, 0.02%)</title><rect x="44.6" y="245" width="0.2" height="15.0" fill="rgb(230,10,0)" rx="2" ry="2" />
<text  x="47.55" y="255.5" ></text>
</g>
<g >
<title>__schedule (5 samples, 0.12%)</title><rect x="1082.9" y="309" width="1.4" height="15.0" fill="rgb(218,219,21)" rx="2" ry="2" />
<text  x="1085.86" y="319.5" ></text>
</g>
<g >
<title>rwsem_spin_on_owner (1 samples, 0.02%)</title><rect x="1114.8" y="453" width="0.3" height="15.0" fill="rgb(215,196,38)" rx="2" ry="2" />
<text  x="1117.80" y="463.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.10%)</title><rect x="35.6" y="213" width="1.1" height="15.0" fill="rgb(226,57,52)" rx="2" ry="2" />
<text  x="38.55" y="223.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (2 samples, 0.05%)</title><rect x="336.9" y="533" width="0.6" height="15.0" fill="rgb(209,224,35)" rx="2" ry="2" />
<text  x="339.94" y="543.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="57.3" y="501" width="0.3" height="15.0" fill="rgb(247,174,7)" rx="2" ry="2" />
<text  x="60.33" y="511.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="57.3" y="421" width="0.3" height="15.0" fill="rgb(239,130,39)" rx="2" ry="2" />
<text  x="60.33" y="431.5" ></text>
</g>
<g >
<title>__lock_page (5 samples, 0.12%)</title><rect x="1082.9" y="357" width="1.4" height="15.0" fill="rgb(245,167,11)" rx="2" ry="2" />
<text  x="1085.86" y="367.5" ></text>
</g>
<g >
<title>__count_memcg_events (1 samples, 0.02%)</title><rect x="1170.3" y="485" width="0.2" height="15.0" fill="rgb(231,73,43)" rx="2" ry="2" />
<text  x="1173.26" y="495.5" ></text>
</g>
<g >
<title>hugepage_vma_check (1 samples, 0.02%)</title><rect x="1133.7" y="469" width="0.3" height="15.0" fill="rgb(209,117,11)" rx="2" ry="2" />
<text  x="1136.67" y="479.5" ></text>
</g>
<g >
<title>alloc_pages_vma (1 samples, 0.02%)</title><rect x="1108.7" y="421" width="0.3" height="15.0" fill="rgb(227,214,48)" rx="2" ry="2" />
<text  x="1111.70" y="431.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1136.3" y="533" width="0.3" height="15.0" fill="rgb(248,169,38)" rx="2" ry="2" />
<text  x="1139.28" y="543.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="337.2" y="501" width="0.3" height="15.0" fill="rgb(229,136,44)" rx="2" ry="2" />
<text  x="340.23" y="511.5" ></text>
</g>
<g >
<title>account_page_dirtied (1 samples, 0.02%)</title><rect x="54.1" y="293" width="0.3" height="15.0" fill="rgb(247,147,14)" rx="2" ry="2" />
<text  x="57.13" y="303.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="1154.9" y="309" width="0.3" height="15.0" fill="rgb(235,49,14)" rx="2" ry="2" />
<text  x="1157.87" y="319.5" ></text>
</g>
<g >
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="337.2" y="453" width="0.3" height="15.0" fill="rgb(229,63,41)" rx="2" ry="2" />
<text  x="340.23" y="463.5" ></text>
</g>
<g >
<title>__mod_zone_page_state (1 samples, 0.02%)</title><rect x="21.6" y="325" width="0.3" height="15.0" fill="rgb(211,76,16)" rx="2" ry="2" />
<text  x="24.61" y="335.5" ></text>
</g>
<g >
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="10.0" y="485" width="0.3" height="15.0" fill="rgb(239,134,15)" rx="2" ry="2" />
<text  x="13.00" y="495.5" ></text>
</g>
<g >
<title>__pagevec_lru_add_fn (4 samples, 0.10%)</title><rect x="1150.5" y="405" width="1.2" height="15.0" fill="rgb(252,129,14)" rx="2" ry="2" />
<text  x="1153.51" y="415.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (2 samples, 0.05%)</title><rect x="1150.8" y="389" width="0.6" height="15.0" fill="rgb(220,105,46)" rx="2" ry="2" />
<text  x="1153.80" y="399.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="278.6" y="501" width="0.3" height="15.0" fill="rgb(209,172,52)" rx="2" ry="2" />
<text  x="281.58" y="511.5" ></text>
</g>
<g >
<title>do_page_fault (3 samples, 0.07%)</title><rect x="1108.7" y="517" width="0.9" height="15.0" fill="rgb(232,185,18)" rx="2" ry="2" />
<text  x="1111.70" y="527.5" ></text>
</g>
<g >
<title>__rb_insert_augmented (1 samples, 0.02%)</title><rect x="1132.8" y="453" width="0.3" height="15.0" fill="rgb(221,37,19)" rx="2" ry="2" />
<text  x="1135.80" y="463.5" ></text>
</g>
<g >
<title>search_binary_handler (1 samples, 0.02%)</title><rect x="317.8" y="501" width="0.3" height="15.0" fill="rgb(242,17,8)" rx="2" ry="2" />
<text  x="320.78" y="511.5" ></text>
</g>
<g >
<title>do_page_fault (58 samples, 1.43%)</title><rect x="1168.8" y="549" width="16.8" height="15.0" fill="rgb(247,157,49)" rx="2" ry="2" />
<text  x="1171.80" y="559.5" ></text>
</g>
<g >
<title>__x64_sys_execve (1 samples, 0.02%)</title><rect x="317.8" y="533" width="0.3" height="15.0" fill="rgb(248,215,31)" rx="2" ry="2" />
<text  x="320.78" y="543.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="1108.1" y="469" width="0.3" height="15.0" fill="rgb(223,13,26)" rx="2" ry="2" />
<text  x="1111.12" y="479.5" ></text>
</g>
<g >
<title>set_next_entity (1 samples, 0.02%)</title><rect x="95.4" y="405" width="0.3" height="15.0" fill="rgb(235,27,28)" rx="2" ry="2" />
<text  x="98.36" y="415.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.0 (12 samples, 0.30%)</title><rect x="66.3" y="309" width="3.5" height="15.0" fill="rgb(247,109,30)" rx="2" ry="2" />
<text  x="69.33" y="319.5" ></text>
</g>
<g >
<title>sync_regs (3 samples, 0.07%)</title><rect x="1152.5" y="565" width="0.9" height="15.0" fill="rgb(214,117,49)" rx="2" ry="2" />
<text  x="1155.54" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign (34 samples, 0.84%)</title><rect x="936.8" y="437" width="9.9" height="15.0" fill="rgb(227,48,52)" rx="2" ry="2" />
<text  x="939.81" y="447.5" ></text>
</g>
<g >
<title>____fput (10 samples, 0.25%)</title><rect x="1082.0" y="501" width="2.9" height="15.0" fill="rgb(213,201,20)" rx="2" ry="2" />
<text  x="1084.99" y="511.5" ></text>
</g>
<g >
<title>x86_pmu_enable (72 samples, 1.77%)</title><rect x="74.5" y="373" width="20.9" height="15.0" fill="rgb(237,42,11)" rx="2" ry="2" />
<text  x="77.46" y="383.5" ></text>
</g>
<g >
<title>down_write (2 samples, 0.05%)</title><rect x="1133.1" y="469" width="0.6" height="15.0" fill="rgb(212,114,31)" rx="2" ry="2" />
<text  x="1136.09" y="479.5" ></text>
</g>
<g >
<title>ktime_get (1 samples, 0.02%)</title><rect x="182.2" y="453" width="0.3" height="15.0" fill="rgb(225,132,28)" rx="2" ry="2" />
<text  x="185.18" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.02%)</title><rect x="1087.2" y="517" width="0.3" height="15.0" fill="rgb(239,159,46)" rx="2" ry="2" />
<text  x="1090.21" y="527.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (2 samples, 0.05%)</title><rect x="714.4" y="389" width="0.6" height="15.0" fill="rgb(207,143,38)" rx="2" ry="2" />
<text  x="717.40" y="399.5" ></text>
</g>
<g >
<title>[C2J] (1 samples, 0.02%)</title><rect x="1086.3" y="517" width="0.3" height="15.0" fill="rgb(247,82,44)" rx="2" ry="2" />
<text  x="1089.34" y="527.5" ></text>
</g>
<g >
<title>__x64_sys_futex (38 samples, 0.94%)</title><rect x="306.2" y="517" width="11.0" height="15.0" fill="rgb(254,156,36)" rx="2" ry="2" />
<text  x="309.16" y="527.5" ></text>
</g>
<g >
<title>__vfprintf_internal (266 samples, 6.55%)</title><rect x="201.6" y="549" width="77.3" height="15.0" fill="rgb(240,116,50)" rx="2" ry="2" />
<text  x="204.63" y="559.5" >__vfprin..</text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="714.7" y="357" width="0.3" height="15.0" fill="rgb(221,158,51)" rx="2" ry="2" />
<text  x="717.69" y="367.5" ></text>
</g>
<g >
<title>__strchrnul_avx2 (90 samples, 2.21%)</title><rect x="156.6" y="549" width="26.2" height="15.0" fill="rgb(230,182,1)" rx="2" ry="2" />
<text  x="159.63" y="559.5" >_..</text>
</g>
<g >
<title>__count_memcg_events (1 samples, 0.02%)</title><rect x="1151.7" y="421" width="0.3" height="15.0" fill="rgb(220,218,42)" rx="2" ry="2" />
<text  x="1154.67" y="431.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="1123.2" y="469" width="0.3" height="15.0" fill="rgb(230,52,52)" rx="2" ry="2" />
<text  x="1126.22" y="479.5" ></text>
</g>
<g >
<title>schedule (79 samples, 1.94%)</title><rect x="73.0" y="453" width="22.9" height="15.0" fill="rgb(236,122,0)" rx="2" ry="2" />
<text  x="76.01" y="463.5" >s..</text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="771.3" y="389" width="0.3" height="15.0" fill="rgb(210,22,18)" rx="2" ry="2" />
<text  x="774.31" y="399.5" ></text>
</g>
<g >
<title>check_preempt_curr (1 samples, 0.02%)</title><rect x="1082.6" y="149" width="0.3" height="15.0" fill="rgb(207,223,50)" rx="2" ry="2" />
<text  x="1085.57" y="159.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::destroy&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (11 samples, 0.27%)</title><rect x="922.6" y="373" width="3.2" height="15.0" fill="rgb(206,11,7)" rx="2" ry="2" />
<text  x="925.58" y="383.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (2,123 samples, 52.24%)</title><rect x="343.9" y="533" width="616.4" height="15.0" fill="rgb(210,47,54)" rx="2" ry="2" />
<text  x="346.91" y="543.5" >[libstdc++.so.6.0.28]</text>
</g>
<g >
<title>clear_page_erms (6 samples, 0.15%)</title><rect x="38.2" y="277" width="1.7" height="15.0" fill="rgb(211,60,32)" rx="2" ry="2" />
<text  x="41.16" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (8 samples, 0.20%)</title><rect x="1090.7" y="453" width="2.3" height="15.0" fill="rgb(223,4,33)" rx="2" ry="2" />
<text  x="1093.70" y="463.5" ></text>
</g>
<g >
<title>__libc_read (26 samples, 0.64%)</title><rect x="62.6" y="565" width="7.5" height="15.0" fill="rgb(208,199,18)" rx="2" ry="2" />
<text  x="65.55" y="575.5" ></text>
</g>
<g >
<title>__filemap_fdatawrite_range (10 samples, 0.25%)</title><rect x="1082.0" y="421" width="2.9" height="15.0" fill="rgb(213,155,32)" rx="2" ry="2" />
<text  x="1084.99" y="431.5" ></text>
</g>
<g >
<title>unmap_page_range (7 samples, 0.17%)</title><rect x="1153.4" y="437" width="2.0" height="15.0" fill="rgb(205,135,27)" rx="2" ry="2" />
<text  x="1156.42" y="447.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (1 samples, 0.02%)</title><rect x="1136.3" y="469" width="0.3" height="15.0" fill="rgb(212,73,52)" rx="2" ry="2" />
<text  x="1139.28" y="479.5" ></text>
</g>
<g >
<title>CSV2JSON::ReadCSV (33 samples, 0.81%)</title><rect x="1084.9" y="533" width="9.6" height="15.0" fill="rgb(239,123,14)" rx="2" ry="2" />
<text  x="1087.89" y="543.5" ></text>
</g>
<g >
<title>ext4_releasepage (8 samples, 0.20%)</title><rect x="27.4" y="293" width="2.3" height="15.0" fill="rgb(252,32,19)" rx="2" ry="2" />
<text  x="30.42" y="303.5" ></text>
</g>
<g >
<title>native_write_msr (4 samples, 0.10%)</title><rect x="1083.1" y="213" width="1.2" height="15.0" fill="rgb(227,168,11)" rx="2" ry="2" />
<text  x="1086.15" y="223.5" ></text>
</g>
<g >
<title>__vfs_read (24 samples, 0.59%)</title><rect x="62.8" y="469" width="7.0" height="15.0" fill="rgb(251,69,15)" rx="2" ry="2" />
<text  x="65.84" y="479.5" ></text>
</g>
<g >
<title>bio_endio (1 samples, 0.02%)</title><rect x="1082.3" y="117" width="0.3" height="15.0" fill="rgb(253,204,1)" rx="2" ry="2" />
<text  x="1085.28" y="127.5" ></text>
</g>
<g >
<title>xas_find (3 samples, 0.07%)</title><rect x="24.8" y="325" width="0.9" height="15.0" fill="rgb(241,205,42)" rx="2" ry="2" />
<text  x="27.81" y="335.5" ></text>
</g>
<g >
<title>__vfs_write (89 samples, 2.19%)</title><rect x="31.2" y="469" width="25.8" height="15.0" fill="rgb(228,202,9)" rx="2" ry="2" />
<text  x="34.20" y="479.5" >_..</text>
</g>
<g >
<title>__schedule (78 samples, 1.92%)</title><rect x="73.3" y="437" width="22.6" height="15.0" fill="rgb(226,171,29)" rx="2" ry="2" />
<text  x="76.30" y="447.5" >_..</text>
</g>
<g >
<title>ksys_read (26 samples, 0.64%)</title><rect x="62.6" y="501" width="7.5" height="15.0" fill="rgb(245,198,49)" rx="2" ry="2" />
<text  x="65.55" y="511.5" ></text>
</g>
<g >
<title>truncate_cleanup_page (15 samples, 0.37%)</title><rect x="25.7" y="357" width="4.3" height="15.0" fill="rgb(223,42,9)" rx="2" ry="2" />
<text  x="28.68" y="367.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="935.9" y="437" width="0.3" height="15.0" fill="rgb(241,225,22)" rx="2" ry="2" />
<text  x="938.94" y="447.5" ></text>
</g>
<g >
<title>mpage_submit_page (3 samples, 0.07%)</title><rect x="1082.0" y="341" width="0.9" height="15.0" fill="rgb(248,163,22)" rx="2" ry="2" />
<text  x="1084.99" y="351.5" ></text>
</g>
<g >
<title>get_futex_key (1 samples, 0.02%)</title><rect x="97.4" y="453" width="0.3" height="15.0" fill="rgb(223,220,20)" rx="2" ry="2" />
<text  x="100.40" y="463.5" ></text>
</g>
<g >
<title>native_write_msr (15 samples, 0.37%)</title><rect x="57.9" y="437" width="4.4" height="15.0" fill="rgb(236,210,46)" rx="2" ry="2" />
<text  x="60.91" y="447.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="44.6" y="149" width="0.2" height="15.0" fill="rgb(213,22,50)" rx="2" ry="2" />
<text  x="47.55" y="159.5" ></text>
</g>
<g >
<title>do_syscall_64 (26 samples, 0.64%)</title><rect x="62.6" y="533" width="7.5" height="15.0" fill="rgb(218,42,11)" rx="2" ry="2" />
<text  x="65.55" y="543.5" ></text>
</g>
<g >
<title>rwsem_wake.isra.0 (1 samples, 0.02%)</title><rect x="1134.8" y="485" width="0.3" height="15.0" fill="rgb(208,23,25)" rx="2" ry="2" />
<text  x="1137.83" y="495.5" ></text>
</g>
<g >
<title>std::deque&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_push_back_aux&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (3 samples, 0.07%)</title><rect x="1093.3" y="469" width="0.9" height="15.0" fill="rgb(232,51,45)" rx="2" ry="2" />
<text  x="1096.31" y="479.5" ></text>
</g>
<g >
<title>std::deque&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::empty (2 samples, 0.05%)</title><rect x="919.4" y="405" width="0.6" height="15.0" fill="rgb(250,38,43)" rx="2" ry="2" />
<text  x="922.39" y="415.5" ></text>
</g>
<g >
<title>xas_store (2 samples, 0.05%)</title><rect x="23.9" y="341" width="0.6" height="15.0" fill="rgb(252,80,16)" rx="2" ry="2" />
<text  x="26.94" y="351.5" ></text>
</g>
<g >
<title>ktime_get_update_offsets_now (1 samples, 0.02%)</title><rect x="1154.9" y="293" width="0.3" height="15.0" fill="rgb(224,175,6)" rx="2" ry="2" />
<text  x="1157.87" y="303.5" ></text>
</g>
<g >
<title>notify_change (35 samples, 0.86%)</title><rect x="20.2" y="421" width="10.1" height="15.0" fill="rgb(214,180,26)" rx="2" ry="2" />
<text  x="23.16" y="431.5" ></text>
</g>
<g >
<title>x86_pmu_disable (1 samples, 0.02%)</title><rect x="73.3" y="357" width="0.3" height="15.0" fill="rgb(206,20,46)" rx="2" ry="2" />
<text  x="76.30" y="367.5" ></text>
</g>
<g >
<title>handle_mm_fault (17 samples, 0.42%)</title><rect x="1147.3" y="501" width="5.0" height="15.0" fill="rgb(219,217,40)" rx="2" ry="2" />
<text  x="1150.32" y="511.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="1082.3" y="277" width="0.3" height="15.0" fill="rgb(247,221,29)" rx="2" ry="2" />
<text  x="1085.28" y="287.5" ></text>
</g>
<g >
<title>__mod_node_page_state (1 samples, 0.02%)</title><rect x="21.3" y="325" width="0.3" height="15.0" fill="rgb(220,216,26)" rx="2" ry="2" />
<text  x="24.32" y="335.5" ></text>
</g>
<g >
<title>generic_write_end (22 samples, 0.54%)</title><rect x="48.3" y="373" width="6.4" height="15.0" fill="rgb(248,2,7)" rx="2" ry="2" />
<text  x="51.33" y="383.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="337.2" y="485" width="0.3" height="15.0" fill="rgb(246,145,48)" rx="2" ry="2" />
<text  x="340.23" y="495.5" ></text>
</g>
<g >
<title>__mod_memcg_state (1 samples, 0.02%)</title><rect x="1150.8" y="373" width="0.3" height="15.0" fill="rgb(222,143,31)" rx="2" ry="2" />
<text  x="1153.80" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (2 samples, 0.05%)</title><rect x="1087.5" y="517" width="0.6" height="15.0" fill="rgb(250,191,40)" rx="2" ry="2" />
<text  x="1090.50" y="527.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="57.3" y="485" width="0.3" height="15.0" fill="rgb(252,214,30)" rx="2" ry="2" />
<text  x="60.33" y="495.5" ></text>
</g>
<g >
<title>get_futex_key (1 samples, 0.02%)</title><rect x="316.9" y="485" width="0.3" height="15.0" fill="rgb(236,171,33)" rx="2" ry="2" />
<text  x="319.90" y="495.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1163.3" y="549" width="0.3" height="15.0" fill="rgb(233,162,51)" rx="2" ry="2" />
<text  x="1166.29" y="559.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (2 samples, 0.05%)</title><rect x="336.9" y="549" width="0.6" height="15.0" fill="rgb(217,111,35)" rx="2" ry="2" />
<text  x="339.94" y="559.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="830.8" y="357" width="0.3" height="15.0" fill="rgb(232,207,20)" rx="2" ry="2" />
<text  x="833.83" y="367.5" ></text>
</g>
<g >
<title>change_protection_range (11 samples, 0.27%)</title><rect x="1123.5" y="469" width="3.2" height="15.0" fill="rgb(240,81,18)" rx="2" ry="2" />
<text  x="1126.51" y="479.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="954.2" y="325" width="0.3" height="15.0" fill="rgb(210,132,9)" rx="2" ry="2" />
<text  x="957.23" y="335.5" ></text>
</g>
<g >
<title>__schedule (4 samples, 0.10%)</title><rect x="35.6" y="277" width="1.1" height="15.0" fill="rgb(230,62,47)" rx="2" ry="2" />
<text  x="38.55" y="287.5" ></text>
</g>
<g >
<title>account_entity_enqueue (1 samples, 0.02%)</title><rect x="315.2" y="389" width="0.3" height="15.0" fill="rgb(230,21,44)" rx="2" ry="2" />
<text  x="318.16" y="399.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.0 (1 samples, 0.02%)</title><rect x="10.0" y="453" width="0.3" height="15.0" fill="rgb(229,219,6)" rx="2" ry="2" />
<text  x="13.00" y="463.5" ></text>
</g>
<g >
<title>nvme_pci_complete_rq (1 samples, 0.02%)</title><rect x="1082.3" y="181" width="0.3" height="15.0" fill="rgb(215,64,30)" rx="2" ry="2" />
<text  x="1085.28" y="191.5" ></text>
</g>
<g >
<title>do_syscall_64 (4 samples, 0.10%)</title><rect x="1188.8" y="549" width="1.2" height="15.0" fill="rgb(215,87,26)" rx="2" ry="2" />
<text  x="1191.84" y="559.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (6 samples, 0.15%)</title><rect x="1182.5" y="437" width="1.7" height="15.0" fill="rgb(251,136,32)" rx="2" ry="2" />
<text  x="1185.45" y="447.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="57.3" y="517" width="0.3" height="15.0" fill="rgb(220,172,48)" rx="2" ry="2" />
<text  x="60.33" y="527.5" ></text>
</g>
<g >
<title>prep_new_page (1 samples, 0.02%)</title><rect x="1108.7" y="373" width="0.3" height="15.0" fill="rgb(242,162,52)" rx="2" ry="2" />
<text  x="1111.70" y="383.5" ></text>
</g>
<g >
<title>ext4_writepages (10 samples, 0.25%)</title><rect x="1082.0" y="389" width="2.9" height="15.0" fill="rgb(240,43,46)" rx="2" ry="2" />
<text  x="1084.99" y="399.5" ></text>
</g>
<g >
<title>get_futex_key_refs.isra.0 (1 samples, 0.02%)</title><rect x="308.5" y="453" width="0.3" height="15.0" fill="rgb(245,141,26)" rx="2" ry="2" />
<text  x="311.48" y="463.5" ></text>
</g>
<g >
<title>__inc_node_state (1 samples, 0.02%)</title><rect x="42.2" y="309" width="0.3" height="15.0" fill="rgb(241,5,53)" rx="2" ry="2" />
<text  x="45.23" y="319.5" ></text>
</g>
<g >
<title>setup_new_exec (4 samples, 0.10%)</title><rect x="1188.8" y="469" width="1.2" height="15.0" fill="rgb(239,210,41)" rx="2" ry="2" />
<text  x="1191.84" y="479.5" ></text>
</g>
<g >
<title>__do_page_fault (19 samples, 0.47%)</title><rect x="1147.0" y="533" width="5.5" height="15.0" fill="rgb(207,96,1)" rx="2" ry="2" />
<text  x="1150.03" y="543.5" ></text>
</g>
<g >
<title>ext4_do_update_inode (6 samples, 0.15%)</title><rect x="49.5" y="293" width="1.7" height="15.0" fill="rgb(230,218,29)" rx="2" ry="2" />
<text  x="52.49" y="303.5" ></text>
</g>
<g >
<title>x86_pmu_enable (1 samples, 0.02%)</title><rect x="1136.3" y="437" width="0.3" height="15.0" fill="rgb(219,73,37)" rx="2" ry="2" />
<text  x="1139.28" y="447.5" ></text>
</g>
<g >
<title>__memchr_avx2 (9 samples, 0.22%)</title><rect x="339.0" y="533" width="2.6" height="15.0" fill="rgb(232,109,36)" rx="2" ry="2" />
<text  x="341.97" y="543.5" ></text>
</g>
<g >
<title>blk_update_request (1 samples, 0.02%)</title><rect x="1082.3" y="133" width="0.3" height="15.0" fill="rgb(243,228,11)" rx="2" ry="2" />
<text  x="1085.28" y="143.5" ></text>
</g>
<g >
<title>timekeeping_advance (1 samples, 0.02%)</title><rect x="1108.1" y="389" width="0.3" height="15.0" fill="rgb(239,213,45)" rx="2" ry="2" />
<text  x="1111.12" y="399.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.0 (15 samples, 0.37%)</title><rect x="57.9" y="485" width="4.4" height="15.0" fill="rgb(238,123,20)" rx="2" ry="2" />
<text  x="60.91" y="495.5" ></text>
</g>
<g >
<title>mem_cgroup_throttle_swaprate (2 samples, 0.05%)</title><rect x="1181.9" y="437" width="0.6" height="15.0" fill="rgb(240,213,6)" rx="2" ry="2" />
<text  x="1184.87" y="447.5" ></text>
</g>
<g >
<title>__run_timers.part.0 (1 samples, 0.02%)</title><rect x="337.2" y="469" width="0.3" height="15.0" fill="rgb(205,147,54)" rx="2" ry="2" />
<text  x="340.23" y="479.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.10%)</title><rect x="1083.1" y="229" width="1.2" height="15.0" fill="rgb(220,34,34)" rx="2" ry="2" />
<text  x="1086.15" y="239.5" ></text>
</g>
<g >
<title>alloc_pages_vma (4 samples, 0.10%)</title><rect x="1149.4" y="453" width="1.1" height="15.0" fill="rgb(219,114,37)" rx="2" ry="2" />
<text  x="1152.35" y="463.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (4 samples, 0.10%)</title><rect x="1150.5" y="421" width="1.2" height="15.0" fill="rgb(226,213,15)" rx="2" ry="2" />
<text  x="1153.51" y="431.5" ></text>
</g>
<g >
<title>dequeue_entity (2 samples, 0.05%)</title><rect x="73.9" y="389" width="0.6" height="15.0" fill="rgb(215,132,33)" rx="2" ry="2" />
<text  x="76.88" y="399.5" ></text>
</g>
<g >
<title>alloc_pages_vma (26 samples, 0.64%)</title><rect x="1172.9" y="453" width="7.5" height="15.0" fill="rgb(213,170,51)" rx="2" ry="2" />
<text  x="1175.87" y="463.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.0 (4 samples, 0.10%)</title><rect x="22.5" y="277" width="1.1" height="15.0" fill="rgb(218,208,32)" rx="2" ry="2" />
<text  x="25.49" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::destroy&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (11 samples, 0.27%)</title><rect x="922.6" y="389" width="3.2" height="15.0" fill="rgb(212,167,52)" rx="2" ry="2" />
<text  x="925.58" y="399.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (1 samples, 0.02%)</title><rect x="34.1" y="309" width="0.3" height="15.0" fill="rgb(225,176,2)" rx="2" ry="2" />
<text  x="37.10" y="319.5" ></text>
</g>
<g >
<title>__lru_cache_add (7 samples, 0.17%)</title><rect x="45.1" y="309" width="2.1" height="15.0" fill="rgb(219,197,51)" rx="2" ry="2" />
<text  x="48.13" y="319.5" ></text>
</g>
<g >
<title>timekeeping_update (1 samples, 0.02%)</title><rect x="1108.1" y="373" width="0.3" height="15.0" fill="rgb(236,102,5)" rx="2" ry="2" />
<text  x="1111.12" y="383.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.25%)</title><rect x="1082.0" y="565" width="2.9" height="15.0" fill="rgb(235,115,46)" rx="2" ry="2" />
<text  x="1084.99" y="575.5" ></text>
</g>
<g >
<title>__ext4_journal_stop (3 samples, 0.07%)</title><rect x="47.5" y="373" width="0.8" height="15.0" fill="rgb(217,118,5)" rx="2" ry="2" />
<text  x="50.46" y="383.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="771.3" y="357" width="0.3" height="15.0" fill="rgb(210,52,2)" rx="2" ry="2" />
<text  x="774.31" y="367.5" ></text>
</g>
<g >
<title>finish_task_switch (4 samples, 0.10%)</title><rect x="35.6" y="261" width="1.1" height="15.0" fill="rgb(242,105,34)" rx="2" ry="2" />
<text  x="38.55" y="271.5" ></text>
</g>
<g >
<title>finish_task_switch (12 samples, 0.30%)</title><rect x="66.3" y="341" width="3.5" height="15.0" fill="rgb(219,131,14)" rx="2" ry="2" />
<text  x="69.33" y="351.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void  (2,123 samples, 52.24%)</title><rect x="343.9" y="469" width="616.4" height="15.0" fill="rgb(224,141,52)" rx="2" ry="2" />
<text  x="346.91" y="479.5" >std::__invoke&lt;void </text>
</g>
<g >
<title>intel_pmu_enable_all (15 samples, 0.37%)</title><rect x="57.9" y="453" width="4.4" height="15.0" fill="rgb(225,86,20)" rx="2" ry="2" />
<text  x="60.91" y="463.5" ></text>
</g>
<g >
<title>new_sync_read (24 samples, 0.59%)</title><rect x="62.8" y="453" width="7.0" height="15.0" fill="rgb(208,136,33)" rx="2" ry="2" />
<text  x="65.84" y="463.5" ></text>
</g>
<g >
<title>kfree (1 samples, 0.02%)</title><rect x="317.8" y="469" width="0.3" height="15.0" fill="rgb(240,100,37)" rx="2" ry="2" />
<text  x="320.78" y="479.5" ></text>
</g>
<g >
<title>put_prev_task_fair (1 samples, 0.02%)</title><rect x="95.7" y="405" width="0.2" height="15.0" fill="rgb(235,125,16)" rx="2" ry="2" />
<text  x="98.65" y="415.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;&amp;, std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*&gt;::_Deque_iterator (1 samples, 0.02%)</title><rect x="920.3" y="389" width="0.3" height="15.0" fill="rgb(254,18,48)" rx="2" ry="2" />
<text  x="923.26" y="399.5" ></text>
</g>
<g >
<title>do_futex (1 samples, 0.02%)</title><rect x="317.2" y="517" width="0.3" height="15.0" fill="rgb(243,60,23)" rx="2" ry="2" />
<text  x="320.19" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::length (49 samples, 1.21%)</title><rect x="799.5" y="421" width="14.2" height="15.0" fill="rgb(221,189,16)" rx="2" ry="2" />
<text  x="802.47" y="431.5" ></text>
</g>
<g >
<title>xas_find_marked (1 samples, 0.02%)</title><rect x="1084.6" y="341" width="0.3" height="15.0" fill="rgb(214,192,49)" rx="2" ry="2" />
<text  x="1087.60" y="351.5" ></text>
</g>
<g >
<title>__slab_free (1 samples, 0.02%)</title><rect x="29.2" y="213" width="0.3" height="15.0" fill="rgb(209,78,31)" rx="2" ry="2" />
<text  x="32.16" y="223.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="771.3" y="341" width="0.3" height="15.0" fill="rgb(220,226,33)" rx="2" ry="2" />
<text  x="774.31" y="351.5" ></text>
</g>
<g >
<title>jbd2__journal_start (3 samples, 0.07%)</title><rect x="32.9" y="357" width="0.9" height="15.0" fill="rgb(227,84,22)" rx="2" ry="2" />
<text  x="35.94" y="367.5" ></text>
</g>
<g >
<title>perf_event_mmap (1 samples, 0.02%)</title><rect x="1134.3" y="501" width="0.2" height="15.0" fill="rgb(237,51,25)" rx="2" ry="2" />
<text  x="1137.25" y="511.5" ></text>
</g>
<g >
<title>jbd2_journal_grab_journal_head (3 samples, 0.07%)</title><rect x="27.4" y="261" width="0.9" height="15.0" fill="rgb(231,0,13)" rx="2" ry="2" />
<text  x="30.42" y="271.5" ></text>
</g>
<g >
<title>schedule_tail (1 samples, 0.02%)</title><rect x="10.0" y="501" width="0.3" height="15.0" fill="rgb(254,23,35)" rx="2" ry="2" />
<text  x="13.00" y="511.5" ></text>
</g>
<g >
<title>__vma_adjust (7 samples, 0.17%)</title><rect x="1131.1" y="469" width="2.0" height="15.0" fill="rgb(251,189,3)" rx="2" ry="2" />
<text  x="1134.06" y="479.5" ></text>
</g>
<g >
<title>down_read (4 samples, 0.10%)</title><rect x="35.6" y="325" width="1.1" height="15.0" fill="rgb(254,54,6)" rx="2" ry="2" />
<text  x="38.55" y="335.5" ></text>
</g>
<g >
<title>free_unref_page_list (2 samples, 0.05%)</title><rect x="21.9" y="325" width="0.6" height="15.0" fill="rgb(217,82,20)" rx="2" ry="2" />
<text  x="24.90" y="335.5" ></text>
</g>
<g >
<title>_IO_file_xsputn@@GLIBC_2.2.5 (1 samples, 0.02%)</title><rect x="1095.6" y="517" width="0.3" height="15.0" fill="rgb(233,225,44)" rx="2" ry="2" />
<text  x="1098.63" y="527.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="830.8" y="389" width="0.3" height="15.0" fill="rgb(252,221,32)" rx="2" ry="2" />
<text  x="833.83" y="399.5" ></text>
</g>
<g >
<title>native_write_msr (4 samples, 0.10%)</title><rect x="22.5" y="229" width="1.1" height="15.0" fill="rgb(207,71,40)" rx="2" ry="2" />
<text  x="25.49" y="239.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (94 samples, 2.31%)</title><rect x="30.6" y="549" width="27.3" height="15.0" fill="rgb(221,54,29)" rx="2" ry="2" />
<text  x="33.62" y="559.5" >e..</text>
</g>
<g >
<title>ext4_get_group_desc (1 samples, 0.02%)</title><rect x="52.1" y="277" width="0.3" height="15.0" fill="rgb(207,178,36)" rx="2" ry="2" />
<text  x="55.10" y="287.5" ></text>
</g>
<g >
<title>unlock_buffer (1 samples, 0.02%)</title><rect x="29.7" y="309" width="0.3" height="15.0" fill="rgb(216,183,6)" rx="2" ry="2" />
<text  x="32.74" y="319.5" ></text>
</g>
<g >
<title>rw_verify_area (1 samples, 0.02%)</title><rect x="57.0" y="469" width="0.3" height="15.0" fill="rgb(245,99,42)" rx="2" ry="2" />
<text  x="60.04" y="479.5" ></text>
</g>
<g >
<title>std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::~pair (1 samples, 0.02%)</title><rect x="919.1" y="421" width="0.3" height="15.0" fill="rgb(246,17,10)" rx="2" ry="2" />
<text  x="922.10" y="431.5" ></text>
</g>
<g >
<title>update_load_avg (1 samples, 0.02%)</title><rect x="57.3" y="373" width="0.3" height="15.0" fill="rgb(212,126,52)" rx="2" ry="2" />
<text  x="60.33" y="383.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.10%)</title><rect x="22.5" y="245" width="1.1" height="15.0" fill="rgb(246,8,22)" rx="2" ry="2" />
<text  x="25.49" y="255.5" ></text>
</g>
<g >
<title>_int_malloc (42 samples, 1.03%)</title><rect x="1141.2" y="581" width="12.2" height="15.0" fill="rgb(219,200,24)" rx="2" ry="2" />
<text  x="1144.22" y="591.5" ></text>
</g>
<g >
<title>page_mapping (1 samples, 0.02%)</title><rect x="1082.3" y="37" width="0.3" height="15.0" fill="rgb(234,4,7)" rx="2" ry="2" />
<text  x="1085.28" y="47.5" ></text>
</g>
<g >
<title>__pagevec_lru_add_fn (7 samples, 0.17%)</title><rect x="45.1" y="277" width="2.1" height="15.0" fill="rgb(236,10,15)" rx="2" ry="2" />
<text  x="48.13" y="287.5" ></text>
</g>
<g >
<title>perf (4 samples, 0.10%)</title><rect x="1188.8" y="597" width="1.2" height="15.0" fill="rgb(205,92,18)" rx="2" ry="2" />
<text  x="1191.84" y="607.5" ></text>
</g>
<g >
<title>page_remove_rmap (4 samples, 0.10%)</title><rect x="1153.7" y="405" width="1.2" height="15.0" fill="rgb(239,52,15)" rx="2" ry="2" />
<text  x="1156.71" y="415.5" ></text>
</g>
<g >
<title>wake_up_process (1 samples, 0.02%)</title><rect x="337.2" y="389" width="0.3" height="15.0" fill="rgb(227,84,51)" rx="2" ry="2" />
<text  x="340.23" y="399.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (12 samples, 0.30%)</title><rect x="66.3" y="325" width="3.5" height="15.0" fill="rgb(205,8,45)" rx="2" ry="2" />
<text  x="69.33" y="335.5" ></text>
</g>
<g >
<title>vmacache_find (1 samples, 0.02%)</title><rect x="1152.3" y="501" width="0.2" height="15.0" fill="rgb(251,166,16)" rx="2" ry="2" />
<text  x="1155.25" y="511.5" ></text>
</g>
<g >
<title>autoremove_wake_function (1 samples, 0.02%)</title><rect x="1082.6" y="229" width="0.3" height="15.0" fill="rgb(241,51,8)" rx="2" ry="2" />
<text  x="1085.57" y="239.5" ></text>
</g>
<g >
<title>native_write_msr (12 samples, 0.30%)</title><rect x="66.3" y="261" width="3.5" height="15.0" fill="rgb(249,67,27)" rx="2" ry="2" />
<text  x="69.33" y="271.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="1108.7" y="389" width="0.3" height="15.0" fill="rgb(238,149,44)" rx="2" ry="2" />
<text  x="1111.70" y="399.5" ></text>
</g>
<g >
<title>do_last (35 samples, 0.86%)</title><rect x="20.2" y="453" width="10.1" height="15.0" fill="rgb(238,176,31)" rx="2" ry="2" />
<text  x="23.16" y="463.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (1 samples, 0.02%)</title><rect x="44.6" y="261" width="0.2" height="15.0" fill="rgb(230,44,31)" rx="2" ry="2" />
<text  x="47.55" y="271.5" ></text>
</g>
<g >
<title>crypto_shash_update (3 samples, 0.07%)</title><rect x="50.4" y="245" width="0.8" height="15.0" fill="rgb(210,207,38)" rx="2" ry="2" />
<text  x="53.36" y="255.5" ></text>
</g>
<g >
<title>resched_curr (1 samples, 0.02%)</title><rect x="1082.6" y="133" width="0.3" height="15.0" fill="rgb(227,19,2)" rx="2" ry="2" />
<text  x="1085.57" y="143.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="830.8" y="373" width="0.3" height="15.0" fill="rgb(235,184,10)" rx="2" ry="2" />
<text  x="833.83" y="383.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void  (2,123 samples, 52.24%)</title><rect x="343.9" y="453" width="616.4" height="15.0" fill="rgb(247,36,46)" rx="2" ry="2" />
<text  x="346.91" y="463.5" >std::__invoke_impl&lt;void, void </text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (35 samples, 0.86%)</title><rect x="20.2" y="549" width="10.1" height="15.0" fill="rgb(213,199,40)" rx="2" ry="2" />
<text  x="23.16" y="559.5" ></text>
</g>
<g >
<title>block_invalidatepage (12 samples, 0.30%)</title><rect x="26.6" y="325" width="3.4" height="15.0" fill="rgb(212,2,11)" rx="2" ry="2" />
<text  x="29.55" y="335.5" ></text>
</g>
<g >
<title>std::deque&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::front (6 samples, 0.15%)</title><rect x="920.0" y="405" width="1.7" height="15.0" fill="rgb(237,26,51)" rx="2" ry="2" />
<text  x="922.97" y="415.5" ></text>
</g>
<g >
<title>__libc_start_main (86 samples, 2.12%)</title><rect x="1084.9" y="581" width="25.0" height="15.0" fill="rgb(230,74,51)" rx="2" ry="2" />
<text  x="1087.89" y="591.5" >_..</text>
</g>
<g >
<title>perf_iterate_sb (8 samples, 0.20%)</title><rect x="1128.4" y="469" width="2.4" height="15.0" fill="rgb(224,8,24)" rx="2" ry="2" />
<text  x="1131.44" y="479.5" ></text>
</g>
<g >
<title>release_pages (2 samples, 0.05%)</title><rect x="1154.9" y="373" width="0.5" height="15.0" fill="rgb(209,94,24)" rx="2" ry="2" />
<text  x="1157.87" y="383.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.0 (72 samples, 1.77%)</title><rect x="74.5" y="389" width="20.9" height="15.0" fill="rgb(233,96,37)" rx="2" ry="2" />
<text  x="77.46" y="399.5" ></text>
</g>
<g >
<title>futex_wait (90 samples, 2.21%)</title><rect x="72.4" y="485" width="26.2" height="15.0" fill="rgb(232,142,0)" rx="2" ry="2" />
<text  x="75.43" y="495.5" >f..</text>
</g>
<g >
<title>rwsem_optimistic_spin (6 samples, 0.15%)</title><rect x="1113.3" y="469" width="1.8" height="15.0" fill="rgb(248,4,12)" rx="2" ry="2" />
<text  x="1116.35" y="479.5" ></text>
</g>
<g >
<title>handle_mm_fault (50 samples, 1.23%)</title><rect x="1170.0" y="501" width="14.5" height="15.0" fill="rgb(239,149,3)" rx="2" ry="2" />
<text  x="1172.97" y="511.5" ></text>
</g>
<g >
<title>cpuacct_charge (1 samples, 0.02%)</title><rect x="73.9" y="373" width="0.3" height="15.0" fill="rgb(248,10,11)" rx="2" ry="2" />
<text  x="76.88" y="383.5" ></text>
</g>
<g >
<title>rcu_irq_enter (1 samples, 0.02%)</title><rect x="336.9" y="501" width="0.3" height="15.0" fill="rgb(218,102,0)" rx="2" ry="2" />
<text  x="339.94" y="511.5" ></text>
</g>
<g >
<title>down_read (2 samples, 0.05%)</title><rect x="1168.8" y="501" width="0.6" height="15.0" fill="rgb(227,182,54)" rx="2" ry="2" />
<text  x="1171.80" y="511.5" ></text>
</g>
<g >
<title>vmacache_find (1 samples, 0.02%)</title><rect x="1147.0" y="485" width="0.3" height="15.0" fill="rgb(245,213,38)" rx="2" ry="2" />
<text  x="1150.03" y="495.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (91 samples, 2.24%)</title><rect x="72.4" y="549" width="26.4" height="15.0" fill="rgb(218,189,40)" rx="2" ry="2" />
<text  x="75.43" y="559.5" >e..</text>
</g>
<g >
<title>up_read (3 samples, 0.07%)</title><rect x="1184.8" y="517" width="0.8" height="15.0" fill="rgb(236,1,34)" rx="2" ry="2" />
<text  x="1187.77" y="527.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.10%)</title><rect x="1188.8" y="565" width="1.2" height="15.0" fill="rgb(217,184,16)" rx="2" ry="2" />
<text  x="1191.84" y="575.5" ></text>
</g>
<g >
<title>load_elf_binary (4 samples, 0.10%)</title><rect x="1188.8" y="485" width="1.2" height="15.0" fill="rgb(219,149,6)" rx="2" ry="2" />
<text  x="1191.84" y="495.5" ></text>
</g>
<g >
<title>do_anonymous_page (11 samples, 0.27%)</title><rect x="1149.1" y="469" width="3.2" height="15.0" fill="rgb(217,216,42)" rx="2" ry="2" />
<text  x="1152.06" y="479.5" ></text>
</g>
<g >
<title>get_page_from_freelist (16 samples, 0.39%)</title><rect x="1174.9" y="421" width="4.6" height="15.0" fill="rgb(251,16,39)" rx="2" ry="2" />
<text  x="1177.90" y="431.5" ></text>
</g>
<g >
<title>reweight_entity (1 samples, 0.02%)</title><rect x="315.7" y="357" width="0.3" height="15.0" fill="rgb(251,18,30)" rx="2" ry="2" />
<text  x="318.74" y="367.5" ></text>
</g>
<g >
<title>clear_page_erms (3 samples, 0.07%)</title><rect x="1149.4" y="405" width="0.8" height="15.0" fill="rgb(225,8,7)" rx="2" ry="2" />
<text  x="1152.35" y="415.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (1 samples, 0.02%)</title><rect x="317.5" y="549" width="0.3" height="15.0" fill="rgb(208,201,48)" rx="2" ry="2" />
<text  x="320.49" y="559.5" ></text>
</g>
<g >
<title>nvme_irq (1 samples, 0.02%)</title><rect x="1082.3" y="213" width="0.3" height="15.0" fill="rgb(240,172,54)" rx="2" ry="2" />
<text  x="1085.28" y="223.5" ></text>
</g>
<g >
<title>do_syscall_64 (85 samples, 2.09%)</title><rect x="1111.9" y="549" width="24.7" height="15.0" fill="rgb(226,129,28)" rx="2" ry="2" />
<text  x="1114.89" y="559.5" >d..</text>
</g>
<g >
<title>__count_memcg_events (1 samples, 0.02%)</title><rect x="1148.2" y="485" width="0.3" height="15.0" fill="rgb(213,21,42)" rx="2" ry="2" />
<text  x="1151.19" y="495.5" ></text>
</g>
<g >
<title>mark_buffer_dirty (3 samples, 0.07%)</title><rect x="53.8" y="325" width="0.9" height="15.0" fill="rgb(228,172,30)" rx="2" ry="2" />
<text  x="56.84" y="335.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.02%)</title><rect x="1136.3" y="517" width="0.3" height="15.0" fill="rgb(235,201,53)" rx="2" ry="2" />
<text  x="1139.28" y="527.5" ></text>
</g>
<g >
<title>do_syscall_64 (35 samples, 0.86%)</title><rect x="20.2" y="533" width="10.1" height="15.0" fill="rgb(248,81,28)" rx="2" ry="2" />
<text  x="23.16" y="543.5" ></text>
</g>
<g >
<title>change_protection (14 samples, 0.34%)</title><rect x="1123.2" y="485" width="4.1" height="15.0" fill="rgb(240,182,10)" rx="2" ry="2" />
<text  x="1126.22" y="495.5" ></text>
</g>
<g >
<title>ext4_setattr (35 samples, 0.86%)</title><rect x="20.2" y="405" width="10.1" height="15.0" fill="rgb(222,82,32)" rx="2" ry="2" />
<text  x="23.16" y="415.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="714.4" y="373" width="0.3" height="15.0" fill="rgb(216,92,11)" rx="2" ry="2" />
<text  x="717.40" y="383.5" ></text>
</g>
<g >
<title>error_entry (1 samples, 0.02%)</title><rect x="1145.6" y="565" width="0.3" height="15.0" fill="rgb(224,2,3)" rx="2" ry="2" />
<text  x="1148.58" y="575.5" ></text>
</g>
<g >
<title>update_wall_time (1 samples, 0.02%)</title><rect x="1108.1" y="405" width="0.3" height="15.0" fill="rgb(239,221,43)" rx="2" ry="2" />
<text  x="1111.12" y="415.5" ></text>
</g>
<g >
<title>ext4_inode_csum.isra.0 (3 samples, 0.07%)</title><rect x="50.4" y="261" width="0.8" height="15.0" fill="rgb(247,165,14)" rx="2" ry="2" />
<text  x="53.36" y="271.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void  (2,123 samples, 52.24%)</title><rect x="343.9" y="501" width="616.4" height="15.0" fill="rgb(248,174,48)" rx="2" ry="2" />
<text  x="346.91" y="511.5" >std::thread::_Invoker&lt;std::tuple&lt;void </text>
</g>
<g >
<title>mem_cgroup_charge_statistics (1 samples, 0.02%)</title><rect x="1181.6" y="437" width="0.3" height="15.0" fill="rgb(242,182,7)" rx="2" ry="2" />
<text  x="1184.58" y="447.5" ></text>
</g>
<g >
<title>CSV2JSON::ThreadingParseDatas (2,004 samples, 49.31%)</title><rect x="344.8" y="437" width="581.8" height="15.0" fill="rgb(234,64,8)" rx="2" ry="2" />
<text  x="347.78" y="447.5" >CSV2JSON::ThreadingParseDatas</text>
</g>
<g >
<title>__lll_lock_wait_private (99 samples, 2.44%)</title><rect x="70.1" y="565" width="28.7" height="15.0" fill="rgb(230,50,53)" rx="2" ry="2" />
<text  x="73.10" y="575.5" >__..</text>
</g>
<g >
<title>clear_page_erms (1 samples, 0.02%)</title><rect x="44.6" y="117" width="0.2" height="15.0" fill="rgb(250,183,2)" rx="2" ry="2" />
<text  x="47.55" y="127.5" ></text>
</g>
<g >
<title>iov_iter_advance (2 samples, 0.05%)</title><rect x="54.7" y="389" width="0.6" height="15.0" fill="rgb(235,154,27)" rx="2" ry="2" />
<text  x="57.71" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator[] (250 samples, 6.15%)</title><rect x="831.1" y="421" width="72.6" height="15.0" fill="rgb(244,162,41)" rx="2" ry="2" />
<text  x="834.12" y="431.5" >std::__c..</text>
</g>
<g >
<title>mmput (7 samples, 0.17%)</title><rect x="1153.4" y="501" width="2.0" height="15.0" fill="rgb(238,117,31)" rx="2" ry="2" />
<text  x="1156.42" y="511.5" ></text>
</g>
<g >
<title>unmap_single_vma (7 samples, 0.17%)</title><rect x="1153.4" y="453" width="2.0" height="15.0" fill="rgb(227,133,22)" rx="2" ry="2" />
<text  x="1156.42" y="463.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.0 (4 samples, 0.10%)</title><rect x="31.8" y="261" width="1.1" height="15.0" fill="rgb(233,163,31)" rx="2" ry="2" />
<text  x="34.78" y="271.5" ></text>
</g>
<g >
<title>__wake_up_common (1 samples, 0.02%)</title><rect x="1082.6" y="261" width="0.3" height="15.0" fill="rgb(213,127,43)" rx="2" ry="2" />
<text  x="1085.57" y="271.5" ></text>
</g>
<g >
<title>rw_verify_area (1 samples, 0.02%)</title><rect x="69.8" y="469" width="0.3" height="15.0" fill="rgb(224,27,9)" rx="2" ry="2" />
<text  x="72.81" y="479.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="57.3" y="453" width="0.3" height="15.0" fill="rgb(217,211,26)" rx="2" ry="2" />
<text  x="60.33" y="463.5" ></text>
</g>
<g >
<title>do_syscall_64 (10 samples, 0.25%)</title><rect x="1082.0" y="549" width="2.9" height="15.0" fill="rgb(225,216,1)" rx="2" ry="2" />
<text  x="1084.99" y="559.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="56.2" y="389" width="0.3" height="15.0" fill="rgb(206,97,40)" rx="2" ry="2" />
<text  x="59.17" y="399.5" ></text>
</g>
<g >
<title>do_truncate (35 samples, 0.86%)</title><rect x="20.2" y="437" width="10.1" height="15.0" fill="rgb(229,50,31)" rx="2" ry="2" />
<text  x="23.16" y="447.5" ></text>
</g>
<g >
<title>deactivate_task (1 samples, 0.02%)</title><rect x="1115.1" y="437" width="0.3" height="15.0" fill="rgb(246,18,49)" rx="2" ry="2" />
<text  x="1118.09" y="447.5" ></text>
</g>
<g >
<title>__page_cache_alloc (13 samples, 0.32%)</title><rect x="37.9" y="341" width="3.7" height="15.0" fill="rgb(216,206,44)" rx="2" ry="2" />
<text  x="40.87" y="351.5" ></text>
</g>
<g >
<title>do_writepages (10 samples, 0.25%)</title><rect x="1082.0" y="405" width="2.9" height="15.0" fill="rgb(242,50,43)" rx="2" ry="2" />
<text  x="1084.99" y="415.5" ></text>
</g>
<g >
<title>update_cfs_group (1 samples, 0.02%)</title><rect x="315.7" y="373" width="0.3" height="15.0" fill="rgb(229,140,51)" rx="2" ry="2" />
<text  x="318.74" y="383.5" ></text>
</g>
<g >
<title>__xa_set_mark (1 samples, 0.02%)</title><rect x="53.8" y="293" width="0.3" height="15.0" fill="rgb(220,67,31)" rx="2" ry="2" />
<text  x="56.84" y="303.5" ></text>
</g>
<g >
<title>finish_task_switch (4 samples, 0.10%)</title><rect x="22.5" y="309" width="1.1" height="15.0" fill="rgb(234,207,27)" rx="2" ry="2" />
<text  x="25.49" y="319.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (4 samples, 0.10%)</title><rect x="42.8" y="309" width="1.2" height="15.0" fill="rgb(214,137,11)" rx="2" ry="2" />
<text  x="45.81" y="319.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (20 samples, 0.49%)</title><rect x="1115.4" y="373" width="5.8" height="15.0" fill="rgb(251,161,48)" rx="2" ry="2" />
<text  x="1118.38" y="383.5" ></text>
</g>
<g >
<title>CSV2JSON::Split2List (3 samples, 0.07%)</title><rect x="343.9" y="437" width="0.9" height="15.0" fill="rgb(232,86,37)" rx="2" ry="2" />
<text  x="346.91" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (60 samples, 1.48%)</title><rect x="813.7" y="421" width="17.4" height="15.0" fill="rgb(215,10,4)" rx="2" ry="2" />
<text  x="816.70" y="431.5" ></text>
</g>
<g >
<title>__ext4_get_inode_loc (2 samples, 0.05%)</title><rect x="51.8" y="293" width="0.6" height="15.0" fill="rgb(237,30,50)" rx="2" ry="2" />
<text  x="54.81" y="303.5" ></text>
</g>
<g >
<title>pagevec_lookup_entries (4 samples, 0.10%)</title><rect x="24.5" y="357" width="1.2" height="15.0" fill="rgb(237,118,24)" rx="2" ry="2" />
<text  x="27.52" y="367.5" ></text>
</g>
<g >
<title>lru_cache_add_active_or_unevictable (4 samples, 0.10%)</title><rect x="1180.4" y="453" width="1.2" height="15.0" fill="rgb(225,87,26)" rx="2" ry="2" />
<text  x="1183.42" y="463.5" ></text>
</g>
<g >
<title>mem_cgroup_update_lru_size (1 samples, 0.02%)</title><rect x="46.3" y="261" width="0.3" height="15.0" fill="rgb(220,177,31)" rx="2" ry="2" />
<text  x="49.29" y="271.5" ></text>
</g>
<g >
<title>perf_event_mmap_output (1 samples, 0.02%)</title><rect x="1129.3" y="453" width="0.3" height="15.0" fill="rgb(219,27,20)" rx="2" ry="2" />
<text  x="1132.32" y="463.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1154.9" y="325" width="0.3" height="15.0" fill="rgb(248,154,2)" rx="2" ry="2" />
<text  x="1157.87" y="335.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (1 samples, 0.02%)</title><rect x="32.9" y="341" width="0.3" height="15.0" fill="rgb(240,128,32)" rx="2" ry="2" />
<text  x="35.94" y="351.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="771.3" y="373" width="0.3" height="15.0" fill="rgb(236,134,11)" rx="2" ry="2" />
<text  x="774.31" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (18 samples, 0.44%)</title><rect x="954.5" y="437" width="5.2" height="15.0" fill="rgb(208,106,30)" rx="2" ry="2" />
<text  x="957.52" y="447.5" ></text>
</g>
<g >
<title>task_ctx_sched_out (1 samples, 0.02%)</title><rect x="73.3" y="405" width="0.3" height="15.0" fill="rgb(220,219,21)" rx="2" ry="2" />
<text  x="76.30" y="415.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (2 samples, 0.05%)</title><rect x="182.2" y="501" width="0.6" height="15.0" fill="rgb(222,88,44)" rx="2" ry="2" />
<text  x="185.18" y="511.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.10%)</title><rect x="1188.8" y="581" width="1.2" height="15.0" fill="rgb(234,88,22)" rx="2" ry="2" />
<text  x="1191.84" y="591.5" ></text>
</g>
<g >
<title>unmap_vmas (7 samples, 0.17%)</title><rect x="1153.4" y="469" width="2.0" height="15.0" fill="rgb(247,152,25)" rx="2" ry="2" />
<text  x="1156.42" y="479.5" ></text>
</g>
<g >
<title>futex_wait_setup (9 samples, 0.22%)</title><rect x="95.9" y="469" width="2.7" height="15.0" fill="rgb(243,182,46)" rx="2" ry="2" />
<text  x="98.94" y="479.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (2 samples, 0.05%)</title><rect x="182.2" y="533" width="0.6" height="15.0" fill="rgb(233,84,27)" rx="2" ry="2" />
<text  x="185.18" y="543.5" ></text>
</g>
<g >
<title>preempt_schedule_common (4 samples, 0.10%)</title><rect x="22.5" y="341" width="1.1" height="15.0" fill="rgb(209,36,24)" rx="2" ry="2" />
<text  x="25.49" y="351.5" ></text>
</g>
<g >
<title>do_syscall_64 (40 samples, 0.98%)</title><rect x="305.9" y="533" width="11.6" height="15.0" fill="rgb(223,214,48)" rx="2" ry="2" />
<text  x="308.87" y="543.5" ></text>
</g>
<g >
<title>_raw_spin_lock (2 samples, 0.05%)</title><rect x="307.3" y="469" width="0.6" height="15.0" fill="rgb(234,158,49)" rx="2" ry="2" />
<text  x="310.32" y="479.5" ></text>
</g>
<g >
<title>try_to_free_buffers (5 samples, 0.12%)</title><rect x="28.3" y="261" width="1.4" height="15.0" fill="rgb(207,43,20)" rx="2" ry="2" />
<text  x="31.29" y="271.5" ></text>
</g>
<g >
<title>raw_notifier_call_chain (1 samples, 0.02%)</title><rect x="1108.1" y="357" width="0.3" height="15.0" fill="rgb(247,38,14)" rx="2" ry="2" />
<text  x="1111.12" y="367.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="830.8" y="325" width="0.3" height="15.0" fill="rgb(210,80,44)" rx="2" ry="2" />
<text  x="833.83" y="335.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (1 samples, 0.02%)</title><rect x="714.7" y="309" width="0.3" height="15.0" fill="rgb(213,221,41)" rx="2" ry="2" />
<text  x="717.69" y="319.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (2 samples, 0.05%)</title><rect x="21.9" y="293" width="0.6" height="15.0" fill="rgb(223,200,33)" rx="2" ry="2" />
<text  x="24.90" y="303.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (4 samples, 0.10%)</title><rect x="31.8" y="277" width="1.1" height="15.0" fill="rgb(250,177,19)" rx="2" ry="2" />
<text  x="34.78" y="287.5" ></text>
</g>
<g >
<title>add_to_page_cache_lru (19 samples, 0.47%)</title><rect x="41.6" y="341" width="5.6" height="15.0" fill="rgb(229,33,18)" rx="2" ry="2" />
<text  x="44.65" y="351.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="57.3" y="437" width="0.3" height="15.0" fill="rgb(249,28,7)" rx="2" ry="2" />
<text  x="60.33" y="447.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (11 samples, 0.27%)</title><rect x="63.1" y="373" width="3.2" height="15.0" fill="rgb(251,172,12)" rx="2" ry="2" />
<text  x="66.13" y="383.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="10.0" y="565" width="0.3" height="15.0" fill="rgb(245,0,25)" rx="2" ry="2" />
<text  x="13.00" y="575.5" ></text>
</g>
<g >
<title>__fput (10 samples, 0.25%)</title><rect x="1082.0" y="485" width="2.9" height="15.0" fill="rgb(240,32,25)" rx="2" ry="2" />
<text  x="1084.99" y="495.5" ></text>
</g>
<g >
<title>_IO_setb (3 samples, 0.07%)</title><rect x="1081.1" y="581" width="0.9" height="15.0" fill="rgb(214,181,40)" rx="2" ry="2" />
<text  x="1084.12" y="591.5" ></text>
</g>
<g >
<title>_int_free (3 samples, 0.07%)</title><rect x="923.2" y="357" width="0.8" height="15.0" fill="rgb(222,33,40)" rx="2" ry="2" />
<text  x="926.16" y="367.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.10%)</title><rect x="31.8" y="229" width="1.1" height="15.0" fill="rgb(215,167,31)" rx="2" ry="2" />
<text  x="34.78" y="239.5" ></text>
</g>
<g >
<title>mem_cgroup_commit_charge (1 samples, 0.02%)</title><rect x="1181.6" y="453" width="0.3" height="15.0" fill="rgb(209,127,14)" rx="2" ry="2" />
<text  x="1184.58" y="463.5" ></text>
</g>
<g >
<title>vm_stat_account (2 samples, 0.05%)</title><rect x="1135.1" y="501" width="0.6" height="15.0" fill="rgb(209,148,29)" rx="2" ry="2" />
<text  x="1138.12" y="511.5" ></text>
</g>
<g >
<title>_IO_default_xsputn (387 samples, 9.52%)</title><rect x="968.8" y="581" width="112.3" height="15.0" fill="rgb(207,76,15)" rx="2" ry="2" />
<text  x="971.75" y="591.5" >_IO_default_x..</text>
</g>
<g >
<title>__x64_sys_futex (90 samples, 2.21%)</title><rect x="72.4" y="517" width="26.2" height="15.0" fill="rgb(236,219,29)" rx="2" ry="2" />
<text  x="75.43" y="527.5" >_..</text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.02%)</title><rect x="29.5" y="245" width="0.2" height="15.0" fill="rgb(230,139,46)" rx="2" ry="2" />
<text  x="32.45" y="255.5" ></text>
</g>
<g >
<title>insert_work (1 samples, 0.02%)</title><rect x="337.2" y="405" width="0.3" height="15.0" fill="rgb(223,14,38)" rx="2" ry="2" />
<text  x="340.23" y="415.5" ></text>
</g>
<g >
<title>do_exit (7 samples, 0.17%)</title><rect x="1153.4" y="517" width="2.0" height="15.0" fill="rgb(251,130,16)" rx="2" ry="2" />
<text  x="1156.42" y="527.5" ></text>
</g>
<g >
<title>deactivate_task (3 samples, 0.07%)</title><rect x="73.6" y="421" width="0.9" height="15.0" fill="rgb(216,206,36)" rx="2" ry="2" />
<text  x="76.59" y="431.5" ></text>
</g>
<g >
<title>C2J (4,060 samples, 99.90%)</title><rect x="10.0" y="597" width="1178.8" height="15.0" fill="rgb(252,203,36)" rx="2" ry="2" />
<text  x="13.00" y="607.5" >C2J</text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="771.3" y="405" width="0.3" height="15.0" fill="rgb(219,122,8)" rx="2" ry="2" />
<text  x="774.31" y="415.5" ></text>
</g>
<g >
<title>rwsem_down_write_slowpath (28 samples, 0.69%)</title><rect x="1113.1" y="485" width="8.1" height="15.0" fill="rgb(242,41,31)" rx="2" ry="2" />
<text  x="1116.06" y="495.5" ></text>
</g>
<g >
<title>io_schedule_timeout (4 samples, 0.10%)</title><rect x="31.8" y="357" width="1.1" height="15.0" fill="rgb(206,40,46)" rx="2" ry="2" />
<text  x="34.78" y="367.5" ></text>
</g>
<g >
<title>do_group_exit (7 samples, 0.17%)</title><rect x="1153.4" y="533" width="2.0" height="15.0" fill="rgb(254,53,8)" rx="2" ry="2" />
<text  x="1156.42" y="543.5" ></text>
</g>
<g >
<title>__generic_file_write_iter (87 samples, 2.14%)</title><rect x="31.5" y="421" width="25.2" height="15.0" fill="rgb(205,194,39)" rx="2" ry="2" />
<text  x="34.49" y="431.5" >_..</text>
</g>
<g >
<title>_raw_read_lock (2 samples, 0.05%)</title><rect x="34.7" y="325" width="0.6" height="15.0" fill="rgb(210,44,37)" rx="2" ry="2" />
<text  x="37.68" y="335.5" ></text>
</g>
<g >
<title>alloc_pages_current (13 samples, 0.32%)</title><rect x="37.9" y="325" width="3.7" height="15.0" fill="rgb(216,66,12)" rx="2" ry="2" />
<text  x="40.87" y="335.5" ></text>
</g>
<g >
<title>intel_pmu_disable_all (1 samples, 0.02%)</title><rect x="73.3" y="341" width="0.3" height="15.0" fill="rgb(211,181,11)" rx="2" ry="2" />
<text  x="76.30" y="351.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (26 samples, 0.64%)</title><rect x="62.6" y="549" width="7.5" height="15.0" fill="rgb(245,187,16)" rx="2" ry="2" />
<text  x="65.55" y="559.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (42 samples, 1.03%)</title><rect x="305.3" y="549" width="12.2" height="15.0" fill="rgb(236,20,45)" rx="2" ry="2" />
<text  x="308.29" y="559.5" ></text>
</g>
<g >
<title>pagecache_get_page (33 samples, 0.81%)</title><rect x="37.6" y="357" width="9.6" height="15.0" fill="rgb(245,73,54)" rx="2" ry="2" />
<text  x="40.58" y="367.5" ></text>
</g>
<g >
<title>std::forward&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="1092.2" y="437" width="0.2" height="15.0" fill="rgb(235,209,40)" rx="2" ry="2" />
<text  x="1095.15" y="447.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (8 samples, 0.20%)</title><rect x="131.4" y="549" width="2.3" height="15.0" fill="rgb(207,109,32)" rx="2" ry="2" />
<text  x="134.37" y="559.5" ></text>
</g>
<g >
<title>path_openat (35 samples, 0.86%)</title><rect x="20.2" y="469" width="10.1" height="15.0" fill="rgb(228,198,46)" rx="2" ry="2" />
<text  x="23.16" y="479.5" ></text>
</g>
<g >
<title>alloc_pages_current (1 samples, 0.02%)</title><rect x="44.6" y="165" width="0.2" height="15.0" fill="rgb(219,189,43)" rx="2" ry="2" />
<text  x="47.55" y="175.5" ></text>
</g>
<g >
<title>end_page_writeback (1 samples, 0.02%)</title><rect x="1082.3" y="69" width="0.3" height="15.0" fill="rgb(235,193,40)" rx="2" ry="2" />
<text  x="1085.28" y="79.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="1163.3" y="485" width="0.3" height="15.0" fill="rgb(231,40,38)" rx="2" ry="2" />
<text  x="1166.29" y="495.5" ></text>
</g>
<g >
<title>try_charge (1 samples, 0.02%)</title><rect x="1183.9" y="421" width="0.3" height="15.0" fill="rgb(236,11,23)" rx="2" ry="2" />
<text  x="1186.90" y="431.5" ></text>
</g>
<g >
<title>vmacache_find (2 samples, 0.05%)</title><rect x="1121.5" y="485" width="0.6" height="15.0" fill="rgb(209,122,21)" rx="2" ry="2" />
<text  x="1124.48" y="495.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::destroy&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="921.7" y="405" width="0.3" height="15.0" fill="rgb(238,222,48)" rx="2" ry="2" />
<text  x="924.71" y="415.5" ></text>
</g>
<g >
<title>__x64_sys_mprotect (2 samples, 0.05%)</title><rect x="1111.3" y="549" width="0.6" height="15.0" fill="rgb(205,127,27)" rx="2" ry="2" />
<text  x="1114.31" y="559.5" ></text>
</g>
<g >
<title>do_syscall_64 (93 samples, 2.29%)</title><rect x="30.9" y="533" width="27.0" height="15.0" fill="rgb(252,70,34)" rx="2" ry="2" />
<text  x="33.91" y="543.5" >d..</text>
</g>
<g >
<title>mem_cgroup_try_charge (1 samples, 0.02%)</title><rect x="1109.0" y="405" width="0.3" height="15.0" fill="rgb(220,0,25)" rx="2" ry="2" />
<text  x="1111.99" y="415.5" ></text>
</g>
<g >
<title>kmem_cache_free (2 samples, 0.05%)</title><rect x="28.9" y="229" width="0.6" height="15.0" fill="rgb(241,26,30)" rx="2" ry="2" />
<text  x="31.87" y="239.5" ></text>
</g>
<g >
<title>filemap_flush (10 samples, 0.25%)</title><rect x="1082.0" y="437" width="2.9" height="15.0" fill="rgb(206,205,52)" rx="2" ry="2" />
<text  x="1084.99" y="447.5" ></text>
</g>
<g >
<title>page_add_new_anon_rmap (1 samples, 0.02%)</title><rect x="1152.0" y="453" width="0.3" height="15.0" fill="rgb(235,208,34)" rx="2" ry="2" />
<text  x="1154.96" y="463.5" ></text>
</g>
<g >
<title>__GI___libc_open (35 samples, 0.86%)</title><rect x="20.2" y="565" width="10.1" height="15.0" fill="rgb(229,143,22)" rx="2" ry="2" />
<text  x="23.16" y="575.5" ></text>
</g>
<g >
<title>vma_merge (12 samples, 0.30%)</title><rect x="1130.8" y="485" width="3.5" height="15.0" fill="rgb(254,176,37)" rx="2" ry="2" />
<text  x="1133.77" y="495.5" ></text>
</g>
<g >
<title>__strlen_avx2 (65 samples, 1.60%)</title><rect x="182.8" y="549" width="18.8" height="15.0" fill="rgb(254,160,44)" rx="2" ry="2" />
<text  x="185.76" y="559.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (4 samples, 0.10%)</title><rect x="715.0" y="373" width="1.1" height="15.0" fill="rgb(229,98,30)" rx="2" ry="2" />
<text  x="717.98" y="383.5" ></text>
</g>
<g >
<title>perf_event_mmap (12 samples, 0.30%)</title><rect x="1127.3" y="485" width="3.5" height="15.0" fill="rgb(247,140,5)" rx="2" ry="2" />
<text  x="1130.28" y="495.5" ></text>
</g>
<g >
<title>__strlen_avx2 (17 samples, 0.42%)</title><rect x="1096.5" y="517" width="4.9" height="15.0" fill="rgb(217,59,42)" rx="2" ry="2" />
<text  x="1099.51" y="527.5" ></text>
</g>
<g >
<title>unlock_page (1 samples, 0.02%)</title><rect x="56.5" y="389" width="0.2" height="15.0" fill="rgb(219,115,43)" rx="2" ry="2" />
<text  x="59.46" y="399.5" ></text>
</g>
<g >
<title>__close_nocancel (10 samples, 0.25%)</title><rect x="1082.0" y="581" width="2.9" height="15.0" fill="rgb(221,51,54)" rx="2" ry="2" />
<text  x="1084.99" y="591.5" ></text>
</g>
<g >
<title>down_write_killable (30 samples, 0.74%)</title><rect x="1112.5" y="501" width="8.7" height="15.0" fill="rgb(219,33,4)" rx="2" ry="2" />
<text  x="1115.48" y="511.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="278.6" y="485" width="0.3" height="15.0" fill="rgb(240,158,25)" rx="2" ry="2" />
<text  x="281.58" y="495.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1108.1" y="517" width="0.3" height="15.0" fill="rgb(245,92,37)" rx="2" ry="2" />
<text  x="1111.12" y="527.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (1 samples, 0.02%)</title><rect x="46.0" y="261" width="0.3" height="15.0" fill="rgb(229,19,53)" rx="2" ry="2" />
<text  x="49.00" y="271.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="1108.1" y="485" width="0.3" height="15.0" fill="rgb(251,167,29)" rx="2" ry="2" />
<text  x="1111.12" y="495.5" ></text>
</g>
<g >
<title>node_page_state (2 samples, 0.05%)</title><rect x="40.2" y="277" width="0.6" height="15.0" fill="rgb(228,33,11)" rx="2" ry="2" />
<text  x="43.20" y="287.5" ></text>
</g>
<g >
<title>task_work_run (10 samples, 0.25%)</title><rect x="1082.0" y="517" width="2.9" height="15.0" fill="rgb(215,194,37)" rx="2" ry="2" />
<text  x="1084.99" y="527.5" ></text>
</g>
<g >
<title>update_load_avg (1 samples, 0.02%)</title><rect x="74.2" y="373" width="0.3" height="15.0" fill="rgb(243,8,5)" rx="2" ry="2" />
<text  x="77.17" y="383.5" ></text>
</g>
<g >
<title>[unknown] (3,301 samples, 81.23%)</title><rect x="10.3" y="581" width="958.5" height="15.0" fill="rgb(215,10,44)" rx="2" ry="2" />
<text  x="13.29" y="591.5" >[unknown]</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (3 samples, 0.07%)</title><rect x="793.1" y="421" width="0.9" height="15.0" fill="rgb(240,84,13)" rx="2" ry="2" />
<text  x="796.09" y="431.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="44.6" y="133" width="0.2" height="15.0" fill="rgb(216,3,16)" rx="2" ry="2" />
<text  x="47.55" y="143.5" ></text>
</g>
<g >
<title>__getblk_gfp (1 samples, 0.02%)</title><rect x="51.8" y="277" width="0.3" height="15.0" fill="rgb(221,103,39)" rx="2" ry="2" />
<text  x="54.81" y="287.5" ></text>
</g>
<g >
<title>tick_program_event (2 samples, 0.05%)</title><rect x="182.2" y="485" width="0.6" height="15.0" fill="rgb(211,68,14)" rx="2" ry="2" />
<text  x="185.18" y="495.5" ></text>
</g>
<g >
<title>psi_task_change (2 samples, 0.05%)</title><rect x="316.0" y="405" width="0.6" height="15.0" fill="rgb(215,11,46)" rx="2" ry="2" />
<text  x="319.03" y="415.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (3 samples, 0.07%)</title><rect x="1185.9" y="565" width="0.9" height="15.0" fill="rgb(223,135,10)" rx="2" ry="2" />
<text  x="1188.94" y="575.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (15 samples, 0.37%)</title><rect x="57.9" y="501" width="4.4" height="15.0" fill="rgb(252,37,6)" rx="2" ry="2" />
<text  x="60.91" y="511.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (1 samples, 0.02%)</title><rect x="1136.3" y="421" width="0.3" height="15.0" fill="rgb(208,49,19)" rx="2" ry="2" />
<text  x="1139.28" y="431.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="946.4" y="389" width="0.3" height="15.0" fill="rgb(253,200,47)" rx="2" ry="2" />
<text  x="949.39" y="399.5" ></text>
</g>
<g >
<title>schedule (12 samples, 0.30%)</title><rect x="66.3" y="373" width="3.5" height="15.0" fill="rgb(241,116,12)" rx="2" ry="2" />
<text  x="69.33" y="383.5" ></text>
</g>
<g >
<title>native_write_msr (4 samples, 0.10%)</title><rect x="35.6" y="181" width="1.1" height="15.0" fill="rgb(228,196,48)" rx="2" ry="2" />
<text  x="38.55" y="191.5" ></text>
</g>
<g >
<title>get_task_policy.part.0 (1 samples, 0.02%)</title><rect x="1179.8" y="437" width="0.3" height="15.0" fill="rgb(238,12,37)" rx="2" ry="2" />
<text  x="1182.84" y="447.5" ></text>
</g>
<g >
<title>CSV2JSON::CSV2JSON (81 samples, 1.99%)</title><rect x="1084.9" y="549" width="23.5" height="15.0" fill="rgb(216,186,27)" rx="2" ry="2" />
<text  x="1087.89" y="559.5" >C..</text>
</g>
<g >
<title>wake_up_q (1 samples, 0.02%)</title><rect x="1134.8" y="469" width="0.3" height="15.0" fill="rgb(239,70,32)" rx="2" ry="2" />
<text  x="1137.83" y="479.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void  (2,123 samples, 52.24%)</title><rect x="343.9" y="517" width="616.4" height="15.0" fill="rgb(242,194,14)" rx="2" ry="2" />
<text  x="346.91" y="527.5" >std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void </text>
</g>
<g >
<title>std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair&lt;unsigned int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, true&gt; (1 samples, 0.02%)</title><rect x="1089.2" y="517" width="0.3" height="15.0" fill="rgb(252,126,54)" rx="2" ry="2" />
<text  x="1092.25" y="527.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (13 samples, 0.32%)</title><rect x="37.9" y="309" width="3.7" height="15.0" fill="rgb(216,176,7)" rx="2" ry="2" />
<text  x="40.87" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::c_str (19 samples, 0.47%)</title><rect x="794.0" y="421" width="5.5" height="15.0" fill="rgb(228,22,15)" rx="2" ry="2" />
<text  x="796.96" y="431.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.02%)</title><rect x="946.4" y="373" width="0.3" height="15.0" fill="rgb(234,72,9)" rx="2" ry="2" />
<text  x="949.39" y="383.5" ></text>
</g>
<g >
<title>try_to_release_page (8 samples, 0.20%)</title><rect x="27.4" y="309" width="2.3" height="15.0" fill="rgb(252,213,40)" rx="2" ry="2" />
<text  x="30.42" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::destroy&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="922.3" y="389" width="0.3" height="15.0" fill="rgb(208,67,18)" rx="2" ry="2" />
<text  x="925.29" y="399.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="954.2" y="373" width="0.3" height="15.0" fill="rgb(213,146,24)" rx="2" ry="2" />
<text  x="957.23" y="383.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="278.6" y="517" width="0.3" height="15.0" fill="rgb(209,51,39)" rx="2" ry="2" />
<text  x="281.58" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (2 samples, 0.05%)</title><rect x="936.2" y="437" width="0.6" height="15.0" fill="rgb(253,59,26)" rx="2" ry="2" />
<text  x="939.23" y="447.5" ></text>
</g>
<g >
<title>xas_clear_mark (1 samples, 0.02%)</title><rect x="23.9" y="325" width="0.3" height="15.0" fill="rgb(222,38,14)" rx="2" ry="2" />
<text  x="26.94" y="335.5" ></text>
</g>
<g >
<title>xas_store (3 samples, 0.07%)</title><rect x="44.0" y="309" width="0.8" height="15.0" fill="rgb(211,127,35)" rx="2" ry="2" />
<text  x="46.97" y="319.5" ></text>
</g>
<g >
<title>finish_task_switch (72 samples, 1.77%)</title><rect x="74.5" y="421" width="20.9" height="15.0" fill="rgb(254,139,24)" rx="2" ry="2" />
<text  x="77.46" y="431.5" ></text>
</g>
<g >
<title>CSV2JSON::List2Cell (16 samples, 0.39%)</title><rect x="357.0" y="421" width="4.6" height="15.0" fill="rgb(249,49,39)" rx="2" ry="2" />
<text  x="359.97" y="431.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="57.3" y="469" width="0.3" height="15.0" fill="rgb(240,55,2)" rx="2" ry="2" />
<text  x="60.33" y="479.5" ></text>
</g>
<g >
<title>__dquot_alloc_space (1 samples, 0.02%)</title><rect x="36.7" y="309" width="0.3" height="15.0" fill="rgb(231,198,1)" rx="2" ry="2" />
<text  x="39.71" y="319.5" ></text>
</g>
<g >
<title>rmqueue (3 samples, 0.07%)</title><rect x="40.8" y="277" width="0.8" height="15.0" fill="rgb(240,208,17)" rx="2" ry="2" />
<text  x="43.78" y="287.5" ></text>
</g>
<g >
<title>[C2J] (23 samples, 0.57%)</title><rect x="926.6" y="437" width="6.7" height="15.0" fill="rgb(238,209,44)" rx="2" ry="2" />
<text  x="929.65" y="447.5" ></text>
</g>
<g >
<title>free_unref_page_commit (1 samples, 0.02%)</title><rect x="1155.2" y="341" width="0.2" height="15.0" fill="rgb(252,17,54)" rx="2" ry="2" />
<text  x="1158.16" y="351.5" ></text>
</g>
<g >
<title>__schedule (12 samples, 0.30%)</title><rect x="66.3" y="357" width="3.5" height="15.0" fill="rgb(205,52,1)" rx="2" ry="2" />
<text  x="69.33" y="367.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="1163.3" y="469" width="0.3" height="15.0" fill="rgb(250,162,36)" rx="2" ry="2" />
<text  x="1166.29" y="479.5" ></text>
</g>
<g >
<title>new_slab (1 samples, 0.02%)</title><rect x="44.6" y="213" width="0.2" height="15.0" fill="rgb(247,89,50)" rx="2" ry="2" />
<text  x="47.55" y="223.5" ></text>
</g>
<g >
<title>balance_dirty_pages (4 samples, 0.10%)</title><rect x="31.8" y="373" width="1.1" height="15.0" fill="rgb(246,178,27)" rx="2" ry="2" />
<text  x="34.78" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::c_str (3 samples, 0.07%)</title><rect x="1107.0" y="533" width="0.8" height="15.0" fill="rgb(238,163,50)" rx="2" ry="2" />
<text  x="1109.96" y="543.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.10%)</title><rect x="1188.8" y="389" width="1.2" height="15.0" fill="rgb(215,87,24)" rx="2" ry="2" />
<text  x="1191.84" y="399.5" ></text>
</g>
<g >
<title>find_first_bit (1 samples, 0.02%)</title><rect x="337.2" y="373" width="0.3" height="15.0" fill="rgb(237,53,11)" rx="2" ry="2" />
<text  x="340.23" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (59 samples, 1.45%)</title><rect x="320.4" y="565" width="17.1" height="15.0" fill="rgb(240,197,3)" rx="2" ry="2" />
<text  x="323.39" y="575.5" ></text>
</g>
<g >
<title>[unknown] (2,123 samples, 52.24%)</title><rect x="343.9" y="549" width="616.4" height="15.0" fill="rgb(211,131,38)" rx="2" ry="2" />
<text  x="346.91" y="559.5" >[unknown]</text>
</g>
<g >
<title>delayed_work_timer_fn (1 samples, 0.02%)</title><rect x="337.2" y="437" width="0.3" height="15.0" fill="rgb(240,160,51)" rx="2" ry="2" />
<text  x="340.23" y="447.5" ></text>
</g>
<g >
<title>vfs_write (90 samples, 2.21%)</title><rect x="31.2" y="485" width="26.1" height="15.0" fill="rgb(244,22,10)" rx="2" ry="2" />
<text  x="34.20" y="495.5" >v..</text>
</g>
<g >
<title>find_vma (1 samples, 0.02%)</title><rect x="1169.7" y="501" width="0.3" height="15.0" fill="rgb(235,120,45)" rx="2" ry="2" />
<text  x="1172.68" y="511.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="954.2" y="357" width="0.3" height="15.0" fill="rgb(232,202,26)" rx="2" ry="2" />
<text  x="957.23" y="367.5" ></text>
</g>
<g >
<title>mem_cgroup_charge_statistics (1 samples, 0.02%)</title><rect x="42.5" y="309" width="0.3" height="15.0" fill="rgb(212,67,15)" rx="2" ry="2" />
<text  x="45.52" y="319.5" ></text>
</g>
<g >
<title>ctx_sched_out (1 samples, 0.02%)</title><rect x="73.3" y="389" width="0.3" height="15.0" fill="rgb(217,194,29)" rx="2" ry="2" />
<text  x="76.30" y="399.5" ></text>
</g>
<g >
<title>do_filp_open (35 samples, 0.86%)</title><rect x="20.2" y="485" width="10.1" height="15.0" fill="rgb(244,4,15)" rx="2" ry="2" />
<text  x="23.16" y="495.5" ></text>
</g>
<g >
<title>__mod_memcg_state (1 samples, 0.02%)</title><rect x="1151.4" y="389" width="0.3" height="15.0" fill="rgb(224,45,20)" rx="2" ry="2" />
<text  x="1154.38" y="399.5" ></text>
</g>
<g >
<title>up_write (1 samples, 0.02%)</title><rect x="1134.8" y="501" width="0.3" height="15.0" fill="rgb(250,225,30)" rx="2" ry="2" />
<text  x="1137.83" y="511.5" ></text>
</g>
<g >
<title>page_fault (14 samples, 0.34%)</title><rect x="1136.6" y="565" width="4.0" height="15.0" fill="rgb(230,216,54)" rx="2" ry="2" />
<text  x="1139.57" y="575.5" ></text>
</g>
<g >
<title>xas_init_marks (1 samples, 0.02%)</title><rect x="24.2" y="325" width="0.3" height="15.0" fill="rgb(212,206,5)" rx="2" ry="2" />
<text  x="27.23" y="335.5" ></text>
</g>
<g >
<title>rwsem_down_read_slowpath (4 samples, 0.10%)</title><rect x="35.6" y="309" width="1.1" height="15.0" fill="rgb(225,41,30)" rx="2" ry="2" />
<text  x="38.55" y="319.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (50 samples, 1.23%)</title><rect x="32.9" y="389" width="14.6" height="15.0" fill="rgb(214,0,50)" rx="2" ry="2" />
<text  x="35.94" y="399.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (2 samples, 0.05%)</title><rect x="182.2" y="517" width="0.6" height="15.0" fill="rgb(209,46,40)" rx="2" ry="2" />
<text  x="185.18" y="527.5" ></text>
</g>
<g >
<title>jbd2_write_access_granted (1 samples, 0.02%)</title><rect x="52.4" y="261" width="0.3" height="15.0" fill="rgb(229,29,15)" rx="2" ry="2" />
<text  x="55.39" y="271.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="1163.3" y="517" width="0.3" height="15.0" fill="rgb(216,224,46)" rx="2" ry="2" />
<text  x="1166.29" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.02%)</title><rect x="792.8" y="421" width="0.3" height="15.0" fill="rgb(237,112,21)" rx="2" ry="2" />
<text  x="795.80" y="431.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (1 samples, 0.02%)</title><rect x="37.3" y="309" width="0.3" height="15.0" fill="rgb(248,171,37)" rx="2" ry="2" />
<text  x="40.29" y="319.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.10%)</title><rect x="715.0" y="277" width="1.1" height="15.0" fill="rgb(215,207,13)" rx="2" ry="2" />
<text  x="717.98" y="287.5" ></text>
</g>
<g >
<title>do_mprotect_pkey (82 samples, 2.02%)</title><rect x="1112.2" y="517" width="23.8" height="15.0" fill="rgb(231,211,10)" rx="2" ry="2" />
<text  x="1115.19" y="527.5" >d..</text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="1179.5" y="421" width="0.3" height="15.0" fill="rgb(210,156,10)" rx="2" ry="2" />
<text  x="1182.55" y="431.5" ></text>
</g>
<g >
<title>std::deque&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::push_back (2 samples, 0.05%)</title><rect x="1088.1" y="517" width="0.6" height="15.0" fill="rgb(233,98,25)" rx="2" ry="2" />
<text  x="1091.09" y="527.5" ></text>
</g>
<g >
<title>rcu_sched_clock_irq (1 samples, 0.02%)</title><rect x="1163.3" y="453" width="0.3" height="15.0" fill="rgb(207,79,3)" rx="2" ry="2" />
<text  x="1166.29" y="463.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (14 samples, 0.34%)</title><rect x="48.9" y="341" width="4.1" height="15.0" fill="rgb(231,12,16)" rx="2" ry="2" />
<text  x="51.91" y="351.5" ></text>
</g>
<g >
<title>page_fault (58 samples, 1.43%)</title><rect x="1168.8" y="565" width="16.8" height="15.0" fill="rgb(210,26,29)" rx="2" ry="2" />
<text  x="1171.80" y="575.5" ></text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.02%)</title><rect x="10.0" y="517" width="0.3" height="15.0" fill="rgb(206,91,7)" rx="2" ry="2" />
<text  x="13.00" y="527.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (1 samples, 0.02%)</title><rect x="1181.3" y="389" width="0.3" height="15.0" fill="rgb(252,129,39)" rx="2" ry="2" />
<text  x="1184.29" y="399.5" ></text>
</g>
<g >
<title>perf_iterate_ctx (4 samples, 0.10%)</title><rect x="1129.6" y="453" width="1.2" height="15.0" fill="rgb(238,84,4)" rx="2" ry="2" />
<text  x="1132.61" y="463.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="954.2" y="421" width="0.3" height="15.0" fill="rgb(234,59,5)" rx="2" ry="2" />
<text  x="957.23" y="431.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (1 samples, 0.02%)</title><rect x="1155.2" y="325" width="0.2" height="15.0" fill="rgb(244,91,36)" rx="2" ry="2" />
<text  x="1158.16" y="335.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (1 samples, 0.02%)</title><rect x="1186.5" y="549" width="0.3" height="15.0" fill="rgb(216,186,9)" rx="2" ry="2" />
<text  x="1189.52" y="559.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (79 samples, 1.94%)</title><rect x="73.0" y="469" width="22.9" height="15.0" fill="rgb(248,220,30)" rx="2" ry="2" />
<text  x="76.01" y="479.5" >f..</text>
</g>
<g >
<title>_cond_resched (4 samples, 0.10%)</title><rect x="22.5" y="357" width="1.1" height="15.0" fill="rgb(205,35,39)" rx="2" ry="2" />
<text  x="25.49" y="367.5" ></text>
</g>
<g >
<title>__x64_sys_read (26 samples, 0.64%)</title><rect x="62.6" y="517" width="7.5" height="15.0" fill="rgb(223,16,26)" rx="2" ry="2" />
<text  x="65.55" y="527.5" ></text>
</g>
<g >
<title>mprotect_fixup (41 samples, 1.01%)</title><rect x="1122.3" y="501" width="12.0" height="15.0" fill="rgb(243,21,4)" rx="2" ry="2" />
<text  x="1125.35" y="511.5" ></text>
</g>
<g >
<title>mprotect_fixup (1 samples, 0.02%)</title><rect x="1136.0" y="517" width="0.3" height="15.0" fill="rgb(241,201,9)" rx="2" ry="2" />
<text  x="1138.99" y="527.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (12 samples, 0.30%)</title><rect x="66.3" y="277" width="3.5" height="15.0" fill="rgb(238,37,6)" rx="2" ry="2" />
<text  x="69.33" y="287.5" ></text>
</g>
<g >
<title>try_charge (2 samples, 0.05%)</title><rect x="43.4" y="293" width="0.6" height="15.0" fill="rgb(244,69,34)" rx="2" ry="2" />
<text  x="46.39" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (2 samples, 0.05%)</title><rect x="1091.6" y="437" width="0.6" height="15.0" fill="rgb(249,208,39)" rx="2" ry="2" />
<text  x="1094.57" y="447.5" ></text>
</g>
<g >
<title>_pthread_cleanup_push_defer (1 samples, 0.02%)</title><rect x="1106.7" y="517" width="0.3" height="15.0" fill="rgb(219,85,5)" rx="2" ry="2" />
<text  x="1109.67" y="527.5" ></text>
</g>
<g >
<title>x86_pmu_enable (20 samples, 0.49%)</title><rect x="1115.4" y="389" width="5.8" height="15.0" fill="rgb(211,129,21)" rx="2" ry="2" />
<text  x="1118.38" y="399.5" ></text>
</g>
<g >
<title>__vma_adjust (1 samples, 0.02%)</title><rect x="1122.6" y="485" width="0.3" height="15.0" fill="rgb(223,73,28)" rx="2" ry="2" />
<text  x="1125.64" y="495.5" ></text>
</g>
<g >
<title>__lru_cache_add (4 samples, 0.10%)</title><rect x="1150.5" y="437" width="1.2" height="15.0" fill="rgb(234,209,18)" rx="2" ry="2" />
<text  x="1153.51" y="447.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (5 samples, 0.12%)</title><rect x="934.5" y="437" width="1.4" height="15.0" fill="rgb(238,74,45)" rx="2" ry="2" />
<text  x="937.49" y="447.5" ></text>
</g>
<g >
<title>unlink_chunk.isra.0 (29 samples, 0.71%)</title><rect x="960.3" y="565" width="8.5" height="15.0" fill="rgb(216,87,23)" rx="2" ry="2" />
<text  x="963.33" y="575.5" ></text>
</g>
<g >
<title>std::queue&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::deque&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::push (17 samples, 0.42%)</title><rect x="1089.5" y="517" width="5.0" height="15.0" fill="rgb(215,185,9)" rx="2" ry="2" />
<text  x="1092.54" y="527.5" ></text>
</g>
<g >
<title>ext4_mark_iloc_dirty (7 samples, 0.17%)</title><rect x="49.2" y="309" width="2.0" height="15.0" fill="rgb(210,126,3)" rx="2" ry="2" />
<text  x="52.20" y="319.5" ></text>
</g>
<g >
<title>std::forward&lt;unsigned int&amp;&gt; (1 samples, 0.02%)</title><rect x="1088.7" y="517" width="0.3" height="15.0" fill="rgb(229,65,24)" rx="2" ry="2" />
<text  x="1091.67" y="527.5" ></text>
</g>
<g >
<title>arch_vma_name (1 samples, 0.02%)</title><rect x="1122.9" y="485" width="0.3" height="15.0" fill="rgb(208,75,7)" rx="2" ry="2" />
<text  x="1125.93" y="495.5" ></text>
</g>
<g >
<title>page_fault (3 samples, 0.07%)</title><rect x="1108.7" y="533" width="0.9" height="15.0" fill="rgb(243,159,30)" rx="2" ry="2" />
<text  x="1111.70" y="543.5" ></text>
</g>
<g >
<title>page_add_new_anon_rmap (1 samples, 0.02%)</title><rect x="1109.3" y="421" width="0.3" height="15.0" fill="rgb(234,163,19)" rx="2" ry="2" />
<text  x="1112.28" y="431.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.0 (4 samples, 0.10%)</title><rect x="35.6" y="229" width="1.1" height="15.0" fill="rgb(251,81,48)" rx="2" ry="2" />
<text  x="38.55" y="239.5" ></text>
</g>
<g >
<title>rcu_sched_clock_irq (1 samples, 0.02%)</title><rect x="954.2" y="309" width="0.3" height="15.0" fill="rgb(250,211,23)" rx="2" ry="2" />
<text  x="957.23" y="319.5" ></text>
</g>
<g >
<title>io_schedule (5 samples, 0.12%)</title><rect x="1082.9" y="341" width="1.4" height="15.0" fill="rgb(209,120,48)" rx="2" ry="2" />
<text  x="1085.86" y="351.5" ></text>
</g>
<g >
<title>finish_task_switch (20 samples, 0.49%)</title><rect x="1115.4" y="437" width="5.8" height="15.0" fill="rgb(232,99,34)" rx="2" ry="2" />
<text  x="1118.38" y="447.5" ></text>
</g>
<g >
<title>finish_task_switch (15 samples, 0.37%)</title><rect x="57.9" y="517" width="4.4" height="15.0" fill="rgb(220,156,41)" rx="2" ry="2" />
<text  x="60.91" y="527.5" ></text>
</g>
<g >
<title>__handle_mm_fault (13 samples, 0.32%)</title><rect x="1148.5" y="485" width="3.8" height="15.0" fill="rgb(219,194,51)" rx="2" ry="2" />
<text  x="1151.48" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (2 samples, 0.05%)</title><rect x="1086.6" y="517" width="0.6" height="15.0" fill="rgb(226,182,49)" rx="2" ry="2" />
<text  x="1089.63" y="527.5" ></text>
</g>
<g >
<title>__pagevec_lru_add_fn (3 samples, 0.07%)</title><rect x="1180.7" y="405" width="0.9" height="15.0" fill="rgb(212,3,33)" rx="2" ry="2" />
<text  x="1183.71" y="415.5" ></text>
</g>
<g >
<title>__block_commit_write.isra.0 (6 samples, 0.15%)</title><rect x="53.0" y="341" width="1.7" height="15.0" fill="rgb(239,168,7)" rx="2" ry="2" />
<text  x="55.97" y="351.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::~basic_filebuf (17 samples, 0.42%)</title><rect x="339.0" y="565" width="4.9" height="15.0" fill="rgb(234,189,0)" rx="2" ry="2" />
<text  x="341.97" y="575.5" ></text>
</g>
<g >
<title>std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::~pair (1 samples, 0.02%)</title><rect x="960.0" y="437" width="0.3" height="15.0" fill="rgb(248,153,8)" rx="2" ry="2" />
<text  x="963.04" y="447.5" ></text>
</g>
<g >
<title>std::move&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="1094.2" y="501" width="0.3" height="15.0" fill="rgb(236,125,47)" rx="2" ry="2" />
<text  x="1097.18" y="511.5" ></text>
</g>
<g >
<title>schedule (4 samples, 0.10%)</title><rect x="715.0" y="357" width="1.1" height="15.0" fill="rgb(240,207,40)" rx="2" ry="2" />
<text  x="717.98" y="367.5" ></text>
</g>
<g >
<title>x86_pmu_enable (12 samples, 0.30%)</title><rect x="66.3" y="293" width="3.5" height="15.0" fill="rgb(232,74,24)" rx="2" ry="2" />
<text  x="69.33" y="303.5" ></text>
</g>
<g >
<title>do_futex (90 samples, 2.21%)</title><rect x="72.4" y="501" width="26.2" height="15.0" fill="rgb(235,17,40)" rx="2" ry="2" />
<text  x="75.43" y="511.5" >d..</text>
</g>
<g >
<title>prepare_exit_to_usermode (4 samples, 0.10%)</title><rect x="715.0" y="389" width="1.1" height="15.0" fill="rgb(228,7,44)" rx="2" ry="2" />
<text  x="717.98" y="399.5" ></text>
</g>
<g >
<title>mpage_prepare_extent_to_map (7 samples, 0.17%)</title><rect x="1082.9" y="373" width="2.0" height="15.0" fill="rgb(232,228,48)" rx="2" ry="2" />
<text  x="1085.86" y="383.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.02%)</title><rect x="946.4" y="357" width="0.3" height="15.0" fill="rgb(226,27,52)" rx="2" ry="2" />
<text  x="949.39" y="367.5" ></text>
</g>
<g >
<title>schedule_timeout (4 samples, 0.10%)</title><rect x="31.8" y="341" width="1.1" height="15.0" fill="rgb(243,195,13)" rx="2" ry="2" />
<text  x="34.78" y="351.5" ></text>
</g>
<g >
<title>vmacache_find (1 samples, 0.02%)</title><rect x="1169.7" y="485" width="0.3" height="15.0" fill="rgb(237,76,11)" rx="2" ry="2" />
<text  x="1172.68" y="495.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (16 samples, 0.39%)</title><rect x="48.3" y="357" width="4.7" height="15.0" fill="rgb(240,45,31)" rx="2" ry="2" />
<text  x="51.33" y="367.5" ></text>
</g>
<g >
<title>xas_load (3 samples, 0.07%)</title><rect x="24.8" y="309" width="0.9" height="15.0" fill="rgb(236,158,34)" rx="2" ry="2" />
<text  x="27.81" y="319.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="1108.1" y="453" width="0.3" height="15.0" fill="rgb(254,130,13)" rx="2" ry="2" />
<text  x="1111.12" y="463.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (1 samples, 0.02%)</title><rect x="1109.0" y="421" width="0.3" height="15.0" fill="rgb(245,190,20)" rx="2" ry="2" />
<text  x="1111.99" y="431.5" ></text>
</g>
<g >
<title>sync_regs (1 samples, 0.02%)</title><rect x="1140.6" y="565" width="0.3" height="15.0" fill="rgb(222,85,25)" rx="2" ry="2" />
<text  x="1143.64" y="575.5" ></text>
</g>
<g >
<title>generic_perform_write (86 samples, 2.12%)</title><rect x="31.8" y="405" width="24.9" height="15.0" fill="rgb(222,10,47)" rx="2" ry="2" />
<text  x="34.78" y="415.5" >g..</text>
</g>
<g >
<title>ksys_write (91 samples, 2.24%)</title><rect x="30.9" y="501" width="26.4" height="15.0" fill="rgb(253,110,25)" rx="2" ry="2" />
<text  x="33.91" y="511.5" >k..</text>
</g>
<g >
<title>__lru_cache_add (4 samples, 0.10%)</title><rect x="1180.4" y="437" width="1.2" height="15.0" fill="rgb(242,61,37)" rx="2" ry="2" />
<text  x="1183.42" y="447.5" ></text>
</g>
<g >
<title>do_futex (38 samples, 0.94%)</title><rect x="306.2" y="501" width="11.0" height="15.0" fill="rgb(252,14,21)" rx="2" ry="2" />
<text  x="309.16" y="511.5" ></text>
</g>
<g >
<title>ext4_da_map_blocks.constprop.0 (11 samples, 0.27%)</title><rect x="34.4" y="341" width="3.2" height="15.0" fill="rgb(240,10,37)" rx="2" ry="2" />
<text  x="37.39" y="351.5" ></text>
</g>
<g >
<title>__do_page_fault (3 samples, 0.07%)</title><rect x="1108.7" y="501" width="0.9" height="15.0" fill="rgb(208,99,28)" rx="2" ry="2" />
<text  x="1111.70" y="511.5" ></text>
</g>
<g >
<title>free_buffer_head (2 samples, 0.05%)</title><rect x="28.9" y="245" width="0.6" height="15.0" fill="rgb(225,137,44)" rx="2" ry="2" />
<text  x="31.87" y="255.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1108.1" y="501" width="0.3" height="15.0" fill="rgb(241,156,17)" rx="2" ry="2" />
<text  x="1111.12" y="511.5" ></text>
</g>
<g >
<title>deactivate_task (1 samples, 0.02%)</title><rect x="1082.9" y="293" width="0.2" height="15.0" fill="rgb(240,150,48)" rx="2" ry="2" />
<text  x="1085.86" y="303.5" ></text>
</g>
<g >
<title>__strlen_avx2 (10 samples, 0.25%)</title><rect x="127.6" y="565" width="2.9" height="15.0" fill="rgb(210,213,50)" rx="2" ry="2" />
<text  x="130.59" y="575.5" ></text>
</g>
<g >
<title>pick_next_task_idle (1 samples, 0.02%)</title><rect x="95.7" y="421" width="0.2" height="15.0" fill="rgb(205,4,20)" rx="2" ry="2" />
<text  x="98.65" y="431.5" ></text>
</g>
<g >
<title>schedule (4 samples, 0.10%)</title><rect x="35.6" y="293" width="1.1" height="15.0" fill="rgb(223,7,20)" rx="2" ry="2" />
<text  x="38.55" y="303.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.0 (4 samples, 0.10%)</title><rect x="1083.1" y="261" width="1.2" height="15.0" fill="rgb(214,12,30)" rx="2" ry="2" />
<text  x="1086.15" y="271.5" ></text>
</g>
<g >
<title>std::deque&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_S_max_size (1 samples, 0.02%)</title><rect x="1093.9" y="437" width="0.3" height="15.0" fill="rgb(219,141,29)" rx="2" ry="2" />
<text  x="1096.89" y="447.5" ></text>
</g>
<g >
<title>retint_user (1 samples, 0.02%)</title><rect x="1185.6" y="565" width="0.3" height="15.0" fill="rgb(220,24,33)" rx="2" ry="2" />
<text  x="1188.64" y="575.5" ></text>
</g>
<g >
<title>__libc_disable_asynccancel (1 samples, 0.02%)</title><rect x="62.3" y="565" width="0.3" height="15.0" fill="rgb(218,151,9)" rx="2" ry="2" />
<text  x="65.26" y="575.5" ></text>
</g>
<g >
<title>__schedule (4 samples, 0.10%)</title><rect x="22.5" y="325" width="1.1" height="15.0" fill="rgb(230,112,46)" rx="2" ry="2" />
<text  x="25.49" y="335.5" ></text>
</g>
<g >
<title>vma_set_page_prot (1 samples, 0.02%)</title><rect x="1135.7" y="501" width="0.3" height="15.0" fill="rgb(212,95,50)" rx="2" ry="2" />
<text  x="1138.70" y="511.5" ></text>
</g>
</g>
</svg>
