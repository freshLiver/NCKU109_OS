<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="582" onload="init(evt)" viewBox="0 0 1200 582" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="582.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="565" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="565" > </text>
<g id="frames">
<g >
<title>[unknown] (2,549 samples, 53.92%)</title><rect x="340.8" y="469" width="636.3" height="15.0" fill="rgb(214,77,12)" rx="2" ry="2" />
<text  x="343.76" y="479.5" >[unknown]</text>
</g>
<g >
<title>____fput (2 samples, 0.04%)</title><rect x="1087.2" y="421" width="0.5" height="15.0" fill="rgb(254,201,10)" rx="2" ry="2" />
<text  x="1090.15" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (23 samples, 0.49%)</title><rect x="923.4" y="341" width="5.7" height="15.0" fill="rgb(207,196,44)" rx="2" ry="2" />
<text  x="926.40" y="351.5" ></text>
</g>
<g >
<title>finish_task_switch (97 samples, 2.05%)</title><rect x="69.4" y="341" width="24.2" height="15.0" fill="rgb(241,60,16)" rx="2" ry="2" />
<text  x="72.41" y="351.5" >f..</text>
</g>
<g >
<title>__ext4_journal_get_write_access (1 samples, 0.02%)</title><rect x="45.9" y="213" width="0.3" height="15.0" fill="rgb(215,129,11)" rx="2" ry="2" />
<text  x="48.95" y="223.5" ></text>
</g>
<g >
<title>__clone (16 samples, 0.34%)</title><rect x="49.4" y="485" width="4.0" height="15.0" fill="rgb(224,78,25)" rx="2" ry="2" />
<text  x="52.44" y="495.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.08%)</title><rect x="1136.6" y="309" width="1.0" height="15.0" fill="rgb(252,90,51)" rx="2" ry="2" />
<text  x="1139.58" y="319.5" ></text>
</g>
<g >
<title>__handle_mm_fault (18 samples, 0.38%)</title><rect x="1144.3" y="405" width="4.5" height="15.0" fill="rgb(223,123,41)" rx="2" ry="2" />
<text  x="1147.32" y="415.5" ></text>
</g>
<g >
<title>__handle_mm_fault (3 samples, 0.06%)</title><rect x="1106.9" y="373" width="0.7" height="15.0" fill="rgb(206,94,5)" rx="2" ry="2" />
<text  x="1109.87" y="383.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (16 samples, 0.34%)</title><rect x="49.4" y="421" width="4.0" height="15.0" fill="rgb(229,207,11)" rx="2" ry="2" />
<text  x="52.44" y="431.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.08%)</title><rect x="707.5" y="181" width="1.0" height="15.0" fill="rgb(216,45,32)" rx="2" ry="2" />
<text  x="710.47" y="191.5" ></text>
</g>
<g >
<title>_raw_spin_lock (2 samples, 0.04%)</title><rect x="295.8" y="405" width="0.5" height="15.0" fill="rgb(210,198,11)" rx="2" ry="2" />
<text  x="298.83" y="415.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="707.2" y="213" width="0.3" height="15.0" fill="rgb(252,25,38)" rx="2" ry="2" />
<text  x="710.22" y="223.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (1 samples, 0.02%)</title><rect x="46.9" y="197" width="0.3" height="15.0" fill="rgb(231,136,7)" rx="2" ry="2" />
<text  x="49.95" y="207.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="35.7" y="133" width="0.3" height="15.0" fill="rgb(228,125,24)" rx="2" ry="2" />
<text  x="38.71" y="143.5" ></text>
</g>
<g >
<title>do_user_addr_fault (85 samples, 1.80%)</title><rect x="1165.0" y="437" width="21.3" height="15.0" fill="rgb(254,132,15)" rx="2" ry="2" />
<text  x="1168.04" y="447.5" ></text>
</g>
<g >
<title>__x64_sys_mprotect (1 samples, 0.02%)</title><rect x="1108.1" y="469" width="0.3" height="15.0" fill="rgb(220,194,50)" rx="2" ry="2" />
<text  x="1111.12" y="479.5" ></text>
</g>
<g >
<title>page_fault (27 samples, 0.57%)</title><rect x="1142.1" y="485" width="6.7" height="15.0" fill="rgb(241,157,29)" rx="2" ry="2" />
<text  x="1145.07" y="495.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_deallocate_node (3 samples, 0.06%)</title><rect x="941.4" y="293" width="0.7" height="15.0" fill="rgb(222,115,26)" rx="2" ry="2" />
<text  x="944.37" y="303.5" ></text>
</g>
<g >
<title>truncate_inode_pages_range (5 samples, 0.11%)</title><rect x="23.7" y="293" width="1.3" height="15.0" fill="rgb(251,100,47)" rx="2" ry="2" />
<text  x="26.73" y="303.5" ></text>
</g>
<g >
<title>clear_page_erms (1 samples, 0.02%)</title><rect x="29.5" y="85" width="0.2" height="15.0" fill="rgb(241,164,51)" rx="2" ry="2" />
<text  x="32.47" y="95.5" ></text>
</g>
<g >
<title>rb_erase (1 samples, 0.02%)</title><rect x="706.5" y="245" width="0.2" height="15.0" fill="rgb(225,108,49)" rx="2" ry="2" />
<text  x="709.47" y="255.5" ></text>
</g>
<g >
<title>alloc_pages_vma (1 samples, 0.02%)</title><rect x="1160.3" y="373" width="0.2" height="15.0" fill="rgb(253,229,3)" rx="2" ry="2" />
<text  x="1163.29" y="383.5" ></text>
</g>
<g >
<title>__do_page_cache_readahead (1 samples, 0.02%)</title><rect x="57.9" y="277" width="0.3" height="15.0" fill="rgb(236,160,33)" rx="2" ry="2" />
<text  x="60.93" y="287.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (96 samples, 2.03%)</title><rect x="69.4" y="325" width="24.0" height="15.0" fill="rgb(205,226,2)" rx="2" ry="2" />
<text  x="72.41" y="335.5" >_..</text>
</g>
<g >
<title>page_add_new_anon_rmap (1 samples, 0.02%)</title><rect x="1185.0" y="373" width="0.3" height="15.0" fill="rgb(212,144,19)" rx="2" ry="2" />
<text  x="1188.01" y="383.5" ></text>
</g>
<g >
<title>perf_event_mmap_output (1 samples, 0.02%)</title><rect x="1129.3" y="357" width="0.3" height="15.0" fill="rgb(221,38,35)" rx="2" ry="2" />
<text  x="1132.34" y="367.5" ></text>
</g>
<g >
<title>std::deque&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::empty (2 samples, 0.04%)</title><rect x="933.1" y="325" width="0.5" height="15.0" fill="rgb(216,179,5)" rx="2" ry="2" />
<text  x="936.13" y="335.5" ></text>
</g>
<g >
<title>_IO_setb (5 samples, 0.11%)</title><rect x="1085.9" y="501" width="1.3" height="15.0" fill="rgb(226,198,28)" rx="2" ry="2" />
<text  x="1088.90" y="511.5" ></text>
</g>
<g >
<title>[C2J] (1 samples, 0.02%)</title><rect x="1091.4" y="357" width="0.2" height="15.0" fill="rgb(245,79,43)" rx="2" ry="2" />
<text  x="1094.40" y="367.5" ></text>
</g>
<g >
<title>nvme_queue_rq (1 samples, 0.02%)</title><rect x="57.9" y="133" width="0.3" height="15.0" fill="rgb(233,118,10)" rx="2" ry="2" />
<text  x="60.93" y="143.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (30 samples, 0.63%)</title><rect x="961.6" y="357" width="7.5" height="15.0" fill="rgb(230,75,35)" rx="2" ry="2" />
<text  x="964.59" y="367.5" ></text>
</g>
<g >
<title>wake_up_q (40 samples, 0.85%)</title><rect x="299.8" y="389" width="10.0" height="15.0" fill="rgb(250,70,6)" rx="2" ry="2" />
<text  x="302.82" y="399.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="1180.8" y="229" width="0.2" height="15.0" fill="rgb(209,63,1)" rx="2" ry="2" />
<text  x="1183.76" y="239.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="155.3" y="405" width="0.2" height="15.0" fill="rgb(212,61,6)" rx="2" ry="2" />
<text  x="158.28" y="415.5" ></text>
</g>
<g >
<title>_IO_file_xsputn@@GLIBC_2.2.5 (4 samples, 0.08%)</title><rect x="16.5" y="485" width="1.0" height="15.0" fill="rgb(248,169,38)" rx="2" ry="2" />
<text  x="19.49" y="495.5" ></text>
</g>
<g >
<title>ext4_release_file (2 samples, 0.04%)</title><rect x="1087.2" y="389" width="0.5" height="15.0" fill="rgb(244,35,39)" rx="2" ry="2" />
<text  x="1090.15" y="399.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::destroy&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (8 samples, 0.17%)</title><rect x="938.9" y="309" width="2.0" height="15.0" fill="rgb(211,158,18)" rx="2" ry="2" />
<text  x="941.87" y="319.5" ></text>
</g>
<g >
<title>std::deque&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::pop_front (23 samples, 0.49%)</title><rect x="936.6" y="325" width="5.8" height="15.0" fill="rgb(242,66,25)" rx="2" ry="2" />
<text  x="939.63" y="335.5" ></text>
</g>
<g >
<title>ttwu_do_activate (14 samples, 0.30%)</title><rect x="306.1" y="357" width="3.5" height="15.0" fill="rgb(219,68,6)" rx="2" ry="2" />
<text  x="309.06" y="367.5" ></text>
</g>
<g >
<title>__vma_adjust (3 samples, 0.06%)</title><rect x="1130.3" y="389" width="0.8" height="15.0" fill="rgb(241,162,28)" rx="2" ry="2" />
<text  x="1133.34" y="399.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="35.7" y="101" width="0.3" height="15.0" fill="rgb(252,24,46)" rx="2" ry="2" />
<text  x="38.71" y="111.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (113 samples, 2.39%)</title><rect x="65.4" y="389" width="28.2" height="15.0" fill="rgb(243,37,5)" rx="2" ry="2" />
<text  x="68.42" y="399.5" >f..</text>
</g>
<g >
<title>page_fault (15 samples, 0.32%)</title><rect x="1132.6" y="485" width="3.7" height="15.0" fill="rgb(216,172,0)" rx="2" ry="2" />
<text  x="1135.59" y="495.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator (3 samples, 0.06%)</title><rect x="929.1" y="341" width="0.8" height="15.0" fill="rgb(225,188,51)" rx="2" ry="2" />
<text  x="932.14" y="351.5" ></text>
</g>
<g >
<title>error_exit (1 samples, 0.02%)</title><rect x="1164.5" y="485" width="0.3" height="15.0" fill="rgb(247,33,32)" rx="2" ry="2" />
<text  x="1167.54" y="495.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1085.4" y="469" width="0.3" height="15.0" fill="rgb(212,188,45)" rx="2" ry="2" />
<text  x="1088.41" y="479.5" ></text>
</g>
<g >
<title>task_work_run (2 samples, 0.04%)</title><rect x="1087.2" y="437" width="0.5" height="15.0" fill="rgb(230,72,34)" rx="2" ry="2" />
<text  x="1090.15" y="447.5" ></text>
</g>
<g >
<title>_IO_do_write@@GLIBC_2.2.5 (1 samples, 0.02%)</title><rect x="1085.7" y="501" width="0.2" height="15.0" fill="rgb(252,161,33)" rx="2" ry="2" />
<text  x="1088.65" y="511.5" ></text>
</g>
<g >
<title>ext4_invalidatepage (3 samples, 0.06%)</title><rect x="24.2" y="261" width="0.8" height="15.0" fill="rgb(239,17,53)" rx="2" ry="2" />
<text  x="27.23" y="271.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (1 samples, 0.02%)</title><rect x="25.2" y="469" width="0.3" height="15.0" fill="rgb(246,26,42)" rx="2" ry="2" />
<text  x="28.23" y="479.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1085.4" y="485" width="0.3" height="15.0" fill="rgb(243,170,5)" rx="2" ry="2" />
<text  x="1088.41" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::destroy&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (7 samples, 0.15%)</title><rect x="938.9" y="293" width="1.7" height="15.0" fill="rgb(232,173,16)" rx="2" ry="2" />
<text  x="941.87" y="303.5" ></text>
</g>
<g >
<title>generic_file_read_iter (22 samples, 0.47%)</title><rect x="53.9" y="341" width="5.5" height="15.0" fill="rgb(245,92,49)" rx="2" ry="2" />
<text  x="56.93" y="351.5" ></text>
</g>
<g >
<title>do_user_addr_fault (20 samples, 0.42%)</title><rect x="1143.8" y="437" width="5.0" height="15.0" fill="rgb(217,146,18)" rx="2" ry="2" />
<text  x="1146.82" y="447.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="781.1" y="341" width="0.3" height="15.0" fill="rgb(221,130,8)" rx="2" ry="2" />
<text  x="784.11" y="351.5" ></text>
</g>
<g >
<title>lru_cache_add_active_or_unevictable (1 samples, 0.02%)</title><rect x="1185.3" y="389" width="0.2" height="15.0" fill="rgb(208,49,6)" rx="2" ry="2" />
<text  x="1188.26" y="399.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="49.2" y="453" width="0.2" height="15.0" fill="rgb(207,156,41)" rx="2" ry="2" />
<text  x="52.19" y="463.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (18 samples, 0.38%)</title><rect x="765.4" y="341" width="4.5" height="15.0" fill="rgb(213,20,44)" rx="2" ry="2" />
<text  x="768.38" y="351.5" ></text>
</g>
<g >
<title>schedule (8 samples, 0.17%)</title><rect x="55.9" y="293" width="2.0" height="15.0" fill="rgb(214,173,20)" rx="2" ry="2" />
<text  x="58.93" y="303.5" ></text>
</g>
<g >
<title>_IO_default_xsputn (411 samples, 8.69%)</title><rect x="983.1" y="501" width="102.6" height="15.0" fill="rgb(224,144,44)" rx="2" ry="2" />
<text  x="986.06" y="511.5" >_IO_default_..</text>
</g>
<g >
<title>fpregs_assert_state_consistent (1 samples, 0.02%)</title><rect x="310.3" y="453" width="0.3" height="15.0" fill="rgb(232,118,33)" rx="2" ry="2" />
<text  x="313.30" y="463.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (6 samples, 0.13%)</title><rect x="38.0" y="229" width="1.5" height="15.0" fill="rgb(232,155,5)" rx="2" ry="2" />
<text  x="40.96" y="239.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="93.4" y="245" width="0.2" height="15.0" fill="rgb(219,97,44)" rx="2" ry="2" />
<text  x="96.38" y="255.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="293.8" y="421" width="0.3" height="15.0" fill="rgb(245,82,29)" rx="2" ry="2" />
<text  x="296.83" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (3 samples, 0.06%)</title><rect x="792.3" y="341" width="0.8" height="15.0" fill="rgb(246,79,43)" rx="2" ry="2" />
<text  x="795.34" y="351.5" ></text>
</g>
<g >
<title>std::queue&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::deque&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::push (11 samples, 0.23%)</title><rect x="1089.4" y="437" width="2.7" height="15.0" fill="rgb(242,106,29)" rx="2" ry="2" />
<text  x="1092.40" y="447.5" ></text>
</g>
<g >
<title>___slab_alloc (3 samples, 0.06%)</title><rect x="29.2" y="197" width="0.8" height="15.0" fill="rgb(212,11,18)" rx="2" ry="2" />
<text  x="32.22" y="207.5" ></text>
</g>
<g >
<title>ext4_da_reserve_space (1 samples, 0.02%)</title><rect x="32.2" y="261" width="0.3" height="15.0" fill="rgb(221,0,4)" rx="2" ry="2" />
<text  x="35.22" y="271.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (4 samples, 0.08%)</title><rect x="1184.0" y="373" width="1.0" height="15.0" fill="rgb(242,28,50)" rx="2" ry="2" />
<text  x="1187.01" y="383.5" ></text>
</g>
<g >
<title>do_syscall_64 (134 samples, 2.83%)</title><rect x="62.7" y="453" width="33.4" height="15.0" fill="rgb(244,187,27)" rx="2" ry="2" />
<text  x="65.67" y="463.5" >do..</text>
</g>
<g >
<title>__pagevec_lru_add_fn (1 samples, 0.02%)</title><rect x="1147.6" y="325" width="0.2" height="15.0" fill="rgb(242,175,45)" rx="2" ry="2" />
<text  x="1150.56" y="335.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="35.7" y="85" width="0.3" height="15.0" fill="rgb(227,157,23)" rx="2" ry="2" />
<text  x="38.71" y="95.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="1180.8" y="261" width="0.2" height="15.0" fill="rgb(233,155,12)" rx="2" ry="2" />
<text  x="1183.76" y="271.5" ></text>
</g>
<g >
<title>blk_mq_try_issue_list_directly (1 samples, 0.02%)</title><rect x="57.9" y="181" width="0.3" height="15.0" fill="rgb(242,228,21)" rx="2" ry="2" />
<text  x="60.93" y="191.5" ></text>
</g>
<g >
<title>_start (1 samples, 0.02%)</title><rect x="1149.3" y="501" width="0.3" height="15.0" fill="rgb(220,65,49)" rx="2" ry="2" />
<text  x="1152.31" y="511.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="31.2" y="245" width="0.3" height="15.0" fill="rgb(219,53,47)" rx="2" ry="2" />
<text  x="34.22" y="255.5" ></text>
</g>
<g >
<title>uncharge_batch (1 samples, 0.02%)</title><rect x="1151.6" y="261" width="0.2" height="15.0" fill="rgb(231,184,32)" rx="2" ry="2" />
<text  x="1154.56" y="271.5" ></text>
</g>
<g >
<title>pte_alloc_one (1 samples, 0.02%)</title><rect x="1173.3" y="357" width="0.2" height="15.0" fill="rgb(214,87,17)" rx="2" ry="2" />
<text  x="1176.27" y="367.5" ></text>
</g>
<g >
<title>add_to_page_cache_lru (16 samples, 0.34%)</title><rect x="36.5" y="261" width="4.0" height="15.0" fill="rgb(235,44,31)" rx="2" ry="2" />
<text  x="39.46" y="271.5" ></text>
</g>
<g >
<title>jbd2_journal_stop (5 samples, 0.11%)</title><rect x="40.5" y="277" width="1.2" height="15.0" fill="rgb(239,132,35)" rx="2" ry="2" />
<text  x="43.45" y="287.5" ></text>
</g>
<g >
<title>setup_new_exec (4 samples, 0.08%)</title><rect x="1189.0" y="389" width="1.0" height="15.0" fill="rgb(237,97,53)" rx="2" ry="2" />
<text  x="1192.00" y="399.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (30 samples, 0.63%)</title><rect x="1173.5" y="357" width="7.5" height="15.0" fill="rgb(236,217,1)" rx="2" ry="2" />
<text  x="1176.52" y="367.5" ></text>
</g>
<g >
<title>xas_load (2 samples, 0.04%)</title><rect x="58.4" y="277" width="0.5" height="15.0" fill="rgb(243,70,44)" rx="2" ry="2" />
<text  x="61.43" y="287.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="707.2" y="229" width="0.3" height="15.0" fill="rgb(226,181,36)" rx="2" ry="2" />
<text  x="710.22" y="239.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (50 samples, 1.06%)</title><rect x="28.0" y="309" width="12.5" height="15.0" fill="rgb(246,204,20)" rx="2" ry="2" />
<text  x="30.97" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::length (69 samples, 1.46%)</title><rect x="799.1" y="341" width="17.2" height="15.0" fill="rgb(234,13,1)" rx="2" ry="2" />
<text  x="802.08" y="351.5" ></text>
</g>
<g >
<title>sysmalloc (114 samples, 2.41%)</title><rect x="1160.5" y="501" width="28.5" height="15.0" fill="rgb(214,145,30)" rx="2" ry="2" />
<text  x="1163.54" y="511.5" >sy..</text>
</g>
<g >
<title>std::deque&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_push_back_aux&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="1091.9" y="389" width="0.2" height="15.0" fill="rgb(249,228,31)" rx="2" ry="2" />
<text  x="1094.90" y="399.5" ></text>
</g>
<g >
<title>alloc_pages_current (1 samples, 0.02%)</title><rect x="1173.3" y="341" width="0.2" height="15.0" fill="rgb(219,210,17)" rx="2" ry="2" />
<text  x="1176.27" y="351.5" ></text>
</g>
<g >
<title>intel_engine_breadcrumbs_irq (1 samples, 0.02%)</title><rect x="155.3" y="309" width="0.2" height="15.0" fill="rgb(221,202,53)" rx="2" ry="2" />
<text  x="158.28" y="319.5" ></text>
</g>
<g >
<title>map_id_up (1 samples, 0.02%)</title><rect x="45.4" y="181" width="0.3" height="15.0" fill="rgb(244,185,52)" rx="2" ry="2" />
<text  x="48.45" y="191.5" ></text>
</g>
<g >
<title>schedule (4 samples, 0.08%)</title><rect x="707.5" y="277" width="1.0" height="15.0" fill="rgb(230,10,50)" rx="2" ry="2" />
<text  x="710.47" y="287.5" ></text>
</g>
<g >
<title>iov_iter_fault_in_readable (1 samples, 0.02%)</title><rect x="48.7" y="325" width="0.2" height="15.0" fill="rgb(205,37,16)" rx="2" ry="2" />
<text  x="51.69" y="335.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (5 samples, 0.11%)</title><rect x="294.1" y="469" width="1.2" height="15.0" fill="rgb(224,181,52)" rx="2" ry="2" />
<text  x="297.08" y="479.5" ></text>
</g>
<g >
<title>__blk_bios_map_sg (1 samples, 0.02%)</title><rect x="57.9" y="85" width="0.3" height="15.0" fill="rgb(233,52,25)" rx="2" ry="2" />
<text  x="60.93" y="95.5" ></text>
</g>
<g >
<title>activate_task (13 samples, 0.28%)</title><rect x="306.1" y="341" width="3.2" height="15.0" fill="rgb(208,77,4)" rx="2" ry="2" />
<text  x="309.06" y="351.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="1085.4" y="453" width="0.3" height="15.0" fill="rgb(211,37,26)" rx="2" ry="2" />
<text  x="1088.41" y="463.5" ></text>
</g>
<g >
<title>__lru_cache_add (1 samples, 0.02%)</title><rect x="1107.1" y="341" width="0.3" height="15.0" fill="rgb(211,21,49)" rx="2" ry="2" />
<text  x="1110.12" y="351.5" ></text>
</g>
<g >
<title>memset_erms (1 samples, 0.02%)</title><rect x="30.0" y="229" width="0.2" height="15.0" fill="rgb(228,129,23)" rx="2" ry="2" />
<text  x="32.97" y="239.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="93.4" y="309" width="0.2" height="15.0" fill="rgb(229,153,32)" rx="2" ry="2" />
<text  x="96.38" y="319.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="16.2" y="437" width="0.3" height="15.0" fill="rgb(252,178,24)" rx="2" ry="2" />
<text  x="19.24" y="447.5" ></text>
</g>
<g >
<title>enqueue_task_fair (1 samples, 0.02%)</title><rect x="309.3" y="341" width="0.3" height="15.0" fill="rgb(245,216,32)" rx="2" ry="2" />
<text  x="312.31" y="351.5" ></text>
</g>
<g >
<title>__do_execve_file.isra.0 (1 samples, 0.02%)</title><rect x="1149.3" y="437" width="0.3" height="15.0" fill="rgb(244,90,31)" rx="2" ry="2" />
<text  x="1152.31" y="447.5" ></text>
</g>
<g >
<title>rwsem_down_write_slowpath (1 samples, 0.02%)</title><rect x="1131.6" y="421" width="0.2" height="15.0" fill="rgb(229,51,24)" rx="2" ry="2" />
<text  x="1134.59" y="431.5" ></text>
</g>
<g >
<title>xas_load (1 samples, 0.02%)</title><rect x="39.5" y="229" width="0.2" height="15.0" fill="rgb(247,2,1)" rx="2" ry="2" />
<text  x="42.46" y="239.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="93.4" y="261" width="0.2" height="15.0" fill="rgb(213,27,31)" rx="2" ry="2" />
<text  x="96.38" y="271.5" ></text>
</g>
<g >
<title>__memchr_avx2 (9 samples, 0.19%)</title><rect x="336.5" y="453" width="2.3" height="15.0" fill="rgb(242,116,50)" rx="2" ry="2" />
<text  x="339.52" y="463.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="940.1" y="245" width="0.3" height="15.0" fill="rgb(220,162,19)" rx="2" ry="2" />
<text  x="943.12" y="255.5" ></text>
</g>
<g >
<title>rwsem_spin_on_owner (2 samples, 0.04%)</title><rect x="1111.9" y="373" width="0.5" height="15.0" fill="rgb(225,85,33)" rx="2" ry="2" />
<text  x="1114.87" y="383.5" ></text>
</g>
<g >
<title>down_read_trylock (1 samples, 0.02%)</title><rect x="1143.8" y="421" width="0.3" height="15.0" fill="rgb(209,226,52)" rx="2" ry="2" />
<text  x="1146.82" y="431.5" ></text>
</g>
<g >
<title>from_kuid (1 samples, 0.02%)</title><rect x="45.4" y="197" width="0.3" height="15.0" fill="rgb(241,210,29)" rx="2" ry="2" />
<text  x="48.45" y="207.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (1 samples, 0.02%)</title><rect x="305.3" y="325" width="0.3" height="15.0" fill="rgb(220,216,14)" rx="2" ry="2" />
<text  x="308.31" y="335.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.02%)</title><rect x="155.3" y="213" width="0.2" height="15.0" fill="rgb(225,64,5)" rx="2" ry="2" />
<text  x="158.28" y="223.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (37 samples, 0.78%)</title><rect x="769.9" y="341" width="9.2" height="15.0" fill="rgb(245,53,51)" rx="2" ry="2" />
<text  x="772.87" y="351.5" ></text>
</g>
<g >
<title>futex_wake (54 samples, 1.14%)</title><rect x="296.3" y="405" width="13.5" height="15.0" fill="rgb(222,209,7)" rx="2" ry="2" />
<text  x="299.33" y="415.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (2 samples, 0.04%)</title><rect x="1087.2" y="453" width="0.5" height="15.0" fill="rgb(224,21,12)" rx="2" ry="2" />
<text  x="1090.15" y="463.5" ></text>
</g>
<g >
<title>exit_mmap (9 samples, 0.19%)</title><rect x="1149.6" y="405" width="2.2" height="15.0" fill="rgb(214,91,1)" rx="2" ry="2" />
<text  x="1152.56" y="415.5" ></text>
</g>
<g >
<title>__count_memcg_events (4 samples, 0.08%)</title><rect x="1169.5" y="405" width="1.0" height="15.0" fill="rgb(219,145,19)" rx="2" ry="2" />
<text  x="1172.53" y="415.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="66.2" y="341" width="0.2" height="15.0" fill="rgb(231,176,46)" rx="2" ry="2" />
<text  x="69.17" y="351.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="46.7" y="213" width="0.2" height="15.0" fill="rgb(213,195,16)" rx="2" ry="2" />
<text  x="49.70" y="223.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="305.1" y="325" width="0.2" height="15.0" fill="rgb(221,58,31)" rx="2" ry="2" />
<text  x="308.06" y="335.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="35.7" y="117" width="0.3" height="15.0" fill="rgb(238,83,26)" rx="2" ry="2" />
<text  x="38.71" y="127.5" ></text>
</g>
<g >
<title>do_exit (9 samples, 0.19%)</title><rect x="1149.6" y="437" width="2.2" height="15.0" fill="rgb(207,72,27)" rx="2" ry="2" />
<text  x="1152.56" y="447.5" ></text>
</g>
<g >
<title>__inc_node_state (1 samples, 0.02%)</title><rect x="37.5" y="229" width="0.2" height="15.0" fill="rgb(253,107,41)" rx="2" ry="2" />
<text  x="40.46" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (7 samples, 0.15%)</title><rect x="333.5" y="485" width="1.8" height="15.0" fill="rgb(222,59,33)" rx="2" ry="2" />
<text  x="336.52" y="495.5" ></text>
</g>
<g >
<title>do_futex (57 samples, 1.21%)</title><rect x="295.8" y="421" width="14.3" height="15.0" fill="rgb(227,65,36)" rx="2" ry="2" />
<text  x="298.83" y="431.5" ></text>
</g>
<g >
<title>malloc (3 samples, 0.06%)</title><rect x="310.8" y="485" width="0.8" height="15.0" fill="rgb(231,206,21)" rx="2" ry="2" />
<text  x="313.80" y="495.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="1165.8" y="421" width="0.2" height="15.0" fill="rgb(205,87,28)" rx="2" ry="2" />
<text  x="1168.79" y="431.5" ></text>
</g>
<g >
<title>__mod_zone_page_state (1 samples, 0.02%)</title><rect x="1182.8" y="309" width="0.2" height="15.0" fill="rgb(243,133,40)" rx="2" ry="2" />
<text  x="1185.76" y="319.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (2 samples, 0.04%)</title><rect x="41.2" y="245" width="0.5" height="15.0" fill="rgb(248,218,4)" rx="2" ry="2" />
<text  x="44.20" y="255.5" ></text>
</g>
<g >
<title>unlock_page (1 samples, 0.02%)</title><rect x="48.4" y="309" width="0.3" height="15.0" fill="rgb(209,104,3)" rx="2" ry="2" />
<text  x="51.44" y="319.5" ></text>
</g>
<g >
<title>vmacache_find (1 samples, 0.02%)</title><rect x="1186.0" y="421" width="0.3" height="15.0" fill="rgb(216,88,8)" rx="2" ry="2" />
<text  x="1189.01" y="431.5" ></text>
</g>
<g >
<title>__GI___libc_write (97 samples, 2.05%)</title><rect x="25.0" y="485" width="24.2" height="15.0" fill="rgb(247,89,23)" rx="2" ry="2" />
<text  x="27.98" y="495.5" >_..</text>
</g>
<g >
<title>__do_page_fault (86 samples, 1.82%)</title><rect x="1165.0" y="453" width="21.5" height="15.0" fill="rgb(230,55,35)" rx="2" ry="2" />
<text  x="1168.04" y="463.5" >_..</text>
</g>
<g >
<title>pagevec_lru_move_fn (1 samples, 0.02%)</title><rect x="40.2" y="213" width="0.3" height="15.0" fill="rgb(224,156,35)" rx="2" ry="2" />
<text  x="43.21" y="223.5" ></text>
</g>
<g >
<title>__schedule (8 samples, 0.17%)</title><rect x="55.9" y="277" width="2.0" height="15.0" fill="rgb(247,32,37)" rx="2" ry="2" />
<text  x="58.93" y="287.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (113 samples, 2.39%)</title><rect x="96.4" y="485" width="28.2" height="15.0" fill="rgb(219,59,24)" rx="2" ry="2" />
<text  x="99.37" y="495.5" >_..</text>
</g>
<g >
<title>page_counter_uncharge (1 samples, 0.02%)</title><rect x="1151.6" y="245" width="0.2" height="15.0" fill="rgb(214,15,23)" rx="2" ry="2" />
<text  x="1154.56" y="255.5" ></text>
</g>
<g >
<title>__mod_node_page_state (1 samples, 0.02%)</title><rect x="1182.5" y="293" width="0.3" height="15.0" fill="rgb(227,106,30)" rx="2" ry="2" />
<text  x="1185.51" y="303.5" ></text>
</g>
<g >
<title>__lll_lock_wait_private (145 samples, 3.07%)</title><rect x="60.2" y="485" width="36.2" height="15.0" fill="rgb(250,160,26)" rx="2" ry="2" />
<text  x="63.18" y="495.5" >__l..</text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.08%)</title><rect x="1189.0" y="325" width="1.0" height="15.0" fill="rgb(218,8,50)" rx="2" ry="2" />
<text  x="1192.00" y="335.5" ></text>
</g>
<g >
<title>__x64_sys_execve (1 samples, 0.02%)</title><rect x="1149.3" y="453" width="0.3" height="15.0" fill="rgb(233,224,43)" rx="2" ry="2" />
<text  x="1152.31" y="463.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="35.7" y="165" width="0.3" height="15.0" fill="rgb(238,54,34)" rx="2" ry="2" />
<text  x="38.71" y="175.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::c_str (24 samples, 0.51%)</title><rect x="793.1" y="341" width="6.0" height="15.0" fill="rgb(236,160,23)" rx="2" ry="2" />
<text  x="796.09" y="351.5" ></text>
</g>
<g >
<title>std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::~pair (1 samples, 0.02%)</title><rect x="940.6" y="293" width="0.3" height="15.0" fill="rgb(240,77,41)" rx="2" ry="2" />
<text  x="943.62" y="303.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.08%)</title><rect x="1136.6" y="293" width="1.0" height="15.0" fill="rgb(208,219,44)" rx="2" ry="2" />
<text  x="1139.58" y="303.5" ></text>
</g>
<g >
<title>do_futex (129 samples, 2.73%)</title><rect x="63.9" y="421" width="32.2" height="15.0" fill="rgb(229,18,4)" rx="2" ry="2" />
<text  x="66.92" y="431.5" >do..</text>
</g>
<g >
<title>unmap_vmas (9 samples, 0.19%)</title><rect x="1149.6" y="389" width="2.2" height="15.0" fill="rgb(246,81,37)" rx="2" ry="2" />
<text  x="1152.56" y="399.5" ></text>
</g>
<g >
<title>crc32c_pcl_intel_update (2 samples, 0.04%)</title><rect x="44.9" y="149" width="0.5" height="15.0" fill="rgb(232,40,40)" rx="2" ry="2" />
<text  x="47.95" y="159.5" ></text>
</g>
<g >
<title>futex_wait (4 samples, 0.08%)</title><rect x="1136.6" y="421" width="1.0" height="15.0" fill="rgb(251,81,50)" rx="2" ry="2" />
<text  x="1139.58" y="431.5" ></text>
</g>
<g >
<title>__vfprintf_internal (275 samples, 5.82%)</title><rect x="198.7" y="469" width="68.7" height="15.0" fill="rgb(211,140,5)" rx="2" ry="2" />
<text  x="201.72" y="479.5" >__vfpri..</text>
</g>
<g >
<title>blk_mq_flush_plug_list (1 samples, 0.02%)</title><rect x="57.9" y="213" width="0.3" height="15.0" fill="rgb(227,132,34)" rx="2" ry="2" />
<text  x="60.93" y="223.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="93.4" y="293" width="0.2" height="15.0" fill="rgb(232,151,2)" rx="2" ry="2" />
<text  x="96.38" y="303.5" ></text>
</g>
<g >
<title>proc_exec_connector (1 samples, 0.02%)</title><rect x="1149.3" y="421" width="0.3" height="15.0" fill="rgb(217,207,38)" rx="2" ry="2" />
<text  x="1152.31" y="431.5" ></text>
</g>
<g >
<title>_int_free (2 samples, 0.04%)</title><rect x="948.4" y="357" width="0.5" height="15.0" fill="rgb(216,22,15)" rx="2" ry="2" />
<text  x="951.36" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (60 samples, 1.27%)</title><rect x="816.3" y="341" width="15.0" height="15.0" fill="rgb(241,5,29)" rx="2" ry="2" />
<text  x="819.30" y="351.5" ></text>
</g>
<g >
<title>try_to_wake_up (40 samples, 0.85%)</title><rect x="299.8" y="373" width="10.0" height="15.0" fill="rgb(217,208,43)" rx="2" ry="2" />
<text  x="302.82" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.02%)</title><rect x="1088.9" y="437" width="0.2" height="15.0" fill="rgb(247,99,49)" rx="2" ry="2" />
<text  x="1091.90" y="447.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="1180.8" y="277" width="0.2" height="15.0" fill="rgb(219,64,40)" rx="2" ry="2" />
<text  x="1183.76" y="287.5" ></text>
</g>
<g >
<title>__handle_mm_fault (61 samples, 1.29%)</title><rect x="1170.5" y="405" width="15.3" height="15.0" fill="rgb(207,175,17)" rx="2" ry="2" />
<text  x="1173.53" y="415.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.02%)</title><rect x="155.3" y="181" width="0.2" height="15.0" fill="rgb(236,52,34)" rx="2" ry="2" />
<text  x="158.28" y="191.5" ></text>
</g>
<g >
<title>__page_cache_alloc (16 samples, 0.34%)</title><rect x="32.5" y="261" width="4.0" height="15.0" fill="rgb(240,50,30)" rx="2" ry="2" />
<text  x="35.47" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (3 samples, 0.06%)</title><rect x="1091.1" y="373" width="0.8" height="15.0" fill="rgb(252,140,21)" rx="2" ry="2" />
<text  x="1094.15" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (3 samples, 0.06%)</title><rect x="335.3" y="485" width="0.7" height="15.0" fill="rgb(235,219,11)" rx="2" ry="2" />
<text  x="338.27" y="495.5" ></text>
</g>
<g >
<title>jbd2__journal_start (1 samples, 0.02%)</title><rect x="28.5" y="277" width="0.2" height="15.0" fill="rgb(240,123,20)" rx="2" ry="2" />
<text  x="31.47" y="287.5" ></text>
</g>
<g >
<title>xas_load (1 samples, 0.02%)</title><rect x="46.4" y="197" width="0.3" height="15.0" fill="rgb(233,224,41)" rx="2" ry="2" />
<text  x="49.45" y="207.5" ></text>
</g>
<g >
<title>futex_wait (128 samples, 2.71%)</title><rect x="64.2" y="405" width="31.9" height="15.0" fill="rgb(234,183,34)" rx="2" ry="2" />
<text  x="67.17" y="415.5" >fu..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.02%)</title><rect x="336.0" y="485" width="0.3" height="15.0" fill="rgb(229,82,40)" rx="2" ry="2" />
<text  x="339.02" y="495.5" ></text>
</g>
<g >
<title>CSV2JSON::Split2List (1,392 samples, 29.45%)</title><rect x="361.0" y="341" width="347.5" height="15.0" fill="rgb(224,120,45)" rx="2" ry="2" />
<text  x="363.98" y="351.5" >CSV2JSON::Split2List</text>
</g>
<g >
<title>std::_Deque_iterator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;&amp;, std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*&gt;::_Deque_iterator (5 samples, 0.11%)</title><rect x="935.1" y="293" width="1.3" height="15.0" fill="rgb(220,157,19)" rx="2" ry="2" />
<text  x="938.13" y="303.5" ></text>
</g>
<g >
<title>update_curr (1 samples, 0.02%)</title><rect x="707.2" y="181" width="0.3" height="15.0" fill="rgb(236,159,44)" rx="2" ry="2" />
<text  x="710.22" y="191.5" ></text>
</g>
<g >
<title>update_cfs_group (1 samples, 0.02%)</title><rect x="67.2" y="293" width="0.2" height="15.0" fill="rgb(254,5,54)" rx="2" ry="2" />
<text  x="70.17" y="303.5" ></text>
</g>
<g >
<title>rwsem_optimistic_spin (1 samples, 0.02%)</title><rect x="31.5" y="213" width="0.2" height="15.0" fill="rgb(215,127,46)" rx="2" ry="2" />
<text  x="34.47" y="223.5" ></text>
</g>
<g >
<title>pick_next_task_fair (1 samples, 0.02%)</title><rect x="765.1" y="245" width="0.3" height="15.0" fill="rgb(240,125,28)" rx="2" ry="2" />
<text  x="768.13" y="255.5" ></text>
</g>
<g >
<title>printf (1 samples, 0.02%)</title><rect x="1106.4" y="469" width="0.2" height="15.0" fill="rgb(241,127,3)" rx="2" ry="2" />
<text  x="1109.37" y="479.5" ></text>
</g>
<g >
<title>ksys_read (23 samples, 0.49%)</title><rect x="53.7" y="421" width="5.7" height="15.0" fill="rgb(223,21,16)" rx="2" ry="2" />
<text  x="56.69" y="431.5" ></text>
</g>
<g >
<title>do_syscall_64 (59 samples, 1.25%)</title><rect x="295.6" y="453" width="14.7" height="15.0" fill="rgb(242,154,33)" rx="2" ry="2" />
<text  x="298.58" y="463.5" ></text>
</g>
<g >
<title>get_futex_key (1 samples, 0.02%)</title><rect x="94.6" y="373" width="0.3" height="15.0" fill="rgb(252,153,51)" rx="2" ry="2" />
<text  x="97.62" y="383.5" ></text>
</g>
<g >
<title>__xa_set_mark (1 samples, 0.02%)</title><rect x="46.4" y="213" width="0.3" height="15.0" fill="rgb(243,53,31)" rx="2" ry="2" />
<text  x="49.45" y="223.5" ></text>
</g>
<g >
<title>update_rq_clock (1 samples, 0.02%)</title><rect x="155.3" y="197" width="0.2" height="15.0" fill="rgb(253,72,37)" rx="2" ry="2" />
<text  x="158.28" y="207.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (61 samples, 1.29%)</title><rect x="295.3" y="469" width="15.3" height="15.0" fill="rgb(235,190,52)" rx="2" ry="2" />
<text  x="298.33" y="479.5" ></text>
</g>
<g >
<title>record_times (1 samples, 0.02%)</title><rect x="309.1" y="309" width="0.2" height="15.0" fill="rgb(225,107,41)" rx="2" ry="2" />
<text  x="312.06" y="319.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (4 samples, 0.08%)</title><rect x="1136.6" y="405" width="1.0" height="15.0" fill="rgb(224,169,7)" rx="2" ry="2" />
<text  x="1139.58" y="415.5" ></text>
</g>
<g >
<title>clear_page_erms (5 samples, 0.11%)</title><rect x="1145.1" y="325" width="1.2" height="15.0" fill="rgb(248,78,32)" rx="2" ry="2" />
<text  x="1148.07" y="335.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (3 samples, 0.06%)</title><rect x="1150.8" y="245" width="0.8" height="15.0" fill="rgb(249,63,14)" rx="2" ry="2" />
<text  x="1153.81" y="255.5" ></text>
</g>
<g >
<title>__schedule (111 samples, 2.35%)</title><rect x="65.9" y="357" width="27.7" height="15.0" fill="rgb(251,154,15)" rx="2" ry="2" />
<text  x="68.92" y="367.5" >_..</text>
</g>
<g >
<title>pagecache_get_page (32 samples, 0.68%)</title><rect x="32.5" y="277" width="8.0" height="15.0" fill="rgb(208,70,18)" rx="2" ry="2" />
<text  x="35.47" y="287.5" ></text>
</g>
<g >
<title>lru_cache_add_active_or_unevictable (7 samples, 0.15%)</title><rect x="1181.3" y="373" width="1.7" height="15.0" fill="rgb(209,141,49)" rx="2" ry="2" />
<text  x="1184.26" y="383.5" ></text>
</g>
<g >
<title>zap_pte_range.isra.0 (9 samples, 0.19%)</title><rect x="1149.6" y="341" width="2.2" height="15.0" fill="rgb(248,131,25)" rx="2" ry="2" />
<text  x="1152.56" y="351.5" ></text>
</g>
<g >
<title>update_curr (1 samples, 0.02%)</title><rect x="765.1" y="213" width="0.3" height="15.0" fill="rgb(239,134,34)" rx="2" ry="2" />
<text  x="768.13" y="223.5" ></text>
</g>
<g >
<title>clear_page_erms (12 samples, 0.25%)</title><rect x="33.0" y="197" width="3.0" height="15.0" fill="rgb(233,69,54)" rx="2" ry="2" />
<text  x="35.97" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.02%)</title><rect x="1091.6" y="357" width="0.3" height="15.0" fill="rgb(232,170,35)" rx="2" ry="2" />
<text  x="1094.65" y="367.5" ></text>
</g>
<g >
<title>__pagevec_lru_add_fn (5 samples, 0.11%)</title><rect x="1181.8" y="325" width="1.2" height="15.0" fill="rgb(209,91,19)" rx="2" ry="2" />
<text  x="1184.76" y="335.5" ></text>
</g>
<g >
<title>blk_rq_map_sg (1 samples, 0.02%)</title><rect x="57.9" y="101" width="0.3" height="15.0" fill="rgb(210,190,8)" rx="2" ry="2" />
<text  x="60.93" y="111.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (3 samples, 0.06%)</title><rect x="1182.0" y="309" width="0.8" height="15.0" fill="rgb(207,86,20)" rx="2" ry="2" />
<text  x="1185.01" y="319.5" ></text>
</g>
<g >
<title>vm_stat_account (1 samples, 0.02%)</title><rect x="1132.1" y="421" width="0.2" height="15.0" fill="rgb(231,7,9)" rx="2" ry="2" />
<text  x="1135.09" y="431.5" ></text>
</g>
<g >
<title>__block_commit_write.isra.0 (6 samples, 0.13%)</title><rect x="46.2" y="261" width="1.5" height="15.0" fill="rgb(234,194,32)" rx="2" ry="2" />
<text  x="49.20" y="271.5" ></text>
</g>
<g >
<title>vma_merge (1 samples, 0.02%)</title><rect x="49.2" y="405" width="0.2" height="15.0" fill="rgb(252,41,50)" rx="2" ry="2" />
<text  x="52.19" y="415.5" ></text>
</g>
<g >
<title>malloc (33 samples, 0.70%)</title><rect x="1151.8" y="501" width="8.2" height="15.0" fill="rgb(207,159,8)" rx="2" ry="2" />
<text  x="1154.81" y="511.5" ></text>
</g>
<g >
<title>native_write_msr (16 samples, 0.34%)</title><rect x="49.4" y="357" width="4.0" height="15.0" fill="rgb(226,201,33)" rx="2" ry="2" />
<text  x="52.44" y="367.5" ></text>
</g>
<g >
<title>ext4_reserve_inode_write (2 samples, 0.04%)</title><rect x="45.7" y="229" width="0.5" height="15.0" fill="rgb(226,73,54)" rx="2" ry="2" />
<text  x="48.70" y="239.5" ></text>
</g>
<g >
<title>__ext4_journal_start_sb (1 samples, 0.02%)</title><rect x="42.2" y="245" width="0.3" height="15.0" fill="rgb(220,64,34)" rx="2" ry="2" />
<text  x="45.20" y="255.5" ></text>
</g>
<g >
<title>__vfprintf_internal (20 samples, 0.42%)</title><rect x="1099.1" y="437" width="5.0" height="15.0" fill="rgb(253,205,28)" rx="2" ry="2" />
<text  x="1102.13" y="447.5" ></text>
</g>
<g >
<title>generic_perform_write (83 samples, 1.76%)</title><rect x="28.0" y="325" width="20.7" height="15.0" fill="rgb(223,100,21)" rx="2" ry="2" />
<text  x="30.97" y="335.5" ></text>
</g>
<g >
<title>all (4,727 samples, 100%)</title><rect x="10.0" y="533" width="1180.0" height="15.0" fill="rgb(220,197,8)" rx="2" ry="2" />
<text  x="13.00" y="543.5" ></text>
</g>
<g >
<title>x86_pmu_enable (8 samples, 0.17%)</title><rect x="55.9" y="213" width="2.0" height="15.0" fill="rgb(210,204,19)" rx="2" ry="2" />
<text  x="58.93" y="223.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.08%)</title><rect x="311.6" y="485" width="1.0" height="15.0" fill="rgb(214,97,36)" rx="2" ry="2" />
<text  x="314.55" y="495.5" ></text>
</g>
<g >
<title>deactivate_task (11 samples, 0.23%)</title><rect x="66.4" y="341" width="2.8" height="15.0" fill="rgb(237,80,21)" rx="2" ry="2" />
<text  x="69.42" y="351.5" ></text>
</g>
<g >
<title>rwsem_optimistic_spin (3 samples, 0.06%)</title><rect x="1166.0" y="389" width="0.8" height="15.0" fill="rgb(253,148,21)" rx="2" ry="2" />
<text  x="1169.04" y="399.5" ></text>
</g>
<g >
<title>__ext4_handle_dirty_metadata (1 samples, 0.02%)</title><rect x="43.7" y="197" width="0.2" height="15.0" fill="rgb(232,49,46)" rx="2" ry="2" />
<text  x="46.70" y="207.5" ></text>
</g>
<g >
<title>vmacache_find (2 samples, 0.04%)</title><rect x="1121.4" y="405" width="0.5" height="15.0" fill="rgb(220,88,39)" rx="2" ry="2" />
<text  x="1124.35" y="415.5" ></text>
</g>
<g >
<title>update_rq_clock (1 samples, 0.02%)</title><rect x="309.6" y="357" width="0.2" height="15.0" fill="rgb(239,139,29)" rx="2" ry="2" />
<text  x="312.56" y="367.5" ></text>
</g>
<g >
<title>_raw_spin_lock (2 samples, 0.04%)</title><rect x="1174.8" y="325" width="0.5" height="15.0" fill="rgb(249,148,53)" rx="2" ry="2" />
<text  x="1177.77" y="335.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="765.1" y="293" width="0.3" height="15.0" fill="rgb(211,206,17)" rx="2" ry="2" />
<text  x="768.13" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign (41 samples, 0.87%)</title><rect x="951.4" y="357" width="10.2" height="15.0" fill="rgb(227,30,24)" rx="2" ry="2" />
<text  x="954.35" y="367.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void  (2,549 samples, 53.92%)</title><rect x="340.8" y="485" width="636.3" height="15.0" fill="rgb(217,104,6)" rx="2" ry="2" />
<text  x="343.76" y="495.5" >std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void </text>
</g>
<g >
<title>do_page_fault (1 samples, 0.02%)</title><rect x="1160.3" y="469" width="0.2" height="15.0" fill="rgb(205,136,7)" rx="2" ry="2" />
<text  x="1163.29" y="479.5" ></text>
</g>
<g >
<title>schedule_tail (16 samples, 0.34%)</title><rect x="49.4" y="453" width="4.0" height="15.0" fill="rgb(216,136,44)" rx="2" ry="2" />
<text  x="52.44" y="463.5" ></text>
</g>
<g >
<title>rw_verify_area (1 samples, 0.02%)</title><rect x="48.9" y="389" width="0.3" height="15.0" fill="rgb(219,60,41)" rx="2" ry="2" />
<text  x="51.94" y="399.5" ></text>
</g>
<g >
<title>page_fault (4 samples, 0.08%)</title><rect x="1106.6" y="453" width="1.0" height="15.0" fill="rgb(243,219,27)" rx="2" ry="2" />
<text  x="1109.62" y="463.5" ></text>
</g>
<g >
<title>unmap_single_vma (9 samples, 0.19%)</title><rect x="1149.6" y="373" width="2.2" height="15.0" fill="rgb(236,111,23)" rx="2" ry="2" />
<text  x="1152.56" y="383.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="267.1" y="437" width="0.3" height="15.0" fill="rgb(252,23,48)" rx="2" ry="2" />
<text  x="270.12" y="447.5" ></text>
</g>
<g >
<title>__wake_up (2 samples, 0.04%)</title><rect x="41.2" y="261" width="0.5" height="15.0" fill="rgb(237,223,52)" rx="2" ry="2" />
<text  x="44.20" y="271.5" ></text>
</g>
<g >
<title>__mod_node_page_state (1 samples, 0.02%)</title><rect x="1173.0" y="373" width="0.3" height="15.0" fill="rgb(238,199,41)" rx="2" ry="2" />
<text  x="1176.03" y="383.5" ></text>
</g>
<g >
<title>block_invalidatepage (2 samples, 0.04%)</title><rect x="24.5" y="245" width="0.5" height="15.0" fill="rgb(218,72,7)" rx="2" ry="2" />
<text  x="27.48" y="255.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (96 samples, 2.03%)</title><rect x="69.4" y="277" width="24.0" height="15.0" fill="rgb(244,83,8)" rx="2" ry="2" />
<text  x="72.41" y="287.5" >i..</text>
</g>
<g >
<title>notify_change (6 samples, 0.13%)</title><rect x="23.5" y="341" width="1.5" height="15.0" fill="rgb(214,146,18)" rx="2" ry="2" />
<text  x="26.48" y="351.5" ></text>
</g>
<g >
<title>rwsem_down_read_slowpath (1 samples, 0.02%)</title><rect x="31.5" y="229" width="0.2" height="15.0" fill="rgb(234,82,36)" rx="2" ry="2" />
<text  x="34.47" y="239.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.02%)</title><rect x="765.1" y="261" width="0.3" height="15.0" fill="rgb(235,195,51)" rx="2" ry="2" />
<text  x="768.13" y="271.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.08%)</title><rect x="1136.6" y="485" width="1.0" height="15.0" fill="rgb(230,66,35)" rx="2" ry="2" />
<text  x="1139.58" y="495.5" ></text>
</g>
<g >
<title>__libc_start_main (80 samples, 1.69%)</title><rect x="1087.7" y="501" width="19.9" height="15.0" fill="rgb(213,69,41)" rx="2" ry="2" />
<text  x="1090.65" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (1 samples, 0.02%)</title><rect x="942.1" y="261" width="0.3" height="15.0" fill="rgb(242,35,24)" rx="2" ry="2" />
<text  x="945.12" y="271.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (5 samples, 0.11%)</title><rect x="706.2" y="293" width="1.3" height="15.0" fill="rgb(224,185,31)" rx="2" ry="2" />
<text  x="709.22" y="303.5" ></text>
</g>
<g >
<title>switch_fpu_return (1 samples, 0.02%)</title><rect x="96.1" y="453" width="0.3" height="15.0" fill="rgb(207,55,25)" rx="2" ry="2" />
<text  x="99.12" y="463.5" ></text>
</g>
<g >
<title>find_vma (2 samples, 0.04%)</title><rect x="1167.3" y="421" width="0.5" height="15.0" fill="rgb(240,77,24)" rx="2" ry="2" />
<text  x="1170.28" y="431.5" ></text>
</g>
<g >
<title>mem_cgroup_page_lruvec (1 samples, 0.02%)</title><rect x="1150.6" y="293" width="0.2" height="15.0" fill="rgb(214,3,31)" rx="2" ry="2" />
<text  x="1153.56" y="303.5" ></text>
</g>
<g >
<title>finish_task_switch (8 samples, 0.17%)</title><rect x="55.9" y="261" width="2.0" height="15.0" fill="rgb(216,152,2)" rx="2" ry="2" />
<text  x="58.93" y="271.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.08%)</title><rect x="707.5" y="197" width="1.0" height="15.0" fill="rgb(225,171,4)" rx="2" ry="2" />
<text  x="710.47" y="207.5" ></text>
</g>
<g >
<title>rmqueue (1 samples, 0.02%)</title><rect x="1173.3" y="293" width="0.2" height="15.0" fill="rgb(212,105,10)" rx="2" ry="2" />
<text  x="1176.27" y="303.5" ></text>
</g>
<g >
<title>raise_softirq (1 samples, 0.02%)</title><rect x="1180.8" y="165" width="0.2" height="15.0" fill="rgb(224,128,26)" rx="2" ry="2" />
<text  x="1183.76" y="175.5" ></text>
</g>
<g >
<title>ext4_inode_csum.isra.0 (6 samples, 0.13%)</title><rect x="43.9" y="181" width="1.5" height="15.0" fill="rgb(213,212,42)" rx="2" ry="2" />
<text  x="46.95" y="191.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.0 (4 samples, 0.08%)</title><rect x="1136.6" y="325" width="1.0" height="15.0" fill="rgb(253,173,38)" rx="2" ry="2" />
<text  x="1139.58" y="335.5" ></text>
</g>
<g >
<title>do_syscall_64 (6 samples, 0.13%)</title><rect x="23.5" y="453" width="1.5" height="15.0" fill="rgb(248,0,28)" rx="2" ry="2" />
<text  x="26.48" y="463.5" ></text>
</g>
<g >
<title>i915_sw_fence_complete (1 samples, 0.02%)</title><rect x="155.3" y="277" width="0.2" height="15.0" fill="rgb(216,56,26)" rx="2" ry="2" />
<text  x="158.28" y="287.5" ></text>
</g>
<g >
<title>do_page_fault (86 samples, 1.82%)</title><rect x="1165.0" y="469" width="21.5" height="15.0" fill="rgb(235,63,39)" rx="2" ry="2" />
<text  x="1168.04" y="479.5" >d..</text>
</g>
<g >
<title>new_sync_read (22 samples, 0.47%)</title><rect x="53.9" y="373" width="5.5" height="15.0" fill="rgb(212,218,43)" rx="2" ry="2" />
<text  x="56.93" y="383.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="293.8" y="469" width="0.3" height="15.0" fill="rgb(238,100,37)" rx="2" ry="2" />
<text  x="296.83" y="479.5" ></text>
</g>
<g >
<title>crc32c_pcl_intel_update (3 samples, 0.06%)</title><rect x="43.9" y="165" width="0.8" height="15.0" fill="rgb(209,52,23)" rx="2" ry="2" />
<text  x="46.95" y="175.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (95 samples, 2.01%)</title><rect x="25.5" y="469" width="23.7" height="15.0" fill="rgb(226,20,20)" rx="2" ry="2" />
<text  x="28.48" y="479.5" >e..</text>
</g>
<g >
<title>down_read (3 samples, 0.06%)</title><rect x="1166.0" y="421" width="0.8" height="15.0" fill="rgb(208,111,36)" rx="2" ry="2" />
<text  x="1169.04" y="431.5" ></text>
</g>
<g >
<title>task_tick_fair (1 samples, 0.02%)</title><rect x="707.2" y="197" width="0.3" height="15.0" fill="rgb(233,188,29)" rx="2" ry="2" />
<text  x="710.22" y="207.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (3 samples, 0.06%)</title><rect x="61.7" y="469" width="0.7" height="15.0" fill="rgb(236,34,44)" rx="2" ry="2" />
<text  x="64.67" y="479.5" ></text>
</g>
<g >
<title>_IO_str_init_static_internal (9 samples, 0.19%)</title><rect x="21.2" y="485" width="2.3" height="15.0" fill="rgb(246,173,37)" rx="2" ry="2" />
<text  x="24.23" y="495.5" ></text>
</g>
<g >
<title>mem_cgroup_page_lruvec (1 samples, 0.02%)</title><rect x="1147.8" y="325" width="0.3" height="15.0" fill="rgb(231,92,18)" rx="2" ry="2" />
<text  x="1150.81" y="335.5" ></text>
</g>
<g >
<title>__es_insert_extent (1 samples, 0.02%)</title><rect x="32.0" y="229" width="0.2" height="15.0" fill="rgb(211,132,12)" rx="2" ry="2" />
<text  x="34.97" y="239.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (16 samples, 0.34%)</title><rect x="42.2" y="261" width="4.0" height="15.0" fill="rgb(220,69,4)" rx="2" ry="2" />
<text  x="45.20" y="271.5" ></text>
</g>
<g >
<title>__mem_cgroup_threshold (1 samples, 0.02%)</title><rect x="1183.8" y="341" width="0.2" height="15.0" fill="rgb(231,64,0)" rx="2" ry="2" />
<text  x="1186.76" y="351.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (6 samples, 0.13%)</title><rect x="938.9" y="277" width="1.5" height="15.0" fill="rgb(206,18,11)" rx="2" ry="2" />
<text  x="941.87" y="287.5" ></text>
</g>
<g >
<title>filemap_flush (2 samples, 0.04%)</title><rect x="1087.2" y="357" width="0.5" height="15.0" fill="rgb(248,174,54)" rx="2" ry="2" />
<text  x="1090.15" y="367.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="267.1" y="421" width="0.3" height="15.0" fill="rgb(232,91,10)" rx="2" ry="2" />
<text  x="270.12" y="431.5" ></text>
</g>
<g >
<title>alloc_pages_current (1 samples, 0.02%)</title><rect x="29.5" y="133" width="0.2" height="15.0" fill="rgb(207,197,31)" rx="2" ry="2" />
<text  x="32.47" y="143.5" ></text>
</g>
<g >
<title>should_fail_alloc_page (1 samples, 0.02%)</title><rect x="1181.0" y="357" width="0.3" height="15.0" fill="rgb(247,178,23)" rx="2" ry="2" />
<text  x="1184.01" y="367.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="305.3" y="341" width="0.3" height="15.0" fill="rgb(225,50,50)" rx="2" ry="2" />
<text  x="308.31" y="351.5" ></text>
</g>
<g >
<title>read_tsc (1 samples, 0.02%)</title><rect x="707.0" y="245" width="0.2" height="15.0" fill="rgb(226,81,10)" rx="2" ry="2" />
<text  x="709.97" y="255.5" ></text>
</g>
<g >
<title>std::operator==&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;&amp;, std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*&gt; (2 samples, 0.04%)</title><rect x="933.1" y="309" width="0.5" height="15.0" fill="rgb(228,55,11)" rx="2" ry="2" />
<text  x="936.13" y="319.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="1173.3" y="309" width="0.2" height="15.0" fill="rgb(242,141,21)" rx="2" ry="2" />
<text  x="1176.27" y="319.5" ></text>
</g>
<g >
<title>gen8_irq_handler (1 samples, 0.02%)</title><rect x="155.3" y="357" width="0.2" height="15.0" fill="rgb(210,114,40)" rx="2" ry="2" />
<text  x="158.28" y="367.5" ></text>
</g>
<g >
<title>__do_page_fault (20 samples, 0.42%)</title><rect x="1143.8" y="453" width="5.0" height="15.0" fill="rgb(248,188,54)" rx="2" ry="2" />
<text  x="1146.82" y="463.5" ></text>
</g>
<g >
<title>ext4_da_get_block_prep (9 samples, 0.19%)</title><rect x="30.2" y="277" width="2.3" height="15.0" fill="rgb(205,107,11)" rx="2" ry="2" />
<text  x="33.22" y="287.5" ></text>
</g>
<g >
<title>__do_page_fault (4 samples, 0.08%)</title><rect x="1106.6" y="421" width="1.0" height="15.0" fill="rgb(239,190,29)" rx="2" ry="2" />
<text  x="1109.62" y="431.5" ></text>
</g>
<g >
<title>std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair (8 samples, 0.17%)</title><rect x="930.4" y="341" width="2.0" height="15.0" fill="rgb(237,40,38)" rx="2" ry="2" />
<text  x="933.39" y="351.5" ></text>
</g>
<g >
<title>mpage_map_and_submit_extent (1 samples, 0.02%)</title><rect x="1087.2" y="293" width="0.2" height="15.0" fill="rgb(221,66,5)" rx="2" ry="2" />
<text  x="1090.15" y="303.5" ></text>
</g>
<g >
<title>prep_new_page (1 samples, 0.02%)</title><rect x="1160.3" y="325" width="0.2" height="15.0" fill="rgb(241,25,48)" rx="2" ry="2" />
<text  x="1163.29" y="335.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="1186.3" y="437" width="0.2" height="15.0" fill="rgb(209,139,16)" rx="2" ry="2" />
<text  x="1189.26" y="447.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="155.3" y="421" width="0.2" height="15.0" fill="rgb(241,90,54)" rx="2" ry="2" />
<text  x="158.28" y="431.5" ></text>
</g>
<g >
<title>tick_program_event (1 samples, 0.02%)</title><rect x="16.2" y="405" width="0.3" height="15.0" fill="rgb(227,69,4)" rx="2" ry="2" />
<text  x="19.24" y="415.5" ></text>
</g>
<g >
<title>up_write (1 samples, 0.02%)</title><rect x="1131.8" y="421" width="0.3" height="15.0" fill="rgb(228,51,36)" rx="2" ry="2" />
<text  x="1134.84" y="431.5" ></text>
</g>
<g >
<title>node_dirty_ok (1 samples, 0.02%)</title><rect x="36.0" y="197" width="0.2" height="15.0" fill="rgb(227,170,20)" rx="2" ry="2" />
<text  x="38.96" y="207.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (5 samples, 0.11%)</title><rect x="1150.6" y="309" width="1.2" height="15.0" fill="rgb(217,115,12)" rx="2" ry="2" />
<text  x="1153.56" y="319.5" ></text>
</g>
<g >
<title>vm_pgprot_modify (3 samples, 0.06%)</title><rect x="1129.6" y="405" width="0.7" height="15.0" fill="rgb(206,101,27)" rx="2" ry="2" />
<text  x="1132.59" y="415.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="155.3" y="437" width="0.2" height="15.0" fill="rgb(249,208,5)" rx="2" ry="2" />
<text  x="158.28" y="447.5" ></text>
</g>
<g >
<title>autoremove_wake_function (1 samples, 0.02%)</title><rect x="155.3" y="245" width="0.2" height="15.0" fill="rgb(226,218,12)" rx="2" ry="2" />
<text  x="158.28" y="255.5" ></text>
</g>
<g >
<title>invoke_rcu_core (1 samples, 0.02%)</title><rect x="1180.8" y="181" width="0.2" height="15.0" fill="rgb(244,150,20)" rx="2" ry="2" />
<text  x="1183.76" y="191.5" ></text>
</g>
<g >
<title>__libc_disable_asynccancel (1 samples, 0.02%)</title><rect x="53.4" y="485" width="0.3" height="15.0" fill="rgb(248,81,17)" rx="2" ry="2" />
<text  x="56.44" y="495.5" ></text>
</g>
<g >
<title>std::deque&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::begin (1 samples, 0.02%)</title><rect x="933.6" y="325" width="0.3" height="15.0" fill="rgb(213,155,22)" rx="2" ry="2" />
<text  x="936.63" y="335.5" ></text>
</g>
<g >
<title>native_write_msr (32 samples, 0.68%)</title><rect x="1113.1" y="277" width="8.0" height="15.0" fill="rgb(253,151,8)" rx="2" ry="2" />
<text  x="1116.11" y="287.5" ></text>
</g>
<g >
<title>__filemap_fdatawrite_range (2 samples, 0.04%)</title><rect x="1087.2" y="341" width="0.5" height="15.0" fill="rgb(253,121,26)" rx="2" ry="2" />
<text  x="1090.15" y="351.5" ></text>
</g>
<g >
<title>__strlen_avx2 (74 samples, 1.57%)</title><rect x="180.2" y="469" width="18.5" height="15.0" fill="rgb(206,143,22)" rx="2" ry="2" />
<text  x="183.25" y="479.5" ></text>
</g>
<g >
<title>get_futex_key_refs.isra.0 (4 samples, 0.08%)</title><rect x="298.3" y="373" width="1.0" height="15.0" fill="rgb(246,40,45)" rx="2" ry="2" />
<text  x="301.32" y="383.5" ></text>
</g>
<g >
<title>__lru_cache_add (2 samples, 0.04%)</title><rect x="1172.5" y="373" width="0.5" height="15.0" fill="rgb(252,114,54)" rx="2" ry="2" />
<text  x="1175.53" y="383.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="1085.4" y="389" width="0.3" height="15.0" fill="rgb(230,197,10)" rx="2" ry="2" />
<text  x="1088.41" y="399.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (32 samples, 0.68%)</title><rect x="1113.1" y="341" width="8.0" height="15.0" fill="rgb(216,213,44)" rx="2" ry="2" />
<text  x="1116.11" y="351.5" ></text>
</g>
<g >
<title>_IO_default_xsputn (91 samples, 1.93%)</title><rect x="132.8" y="469" width="22.7" height="15.0" fill="rgb(205,97,35)" rx="2" ry="2" />
<text  x="135.82" y="479.5" >_..</text>
</g>
<g >
<title>trigger_load_balance (1 samples, 0.02%)</title><rect x="35.7" y="53" width="0.3" height="15.0" fill="rgb(236,68,5)" rx="2" ry="2" />
<text  x="38.71" y="63.5" ></text>
</g>
<g >
<title>__mod_node_page_state (1 samples, 0.02%)</title><rect x="1107.4" y="341" width="0.2" height="15.0" fill="rgb(220,109,0)" rx="2" ry="2" />
<text  x="1110.37" y="351.5" ></text>
</g>
<g >
<title>C2J (4,723 samples, 99.92%)</title><rect x="10.0" y="517" width="1179.0" height="15.0" fill="rgb(218,210,50)" rx="2" ry="2" />
<text  x="13.00" y="527.5" >C2J</text>
</g>
<g >
<title>__schedule (4 samples, 0.08%)</title><rect x="707.5" y="261" width="1.0" height="15.0" fill="rgb(250,53,44)" rx="2" ry="2" />
<text  x="710.47" y="271.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.0 (96 samples, 2.03%)</title><rect x="69.4" y="309" width="24.0" height="15.0" fill="rgb(221,29,26)" rx="2" ry="2" />
<text  x="72.41" y="319.5" >p..</text>
</g>
<g >
<title>handle_mm_fault (19 samples, 0.40%)</title><rect x="1144.1" y="421" width="4.7" height="15.0" fill="rgb(237,97,48)" rx="2" ry="2" />
<text  x="1147.07" y="431.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (98 samples, 2.07%)</title><rect x="1108.1" y="485" width="24.5" height="15.0" fill="rgb(225,90,16)" rx="2" ry="2" />
<text  x="1111.12" y="495.5" >e..</text>
</g>
<g >
<title>__x64_sys_mprotect (96 samples, 2.03%)</title><rect x="1108.6" y="453" width="24.0" height="15.0" fill="rgb(247,118,32)" rx="2" ry="2" />
<text  x="1111.62" y="463.5" >_..</text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="293.8" y="453" width="0.3" height="15.0" fill="rgb(228,154,5)" rx="2" ry="2" />
<text  x="296.83" y="463.5" ></text>
</g>
<g >
<title>__i915_sw_fence_complete (1 samples, 0.02%)</title><rect x="155.3" y="261" width="0.2" height="15.0" fill="rgb(205,54,42)" rx="2" ry="2" />
<text  x="158.28" y="271.5" ></text>
</g>
<g >
<title>__vma_adjust (1 samples, 0.02%)</title><rect x="49.2" y="389" width="0.2" height="15.0" fill="rgb(206,103,4)" rx="2" ry="2" />
<text  x="52.19" y="399.5" ></text>
</g>
<g >
<title>std::deque&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::front (10 samples, 0.21%)</title><rect x="933.9" y="325" width="2.5" height="15.0" fill="rgb(224,118,43)" rx="2" ry="2" />
<text  x="936.88" y="335.5" ></text>
</g>
<g >
<title>nvme_map_data (1 samples, 0.02%)</title><rect x="57.9" y="117" width="0.3" height="15.0" fill="rgb(226,106,18)" rx="2" ry="2" />
<text  x="60.93" y="127.5" ></text>
</g>
<g >
<title>dma_i915_sw_fence_wake_timer (1 samples, 0.02%)</title><rect x="155.3" y="293" width="0.2" height="15.0" fill="rgb(251,56,37)" rx="2" ry="2" />
<text  x="158.28" y="303.5" ></text>
</g>
<g >
<title>[C2J] (24 samples, 0.51%)</title><rect x="942.4" y="357" width="6.0" height="15.0" fill="rgb(254,60,23)" rx="2" ry="2" />
<text  x="945.37" y="367.5" ></text>
</g>
<g >
<title>allocate_slab (3 samples, 0.06%)</title><rect x="29.2" y="165" width="0.8" height="15.0" fill="rgb(233,146,0)" rx="2" ry="2" />
<text  x="32.22" y="175.5" ></text>
</g>
<g >
<title>__schedule (34 samples, 0.72%)</title><rect x="1112.6" y="373" width="8.5" height="15.0" fill="rgb(215,221,46)" rx="2" ry="2" />
<text  x="1115.61" y="383.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="1110.6" y="405" width="0.3" height="15.0" fill="rgb(209,164,17)" rx="2" ry="2" />
<text  x="1113.62" y="415.5" ></text>
</g>
<g >
<title>do_anonymous_page (16 samples, 0.34%)</title><rect x="1144.8" y="389" width="4.0" height="15.0" fill="rgb(210,216,33)" rx="2" ry="2" />
<text  x="1147.82" y="399.5" ></text>
</g>
<g >
<title>find_get_entry (4 samples, 0.08%)</title><rect x="58.2" y="293" width="1.0" height="15.0" fill="rgb(245,2,41)" rx="2" ry="2" />
<text  x="61.18" y="303.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (32 samples, 0.68%)</title><rect x="1113.1" y="293" width="8.0" height="15.0" fill="rgb(215,94,27)" rx="2" ry="2" />
<text  x="1116.11" y="303.5" ></text>
</g>
<g >
<title>_IO_no_init (4 samples, 0.08%)</title><rect x="17.5" y="485" width="1.0" height="15.0" fill="rgb(246,8,53)" rx="2" ry="2" />
<text  x="20.49" y="495.5" ></text>
</g>
<g >
<title>update_curr (1 samples, 0.02%)</title><rect x="67.4" y="293" width="0.3" height="15.0" fill="rgb(250,219,41)" rx="2" ry="2" />
<text  x="70.41" y="303.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="155.3" y="373" width="0.2" height="15.0" fill="rgb(209,160,23)" rx="2" ry="2" />
<text  x="158.28" y="383.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (5 samples, 0.11%)</title><rect x="706.2" y="309" width="1.3" height="15.0" fill="rgb(224,148,27)" rx="2" ry="2" />
<text  x="709.22" y="319.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (3 samples, 0.06%)</title><rect x="1148.1" y="357" width="0.7" height="15.0" fill="rgb(230,82,20)" rx="2" ry="2" />
<text  x="1151.06" y="367.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.0 (4 samples, 0.08%)</title><rect x="1189.0" y="341" width="1.0" height="15.0" fill="rgb(251,138,53)" rx="2" ry="2" />
<text  x="1192.00" y="351.5" ></text>
</g>
<g >
<title>std::deque&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_pop_front_aux (6 samples, 0.13%)</title><rect x="940.9" y="309" width="1.5" height="15.0" fill="rgb(216,205,7)" rx="2" ry="2" />
<text  x="943.87" y="319.5" ></text>
</g>
<g >
<title>copy_page_to_iter (7 samples, 0.15%)</title><rect x="54.2" y="309" width="1.7" height="15.0" fill="rgb(231,10,26)" rx="2" ry="2" />
<text  x="57.18" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::destroy&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (2 samples, 0.04%)</title><rect x="938.4" y="309" width="0.5" height="15.0" fill="rgb(252,218,19)" rx="2" ry="2" />
<text  x="941.37" y="319.5" ></text>
</g>
<g >
<title>path_openat (6 samples, 0.13%)</title><rect x="23.5" y="389" width="1.5" height="15.0" fill="rgb(247,7,4)" rx="2" ry="2" />
<text  x="26.48" y="399.5" ></text>
</g>
<g >
<title>do_syscall_64 (93 samples, 1.97%)</title><rect x="26.0" y="453" width="23.2" height="15.0" fill="rgb(253,198,8)" rx="2" ry="2" />
<text  x="28.98" y="463.5" >d..</text>
</g>
<g >
<title>__x64_sys_futex (131 samples, 2.77%)</title><rect x="63.4" y="437" width="32.7" height="15.0" fill="rgb(250,203,4)" rx="2" ry="2" />
<text  x="66.42" y="447.5" >__..</text>
</g>
<g >
<title>__generic_file_write_iter (84 samples, 1.78%)</title><rect x="28.0" y="341" width="20.9" height="15.0" fill="rgb(242,186,29)" rx="2" ry="2" />
<text  x="30.97" y="351.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (4 samples, 0.08%)</title><rect x="707.5" y="325" width="1.0" height="15.0" fill="rgb(225,4,15)" rx="2" ry="2" />
<text  x="710.47" y="335.5" ></text>
</g>
<g >
<title>std::queue&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::deque&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::empty (2 samples, 0.04%)</title><rect x="933.1" y="341" width="0.5" height="15.0" fill="rgb(221,44,28)" rx="2" ry="2" />
<text  x="936.13" y="351.5" ></text>
</g>
<g >
<title>CSV2JSON::ReadCSV (18 samples, 0.38%)</title><rect x="1087.7" y="453" width="4.4" height="15.0" fill="rgb(212,42,42)" rx="2" ry="2" />
<text  x="1090.65" y="463.5" ></text>
</g>
<g >
<title>put_prev_entity (1 samples, 0.02%)</title><rect x="765.1" y="229" width="0.3" height="15.0" fill="rgb(248,64,18)" rx="2" ry="2" />
<text  x="768.13" y="239.5" ></text>
</g>
<g >
<title>do_page_fault (20 samples, 0.42%)</title><rect x="1143.8" y="469" width="5.0" height="15.0" fill="rgb(250,122,34)" rx="2" ry="2" />
<text  x="1146.82" y="479.5" ></text>
</g>
<g >
<title>free_unref_page_commit (3 samples, 0.06%)</title><rect x="1150.8" y="261" width="0.8" height="15.0" fill="rgb(215,42,12)" rx="2" ry="2" />
<text  x="1153.81" y="271.5" ></text>
</g>
<g >
<title>apparmor_file_mprotect (4 samples, 0.08%)</title><rect x="1109.4" y="421" width="1.0" height="15.0" fill="rgb(223,80,39)" rx="2" ry="2" />
<text  x="1112.37" y="431.5" ></text>
</g>
<g >
<title>[unknown] (17 samples, 0.36%)</title><rect x="336.3" y="469" width="4.2" height="15.0" fill="rgb(244,129,50)" rx="2" ry="2" />
<text  x="339.27" y="479.5" ></text>
</g>
<g >
<title>__ext4_journal_stop (5 samples, 0.11%)</title><rect x="40.5" y="293" width="1.2" height="15.0" fill="rgb(223,202,21)" rx="2" ry="2" />
<text  x="43.45" y="303.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="29.7" y="133" width="0.3" height="15.0" fill="rgb(205,134,31)" rx="2" ry="2" />
<text  x="32.72" y="143.5" ></text>
</g>
<g >
<title>mem_cgroup_charge_statistics (2 samples, 0.04%)</title><rect x="1183.0" y="357" width="0.5" height="15.0" fill="rgb(210,89,25)" rx="2" ry="2" />
<text  x="1186.01" y="367.5" ></text>
</g>
<g >
<title>truncate_cleanup_page (1 samples, 0.02%)</title><rect x="23.5" y="293" width="0.2" height="15.0" fill="rgb(206,171,28)" rx="2" ry="2" />
<text  x="26.48" y="303.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="35.7" y="181" width="0.3" height="15.0" fill="rgb(253,127,21)" rx="2" ry="2" />
<text  x="38.71" y="191.5" ></text>
</g>
<g >
<title>enqueue_hrtimer (1 samples, 0.02%)</title><rect x="706.7" y="261" width="0.3" height="15.0" fill="rgb(209,213,1)" rx="2" ry="2" />
<text  x="709.72" y="271.5" ></text>
</g>
<g >
<title>ext4_writepages (2 samples, 0.04%)</title><rect x="1087.2" y="309" width="0.5" height="15.0" fill="rgb(210,81,5)" rx="2" ry="2" />
<text  x="1090.15" y="319.5" ></text>
</g>
<g >
<title>do_anonymous_page (2 samples, 0.04%)</title><rect x="1107.1" y="357" width="0.5" height="15.0" fill="rgb(238,133,15)" rx="2" ry="2" />
<text  x="1110.12" y="367.5" ></text>
</g>
<g >
<title>do_user_addr_fault (4 samples, 0.08%)</title><rect x="1106.6" y="405" width="1.0" height="15.0" fill="rgb(226,192,52)" rx="2" ry="2" />
<text  x="1109.62" y="415.5" ></text>
</g>
<g >
<title>psi_task_change (6 samples, 0.13%)</title><rect x="67.7" y="325" width="1.5" height="15.0" fill="rgb(254,82,1)" rx="2" ry="2" />
<text  x="70.66" y="335.5" ></text>
</g>
<g >
<title>_pthread_cleanup_pop_restore (1 samples, 0.02%)</title><rect x="1104.1" y="437" width="0.3" height="15.0" fill="rgb(247,212,48)" rx="2" ry="2" />
<text  x="1107.13" y="447.5" ></text>
</g>
<g >
<title>blk_flush_plug_list (1 samples, 0.02%)</title><rect x="57.9" y="229" width="0.3" height="15.0" fill="rgb(230,138,24)" rx="2" ry="2" />
<text  x="60.93" y="239.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (4 samples, 0.08%)</title><rect x="1136.6" y="341" width="1.0" height="15.0" fill="rgb(246,186,52)" rx="2" ry="2" />
<text  x="1139.58" y="351.5" ></text>
</g>
<g >
<title>unmap_page_range (9 samples, 0.19%)</title><rect x="1149.6" y="357" width="2.2" height="15.0" fill="rgb(205,146,12)" rx="2" ry="2" />
<text  x="1152.56" y="367.5" ></text>
</g>
<g >
<title>lru_cache_add_active_or_unevictable (2 samples, 0.04%)</title><rect x="1147.6" y="373" width="0.5" height="15.0" fill="rgb(208,48,20)" rx="2" ry="2" />
<text  x="1150.56" y="383.5" ></text>
</g>
<g >
<title>handle_mm_fault (72 samples, 1.52%)</title><rect x="1167.8" y="421" width="18.0" height="15.0" fill="rgb(235,89,16)" rx="2" ry="2" />
<text  x="1170.78" y="431.5" ></text>
</g>
<g >
<title>__lru_cache_add (1 samples, 0.02%)</title><rect x="40.0" y="245" width="0.2" height="15.0" fill="rgb(240,111,37)" rx="2" ry="2" />
<text  x="42.96" y="255.5" ></text>
</g>
<g >
<title>_IO_file_xsputn@@GLIBC_2.2.5 (1 samples, 0.02%)</title><rect x="1106.4" y="453" width="0.2" height="15.0" fill="rgb(221,20,17)" rx="2" ry="2" />
<text  x="1109.37" y="463.5" ></text>
</g>
<g >
<title>hash_futex (1 samples, 0.02%)</title><rect x="309.8" y="405" width="0.3" height="15.0" fill="rgb(239,79,45)" rx="2" ry="2" />
<text  x="312.81" y="415.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="155.3" y="453" width="0.2" height="15.0" fill="rgb(210,95,25)" rx="2" ry="2" />
<text  x="158.28" y="463.5" ></text>
</g>
<g >
<title>mark_wake_futex (2 samples, 0.04%)</title><rect x="299.3" y="389" width="0.5" height="15.0" fill="rgb(246,7,54)" rx="2" ry="2" />
<text  x="302.32" y="399.5" ></text>
</g>
<g >
<title>ret_from_fork (16 samples, 0.34%)</title><rect x="49.4" y="469" width="4.0" height="15.0" fill="rgb(252,76,26)" rx="2" ry="2" />
<text  x="52.44" y="479.5" ></text>
</g>
<g >
<title>fprintf (46 samples, 0.97%)</title><rect x="1092.9" y="453" width="11.5" height="15.0" fill="rgb(209,142,23)" rx="2" ry="2" />
<text  x="1095.89" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (4 samples, 0.08%)</title><rect x="1106.6" y="469" width="1.0" height="15.0" fill="rgb(246,222,7)" rx="2" ry="2" />
<text  x="1109.62" y="479.5" ></text>
</g>
<g >
<title>ext4_setattr (6 samples, 0.13%)</title><rect x="23.5" y="325" width="1.5" height="15.0" fill="rgb(207,93,25)" rx="2" ry="2" />
<text  x="26.48" y="335.5" ></text>
</g>
<g >
<title>perf_event_exec (4 samples, 0.08%)</title><rect x="1189.0" y="373" width="1.0" height="15.0" fill="rgb(218,133,48)" rx="2" ry="2" />
<text  x="1192.00" y="383.5" ></text>
</g>
<g >
<title>page_fault (3 samples, 0.06%)</title><rect x="59.4" y="469" width="0.8" height="15.0" fill="rgb(244,68,39)" rx="2" ry="2" />
<text  x="62.43" y="479.5" ></text>
</g>
<g >
<title>touch_atime (1 samples, 0.02%)</title><rect x="59.2" y="309" width="0.2" height="15.0" fill="rgb(247,159,29)" rx="2" ry="2" />
<text  x="62.18" y="319.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (4 samples, 0.08%)</title><rect x="707.5" y="309" width="1.0" height="15.0" fill="rgb(225,201,15)" rx="2" ry="2" />
<text  x="710.47" y="319.5" ></text>
</g>
<g >
<title>enqueue_entity (2 samples, 0.04%)</title><rect x="306.6" y="309" width="0.5" height="15.0" fill="rgb(238,79,35)" rx="2" ry="2" />
<text  x="309.56" y="319.5" ></text>
</g>
<g >
<title>CSV2JSON::List2Cell (33 samples, 0.70%)</title><rect x="352.7" y="341" width="8.3" height="15.0" fill="rgb(229,139,47)" rx="2" ry="2" />
<text  x="355.74" y="351.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.02%)</title><rect x="765.1" y="277" width="0.3" height="15.0" fill="rgb(234,215,30)" rx="2" ry="2" />
<text  x="768.13" y="287.5" ></text>
</g>
<g >
<title>ext4_do_update_inode (10 samples, 0.21%)</title><rect x="43.2" y="213" width="2.5" height="15.0" fill="rgb(206,42,1)" rx="2" ry="2" />
<text  x="46.20" y="223.5" ></text>
</g>
<g >
<title>std::getline&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (4 samples, 0.08%)</title><rect x="339.5" y="453" width="1.0" height="15.0" fill="rgb(250,92,21)" rx="2" ry="2" />
<text  x="342.51" y="463.5" ></text>
</g>
<g >
<title>__get_vma_policy (1 samples, 0.02%)</title><rect x="1144.8" y="373" width="0.3" height="15.0" fill="rgb(247,46,15)" rx="2" ry="2" />
<text  x="1147.82" y="383.5" ></text>
</g>
<g >
<title>generic_write_end (24 samples, 0.51%)</title><rect x="41.7" y="293" width="6.0" height="15.0" fill="rgb(221,179,10)" rx="2" ry="2" />
<text  x="44.70" y="303.5" ></text>
</g>
<g >
<title>__vsprintf_internal (1 samples, 0.02%)</title><rect x="779.1" y="341" width="0.3" height="15.0" fill="rgb(228,169,28)" rx="2" ry="2" />
<text  x="782.11" y="351.5" ></text>
</g>
<g >
<title>alloc_slab_page (1 samples, 0.02%)</title><rect x="29.5" y="149" width="0.2" height="15.0" fill="rgb(208,164,43)" rx="2" ry="2" />
<text  x="32.47" y="159.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.04%)</title><rect x="1087.2" y="469" width="0.5" height="15.0" fill="rgb(244,108,51)" rx="2" ry="2" />
<text  x="1090.15" y="479.5" ></text>
</g>
<g >
<title>cpuacct_charge (1 samples, 0.02%)</title><rect x="707.2" y="165" width="0.3" height="15.0" fill="rgb(225,35,16)" rx="2" ry="2" />
<text  x="710.22" y="175.5" ></text>
</g>
<g >
<title>page_fault (2 samples, 0.04%)</title><rect x="1160.0" y="485" width="0.5" height="15.0" fill="rgb(244,185,28)" rx="2" ry="2" />
<text  x="1163.04" y="495.5" ></text>
</g>
<g >
<title>jbd2_journal_get_write_access (1 samples, 0.02%)</title><rect x="45.9" y="197" width="0.3" height="15.0" fill="rgb(222,134,53)" rx="2" ry="2" />
<text  x="48.95" y="207.5" ></text>
</g>
<g >
<title>__fput (2 samples, 0.04%)</title><rect x="1087.2" y="405" width="0.5" height="15.0" fill="rgb(205,32,21)" rx="2" ry="2" />
<text  x="1090.15" y="415.5" ></text>
</g>
<g >
<title>rcu_sched_clock_irq (1 samples, 0.02%)</title><rect x="1180.8" y="197" width="0.2" height="15.0" fill="rgb(215,126,6)" rx="2" ry="2" />
<text  x="1183.76" y="207.5" ></text>
</g>
<g >
<title>futex_wait_setup (8 samples, 0.17%)</title><rect x="93.6" y="389" width="2.0" height="15.0" fill="rgb(221,12,33)" rx="2" ry="2" />
<text  x="96.63" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (1 samples, 0.02%)</title><rect x="339.3" y="453" width="0.2" height="15.0" fill="rgb(218,119,34)" rx="2" ry="2" />
<text  x="342.26" y="463.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="1160.3" y="421" width="0.2" height="15.0" fill="rgb(214,214,7)" rx="2" ry="2" />
<text  x="1163.29" y="431.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;&amp;, std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*&gt;::operator* (1 samples, 0.02%)</title><rect x="934.6" y="309" width="0.3" height="15.0" fill="rgb(241,131,36)" rx="2" ry="2" />
<text  x="937.63" y="319.5" ></text>
</g>
<g >
<title>release_pages (1 samples, 0.02%)</title><rect x="23.7" y="261" width="0.3" height="15.0" fill="rgb(232,60,0)" rx="2" ry="2" />
<text  x="26.73" y="271.5" ></text>
</g>
<g >
<title>do_syscall_64 (4 samples, 0.08%)</title><rect x="1189.0" y="469" width="1.0" height="15.0" fill="rgb(249,199,28)" rx="2" ry="2" />
<text  x="1192.00" y="479.5" ></text>
</g>
<g >
<title>__dec_node_page_state (1 samples, 0.02%)</title><rect x="1149.8" y="325" width="0.3" height="15.0" fill="rgb(251,117,14)" rx="2" ry="2" />
<text  x="1152.81" y="335.5" ></text>
</g>
<g >
<title>free_unref_page_list (3 samples, 0.06%)</title><rect x="1150.8" y="277" width="0.8" height="15.0" fill="rgb(252,75,39)" rx="2" ry="2" />
<text  x="1153.81" y="287.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (7 samples, 0.15%)</title><rect x="54.2" y="293" width="1.7" height="15.0" fill="rgb(209,192,16)" rx="2" ry="2" />
<text  x="57.18" y="303.5" ></text>
</g>
<g >
<title>mem_cgroup_commit_charge (4 samples, 0.08%)</title><rect x="1183.0" y="373" width="1.0" height="15.0" fill="rgb(227,2,10)" rx="2" ry="2" />
<text  x="1186.01" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::substr (51 samples, 1.08%)</title><rect x="910.7" y="341" width="12.7" height="15.0" fill="rgb(250,85,52)" rx="2" ry="2" />
<text  x="913.66" y="351.5" ></text>
</g>
<g >
<title>native_write_msr (8 samples, 0.17%)</title><rect x="55.9" y="181" width="2.0" height="15.0" fill="rgb(253,130,6)" rx="2" ry="2" />
<text  x="58.93" y="191.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="1160.3" y="405" width="0.2" height="15.0" fill="rgb(242,15,19)" rx="2" ry="2" />
<text  x="1163.29" y="415.5" ></text>
</g>
<g >
<title>atime_needs_update (1 samples, 0.02%)</title><rect x="59.2" y="293" width="0.2" height="15.0" fill="rgb(226,90,36)" rx="2" ry="2" />
<text  x="62.18" y="303.5" ></text>
</g>
<g >
<title>perf_event_mmap (14 samples, 0.30%)</title><rect x="1126.1" y="405" width="3.5" height="15.0" fill="rgb(222,115,39)" rx="2" ry="2" />
<text  x="1129.09" y="415.5" ></text>
</g>
<g >
<title>do_brk_flags (1 samples, 0.02%)</title><rect x="49.2" y="421" width="0.2" height="15.0" fill="rgb(213,52,21)" rx="2" ry="2" />
<text  x="52.19" y="431.5" ></text>
</g>
<g >
<title>run_local_timers (1 samples, 0.02%)</title><rect x="1085.4" y="373" width="0.3" height="15.0" fill="rgb(218,175,7)" rx="2" ry="2" />
<text  x="1088.41" y="383.5" ></text>
</g>
<g >
<title>select_task_rq_fair (1 samples, 0.02%)</title><rect x="305.8" y="357" width="0.3" height="15.0" fill="rgb(218,28,24)" rx="2" ry="2" />
<text  x="308.81" y="367.5" ></text>
</g>
<g >
<title>__x64_sys_write (92 samples, 1.95%)</title><rect x="26.2" y="437" width="23.0" height="15.0" fill="rgb(229,196,5)" rx="2" ry="2" />
<text  x="29.23" y="447.5" >_..</text>
</g>
<g >
<title>__x64_sys_brk (1 samples, 0.02%)</title><rect x="49.2" y="437" width="0.2" height="15.0" fill="rgb(238,101,22)" rx="2" ry="2" />
<text  x="52.19" y="447.5" ></text>
</g>
<g >
<title>__pthread_clockjoin_ex (4 samples, 0.08%)</title><rect x="1136.6" y="501" width="1.0" height="15.0" fill="rgb(237,70,24)" rx="2" ry="2" />
<text  x="1139.58" y="511.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (1 samples, 0.02%)</title><rect x="47.9" y="293" width="0.3" height="15.0" fill="rgb(218,199,11)" rx="2" ry="2" />
<text  x="50.94" y="303.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.0 (32 samples, 0.68%)</title><rect x="1113.1" y="325" width="8.0" height="15.0" fill="rgb(217,145,16)" rx="2" ry="2" />
<text  x="1116.11" y="335.5" ></text>
</g>
<g >
<title>perf (4 samples, 0.08%)</title><rect x="1189.0" y="517" width="1.0" height="15.0" fill="rgb(247,173,38)" rx="2" ry="2" />
<text  x="1192.00" y="527.5" ></text>
</g>
<g >
<title>jbd2_write_access_granted (1 samples, 0.02%)</title><rect x="45.9" y="181" width="0.3" height="15.0" fill="rgb(240,205,12)" rx="2" ry="2" />
<text  x="48.95" y="191.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="1085.4" y="421" width="0.3" height="15.0" fill="rgb(210,131,53)" rx="2" ry="2" />
<text  x="1088.41" y="431.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="41.5" y="229" width="0.2" height="15.0" fill="rgb(214,53,49)" rx="2" ry="2" />
<text  x="44.45" y="239.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (23 samples, 0.49%)</title><rect x="53.7" y="469" width="5.7" height="15.0" fill="rgb(248,159,20)" rx="2" ry="2" />
<text  x="56.69" y="479.5" ></text>
</g>
<g >
<title>std::queue&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::deque&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::pop (24 samples, 0.51%)</title><rect x="936.4" y="341" width="6.0" height="15.0" fill="rgb(238,10,41)" rx="2" ry="2" />
<text  x="939.38" y="351.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="1149.3" y="485" width="0.3" height="15.0" fill="rgb(208,151,30)" rx="2" ry="2" />
<text  x="1152.31" y="495.5" ></text>
</g>
<g >
<title>crypto_shash_update (3 samples, 0.06%)</title><rect x="44.7" y="165" width="0.7" height="15.0" fill="rgb(225,1,7)" rx="2" ry="2" />
<text  x="47.70" y="175.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (2 samples, 0.04%)</title><rect x="941.6" y="261" width="0.5" height="15.0" fill="rgb(229,198,27)" rx="2" ry="2" />
<text  x="944.62" y="271.5" ></text>
</g>
<g >
<title>__fget_light (6 samples, 0.13%)</title><rect x="26.5" y="405" width="1.5" height="15.0" fill="rgb(222,214,42)" rx="2" ry="2" />
<text  x="29.48" y="415.5" ></text>
</g>
<g >
<title>ondemand_readahead (1 samples, 0.02%)</title><rect x="57.9" y="293" width="0.3" height="15.0" fill="rgb(211,152,12)" rx="2" ry="2" />
<text  x="60.93" y="303.5" ></text>
</g>
<g >
<title>page_fault (87 samples, 1.84%)</title><rect x="1164.8" y="485" width="21.7" height="15.0" fill="rgb(219,85,22)" rx="2" ry="2" />
<text  x="1167.79" y="495.5" >p..</text>
</g>
<g >
<title>std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::~pair (1 samples, 0.02%)</title><rect x="940.4" y="277" width="0.2" height="15.0" fill="rgb(216,216,3)" rx="2" ry="2" />
<text  x="943.37" y="287.5" ></text>
</g>
<g >
<title>ksoftirqd_running (1 samples, 0.02%)</title><rect x="305.1" y="309" width="0.2" height="15.0" fill="rgb(216,94,10)" rx="2" ry="2" />
<text  x="308.06" y="319.5" ></text>
</g>
<g >
<title>__wake_up_common (1 samples, 0.02%)</title><rect x="41.2" y="229" width="0.3" height="15.0" fill="rgb(218,181,51)" rx="2" ry="2" />
<text  x="44.20" y="239.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.0 (4 samples, 0.08%)</title><rect x="707.5" y="213" width="1.0" height="15.0" fill="rgb(210,21,12)" rx="2" ry="2" />
<text  x="710.47" y="223.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="267.1" y="453" width="0.3" height="15.0" fill="rgb(244,30,53)" rx="2" ry="2" />
<text  x="270.12" y="463.5" ></text>
</g>
<g >
<title>iov_iter_fault_in_readable (1 samples, 0.02%)</title><rect x="48.2" y="309" width="0.2" height="15.0" fill="rgb(239,51,45)" rx="2" ry="2" />
<text  x="51.19" y="319.5" ></text>
</g>
<g >
<title>do_last (6 samples, 0.13%)</title><rect x="23.5" y="373" width="1.5" height="15.0" fill="rgb(207,182,40)" rx="2" ry="2" />
<text  x="26.48" y="383.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (9 samples, 0.19%)</title><rect x="1145.1" y="357" width="2.2" height="15.0" fill="rgb(252,3,53)" rx="2" ry="2" />
<text  x="1148.07" y="367.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (8 samples, 0.17%)</title><rect x="55.9" y="197" width="2.0" height="15.0" fill="rgb(243,224,33)" rx="2" ry="2" />
<text  x="58.93" y="207.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="267.1" y="373" width="0.3" height="15.0" fill="rgb(207,66,12)" rx="2" ry="2" />
<text  x="270.12" y="383.5" ></text>
</g>
<g >
<title>new_slab (3 samples, 0.06%)</title><rect x="29.2" y="181" width="0.8" height="15.0" fill="rgb(207,96,43)" rx="2" ry="2" />
<text  x="32.22" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::destroy&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="941.1" y="293" width="0.3" height="15.0" fill="rgb(237,46,37)" rx="2" ry="2" />
<text  x="944.12" y="303.5" ></text>
</g>
<g >
<title>sync_regs (8 samples, 0.17%)</title><rect x="1187.0" y="485" width="2.0" height="15.0" fill="rgb(244,153,29)" rx="2" ry="2" />
<text  x="1190.00" y="495.5" ></text>
</g>
<g >
<title>__strchrnul_avx2 (5 samples, 0.11%)</title><rect x="1093.4" y="437" width="1.2" height="15.0" fill="rgb(235,218,16)" rx="2" ry="2" />
<text  x="1096.39" y="447.5" ></text>
</g>
<g >
<title>mpage_map_and_submit_buffers (1 samples, 0.02%)</title><rect x="1087.2" y="277" width="0.2" height="15.0" fill="rgb(236,143,26)" rx="2" ry="2" />
<text  x="1090.15" y="287.5" ></text>
</g>
<g >
<title>x86_pmu_enable (96 samples, 2.03%)</title><rect x="69.4" y="293" width="24.0" height="15.0" fill="rgb(214,140,28)" rx="2" ry="2" />
<text  x="72.41" y="303.5" >x..</text>
</g>
<g >
<title>__lru_cache_add (2 samples, 0.04%)</title><rect x="1147.6" y="357" width="0.5" height="15.0" fill="rgb(230,79,25)" rx="2" ry="2" />
<text  x="1150.56" y="367.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1186.5" y="485" width="0.3" height="15.0" fill="rgb(247,77,48)" rx="2" ry="2" />
<text  x="1189.51" y="495.5" ></text>
</g>
<g >
<title>__x64_sys_read (23 samples, 0.49%)</title><rect x="53.7" y="437" width="5.7" height="15.0" fill="rgb(252,227,24)" rx="2" ry="2" />
<text  x="56.69" y="447.5" ></text>
</g>
<g >
<title>generic_file_buffered_read (22 samples, 0.47%)</title><rect x="53.9" y="325" width="5.5" height="15.0" fill="rgb(253,197,47)" rx="2" ry="2" />
<text  x="56.93" y="335.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (2 samples, 0.04%)</title><rect x="1147.6" y="341" width="0.5" height="15.0" fill="rgb(220,116,33)" rx="2" ry="2" />
<text  x="1150.56" y="351.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (1 samples, 0.02%)</title><rect x="46.7" y="197" width="0.2" height="15.0" fill="rgb(205,156,25)" rx="2" ry="2" />
<text  x="49.70" y="207.5" ></text>
</g>
<g >
<title>__vsprintf_internal (552 samples, 11.68%)</title><rect x="129.6" y="485" width="137.8" height="15.0" fill="rgb(210,18,2)" rx="2" ry="2" />
<text  x="132.57" y="495.5" >__vsprintf_internal</text>
</g>
<g >
<title>truncate_pagecache (6 samples, 0.13%)</title><rect x="23.5" y="309" width="1.5" height="15.0" fill="rgb(216,169,16)" rx="2" ry="2" />
<text  x="26.48" y="319.5" ></text>
</g>
<g >
<title>vma_set_page_prot (1 samples, 0.02%)</title><rect x="1131.3" y="405" width="0.3" height="15.0" fill="rgb(231,31,40)" rx="2" ry="2" />
<text  x="1134.34" y="415.5" ></text>
</g>
<g >
<title>__mempcpy_avx_unaligned_erms (2 samples, 0.04%)</title><rect x="124.6" y="485" width="0.5" height="15.0" fill="rgb(208,65,37)" rx="2" ry="2" />
<text  x="127.58" y="495.5" ></text>
</g>
<g >
<title>pagecache_get_page (4 samples, 0.08%)</title><rect x="58.2" y="309" width="1.0" height="15.0" fill="rgb(232,17,49)" rx="2" ry="2" />
<text  x="61.18" y="319.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.02%)</title><rect x="336.3" y="453" width="0.2" height="15.0" fill="rgb(221,151,9)" rx="2" ry="2" />
<text  x="339.27" y="463.5" ></text>
</g>
<g >
<title>mark_buffer_dirty (5 samples, 0.11%)</title><rect x="46.2" y="245" width="1.2" height="15.0" fill="rgb(229,221,36)" rx="2" ry="2" />
<text  x="49.20" y="255.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1186.8" y="485" width="0.2" height="15.0" fill="rgb(217,45,8)" rx="2" ry="2" />
<text  x="1189.75" y="495.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void  (2,549 samples, 53.92%)</title><rect x="340.8" y="421" width="636.3" height="15.0" fill="rgb(222,98,4)" rx="2" ry="2" />
<text  x="343.76" y="431.5" >std::thread::_Invoker&lt;std::tuple&lt;void </text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.02%)</title><rect x="1160.3" y="437" width="0.2" height="15.0" fill="rgb(248,116,35)" rx="2" ry="2" />
<text  x="1163.29" y="447.5" ></text>
</g>
<g >
<title>security_file_permission (1 samples, 0.02%)</title><rect x="48.9" y="373" width="0.3" height="15.0" fill="rgb(236,67,53)" rx="2" ry="2" />
<text  x="51.94" y="383.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="765.1" y="309" width="0.3" height="15.0" fill="rgb(207,150,6)" rx="2" ry="2" />
<text  x="768.13" y="319.5" ></text>
</g>
<g >
<title>find_vma (3 samples, 0.06%)</title><rect x="1121.1" y="421" width="0.8" height="15.0" fill="rgb(215,185,43)" rx="2" ry="2" />
<text  x="1124.10" y="431.5" ></text>
</g>
<g >
<title>get_random_u32 (1 samples, 0.02%)</title><rect x="29.7" y="149" width="0.3" height="15.0" fill="rgb(251,14,33)" rx="2" ry="2" />
<text  x="32.72" y="159.5" ></text>
</g>
<g >
<title>__x64_sys_openat (6 samples, 0.13%)</title><rect x="23.5" y="437" width="1.5" height="15.0" fill="rgb(236,37,27)" rx="2" ry="2" />
<text  x="26.48" y="447.5" ></text>
</g>
<g >
<title>grab_cache_page_write_begin (32 samples, 0.68%)</title><rect x="32.5" y="293" width="8.0" height="15.0" fill="rgb(209,125,1)" rx="2" ry="2" />
<text  x="35.47" y="303.5" ></text>
</g>
<g >
<title>ksoftirqd_running (1 samples, 0.02%)</title><rect x="940.1" y="229" width="0.3" height="15.0" fill="rgb(249,22,5)" rx="2" ry="2" />
<text  x="943.12" y="239.5" ></text>
</g>
<g >
<title>[C2J] (228 samples, 4.82%)</title><rect x="708.5" y="341" width="56.9" height="15.0" fill="rgb(217,157,7)" rx="2" ry="2" />
<text  x="711.46" y="351.5" >[C2J]</text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="1085.4" y="437" width="0.3" height="15.0" fill="rgb(249,170,7)" rx="2" ry="2" />
<text  x="1088.41" y="447.5" ></text>
</g>
<g >
<title>iov_iter_copy_from_user_atomic (1 samples, 0.02%)</title><rect x="47.9" y="309" width="0.3" height="15.0" fill="rgb(228,127,31)" rx="2" ry="2" />
<text  x="50.94" y="319.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::operator bool (2 samples, 0.04%)</title><rect x="1104.9" y="453" width="0.5" height="15.0" fill="rgb(248,161,4)" rx="2" ry="2" />
<text  x="1107.88" y="463.5" ></text>
</g>
<g >
<title>rmqueue (1 samples, 0.02%)</title><rect x="36.2" y="197" width="0.3" height="15.0" fill="rgb(206,227,40)" rx="2" ry="2" />
<text  x="39.21" y="207.5" ></text>
</g>
<g >
<title>timerqueue_add (1 samples, 0.02%)</title><rect x="706.7" y="245" width="0.3" height="15.0" fill="rgb(213,105,43)" rx="2" ry="2" />
<text  x="709.72" y="255.5" ></text>
</g>
<g >
<title>[unknown] (15 samples, 0.32%)</title><rect x="12.7" y="485" width="3.8" height="15.0" fill="rgb(221,130,37)" rx="2" ry="2" />
<text  x="15.75" y="495.5" ></text>
</g>
<g >
<title>std::deque&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::push_back (1 samples, 0.02%)</title><rect x="1089.1" y="437" width="0.3" height="15.0" fill="rgb(223,27,8)" rx="2" ry="2" />
<text  x="1092.15" y="447.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="1107.6" y="501" width="0.3" height="15.0" fill="rgb(209,179,46)" rx="2" ry="2" />
<text  x="1110.62" y="511.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (2,549 samples, 53.92%)</title><rect x="340.8" y="453" width="636.3" height="15.0" fill="rgb(251,204,8)" rx="2" ry="2" />
<text  x="343.76" y="463.5" >[libstdc++.so.6.0.28]</text>
</g>
<g >
<title>get_page_from_freelist (15 samples, 0.32%)</title><rect x="32.7" y="213" width="3.8" height="15.0" fill="rgb(244,12,9)" rx="2" ry="2" />
<text  x="35.72" y="223.5" ></text>
</g>
<g >
<title>_IO_old_init (9 samples, 0.19%)</title><rect x="18.5" y="485" width="2.2" height="15.0" fill="rgb(229,179,16)" rx="2" ry="2" />
<text  x="21.49" y="495.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (1 samples, 0.02%)</title><rect x="1148.6" y="341" width="0.2" height="15.0" fill="rgb(216,197,53)" rx="2" ry="2" />
<text  x="1151.56" y="351.5" ></text>
</g>
<g >
<title>clear_page_erms (15 samples, 0.32%)</title><rect x="1175.3" y="325" width="3.7" height="15.0" fill="rgb(216,187,19)" rx="2" ry="2" />
<text  x="1178.27" y="335.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="93.4" y="325" width="0.2" height="15.0" fill="rgb(215,129,36)" rx="2" ry="2" />
<text  x="96.38" y="335.5" ></text>
</g>
<g >
<title>policy_node (1 samples, 0.02%)</title><rect x="1147.3" y="357" width="0.3" height="15.0" fill="rgb(249,169,29)" rx="2" ry="2" />
<text  x="1150.31" y="367.5" ></text>
</g>
<g >
<title>__task_rq_lock (1 samples, 0.02%)</title><rect x="305.3" y="357" width="0.3" height="15.0" fill="rgb(207,184,16)" rx="2" ry="2" />
<text  x="308.31" y="367.5" ></text>
</g>
<g >
<title>__x64_sys_write (1 samples, 0.02%)</title><rect x="25.7" y="453" width="0.3" height="15.0" fill="rgb(223,195,23)" rx="2" ry="2" />
<text  x="28.73" y="463.5" ></text>
</g>
<g >
<title>rwsem_down_read_slowpath (3 samples, 0.06%)</title><rect x="1166.0" y="405" width="0.8" height="15.0" fill="rgb(244,108,44)" rx="2" ry="2" />
<text  x="1169.04" y="415.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::destroy&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="942.1" y="293" width="0.3" height="15.0" fill="rgb(246,10,13)" rx="2" ry="2" />
<text  x="945.12" y="303.5" ></text>
</g>
<g >
<title>change_protection_range (11 samples, 0.23%)</title><rect x="1123.3" y="389" width="2.8" height="15.0" fill="rgb(225,9,27)" rx="2" ry="2" />
<text  x="1126.35" y="399.5" ></text>
</g>
<g >
<title>__slab_alloc (3 samples, 0.06%)</title><rect x="29.2" y="213" width="0.8" height="15.0" fill="rgb(223,80,37)" rx="2" ry="2" />
<text  x="32.22" y="223.5" ></text>
</g>
<g >
<title>std::queue&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::deque&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::push (1 samples, 0.02%)</title><rect x="1106.1" y="453" width="0.3" height="15.0" fill="rgb(232,129,6)" rx="2" ry="2" />
<text  x="1109.12" y="463.5" ></text>
</g>
<g >
<title>_raw_spin_lock (3 samples, 0.06%)</title><rect x="64.7" y="389" width="0.7" height="15.0" fill="rgb(252,39,26)" rx="2" ry="2" />
<text  x="67.67" y="399.5" ></text>
</g>
<g >
<title>alloc_pages_current (16 samples, 0.34%)</title><rect x="32.5" y="245" width="4.0" height="15.0" fill="rgb(239,184,48)" rx="2" ry="2" />
<text  x="35.47" y="255.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.02%)</title><rect x="309.1" y="293" width="0.2" height="15.0" fill="rgb(206,111,18)" rx="2" ry="2" />
<text  x="312.06" y="303.5" ></text>
</g>
<g >
<title>xas_start (1 samples, 0.02%)</title><rect x="58.9" y="277" width="0.3" height="15.0" fill="rgb(250,39,27)" rx="2" ry="2" />
<text  x="61.93" y="287.5" ></text>
</g>
<g >
<title>account_page_dirtied (1 samples, 0.02%)</title><rect x="46.9" y="213" width="0.3" height="15.0" fill="rgb(219,130,44)" rx="2" ry="2" />
<text  x="49.95" y="223.5" ></text>
</g>
<g >
<title>rwsem_spin_on_owner (1 samples, 0.02%)</title><rect x="1166.5" y="373" width="0.3" height="15.0" fill="rgb(225,90,17)" rx="2" ry="2" />
<text  x="1169.53" y="383.5" ></text>
</g>
<g >
<title>dequeue_task_fair (1 samples, 0.02%)</title><rect x="69.2" y="341" width="0.2" height="15.0" fill="rgb(205,116,46)" rx="2" ry="2" />
<text  x="72.16" y="351.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="1149.3" y="469" width="0.3" height="15.0" fill="rgb(242,82,30)" rx="2" ry="2" />
<text  x="1152.31" y="479.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="1173.3" y="325" width="0.2" height="15.0" fill="rgb(234,47,22)" rx="2" ry="2" />
<text  x="1176.27" y="335.5" ></text>
</g>
<g >
<title>CSV2JSON::WriteJSON (2 samples, 0.04%)</title><rect x="1092.1" y="453" width="0.5" height="15.0" fill="rgb(222,129,53)" rx="2" ry="2" />
<text  x="1095.15" y="463.5" ></text>
</g>
<g >
<title>perf_iterate_sb (8 samples, 0.17%)</title><rect x="1127.6" y="389" width="2.0" height="15.0" fill="rgb(244,7,4)" rx="2" ry="2" />
<text  x="1130.59" y="399.5" ></text>
</g>
<g >
<title>schedule (112 samples, 2.37%)</title><rect x="65.7" y="373" width="27.9" height="15.0" fill="rgb(245,191,26)" rx="2" ry="2" />
<text  x="68.67" y="383.5" >s..</text>
</g>
<g >
<title>dequeue_entity (3 samples, 0.06%)</title><rect x="66.9" y="309" width="0.8" height="15.0" fill="rgb(227,189,5)" rx="2" ry="2" />
<text  x="69.92" y="319.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="1160.3" y="357" width="0.2" height="15.0" fill="rgb(253,212,46)" rx="2" ry="2" />
<text  x="1163.29" y="367.5" ></text>
</g>
<g >
<title>rwsem_wake.isra.0 (1 samples, 0.02%)</title><rect x="1131.8" y="405" width="0.3" height="15.0" fill="rgb(229,211,23)" rx="2" ry="2" />
<text  x="1134.84" y="415.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void  (2,549 samples, 53.92%)</title><rect x="340.8" y="437" width="636.3" height="15.0" fill="rgb(214,208,36)" rx="2" ry="2" />
<text  x="343.76" y="447.5" >std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void </text>
</g>
<g >
<title>mpage_submit_page (1 samples, 0.02%)</title><rect x="1087.2" y="261" width="0.2" height="15.0" fill="rgb(227,26,12)" rx="2" ry="2" />
<text  x="1090.15" y="271.5" ></text>
</g>
<g >
<title>finish_task_switch (4 samples, 0.08%)</title><rect x="1136.6" y="357" width="1.0" height="15.0" fill="rgb(222,85,24)" rx="2" ry="2" />
<text  x="1139.58" y="367.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (3 samples, 0.06%)</title><rect x="1184.3" y="357" width="0.7" height="15.0" fill="rgb(220,115,15)" rx="2" ry="2" />
<text  x="1187.26" y="367.5" ></text>
</g>
<g >
<title>__mprotect (115 samples, 2.43%)</title><rect x="1107.9" y="501" width="28.7" height="15.0" fill="rgb(248,167,28)" rx="2" ry="2" />
<text  x="1110.87" y="511.5" >__..</text>
</g>
<g >
<title>osq_lock (1 samples, 0.02%)</title><rect x="1111.6" y="373" width="0.3" height="15.0" fill="rgb(232,77,54)" rx="2" ry="2" />
<text  x="1114.62" y="383.5" ></text>
</g>
<g >
<title>_int_free (2 samples, 0.04%)</title><rect x="779.4" y="341" width="0.5" height="15.0" fill="rgb(220,20,3)" rx="2" ry="2" />
<text  x="782.36" y="351.5" ></text>
</g>
<g >
<title>_raw_spin_lock (3 samples, 0.06%)</title><rect x="1125.1" y="373" width="0.7" height="15.0" fill="rgb(253,227,14)" rx="2" ry="2" />
<text  x="1128.10" y="383.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.13%)</title><rect x="23.5" y="469" width="1.5" height="15.0" fill="rgb(213,164,20)" rx="2" ry="2" />
<text  x="26.48" y="479.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="305.1" y="341" width="0.2" height="15.0" fill="rgb(248,32,43)" rx="2" ry="2" />
<text  x="308.06" y="351.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::destroy&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="936.4" y="325" width="0.2" height="15.0" fill="rgb(252,197,15)" rx="2" ry="2" />
<text  x="939.38" y="335.5" ></text>
</g>
<g >
<title>change_protection (11 samples, 0.23%)</title><rect x="1123.3" y="405" width="2.8" height="15.0" fill="rgb(254,36,21)" rx="2" ry="2" />
<text  x="1126.35" y="415.5" ></text>
</g>
<g >
<title>__brelse (3 samples, 0.06%)</title><rect x="42.5" y="213" width="0.7" height="15.0" fill="rgb(236,116,22)" rx="2" ry="2" />
<text  x="45.45" y="223.5" ></text>
</g>
<g >
<title>ext4_es_can_be_merged (1 samples, 0.02%)</title><rect x="32.0" y="213" width="0.2" height="15.0" fill="rgb(252,41,31)" rx="2" ry="2" />
<text  x="34.97" y="223.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="1160.3" y="453" width="0.2" height="15.0" fill="rgb(215,159,37)" rx="2" ry="2" />
<text  x="1163.29" y="463.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="1180.8" y="245" width="0.2" height="15.0" fill="rgb(225,167,32)" rx="2" ry="2" />
<text  x="1183.76" y="255.5" ></text>
</g>
<g >
<title>_IO_setb (2 samples, 0.04%)</title><rect x="20.7" y="485" width="0.5" height="15.0" fill="rgb(217,158,32)" rx="2" ry="2" />
<text  x="23.73" y="495.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.08%)</title><rect x="1189.0" y="309" width="1.0" height="15.0" fill="rgb(231,199,49)" rx="2" ry="2" />
<text  x="1192.00" y="319.5" ></text>
</g>
<g >
<title>__add_to_page_cache_locked (13 samples, 0.28%)</title><rect x="36.7" y="245" width="3.3" height="15.0" fill="rgb(216,92,21)" rx="2" ry="2" />
<text  x="39.71" y="255.5" ></text>
</g>
<g >
<title>get_page_from_freelist (9 samples, 0.19%)</title><rect x="1145.1" y="341" width="2.2" height="15.0" fill="rgb(227,200,37)" rx="2" ry="2" />
<text  x="1148.07" y="351.5" ></text>
</g>
<g >
<title>try_charge (2 samples, 0.04%)</title><rect x="1184.5" y="341" width="0.5" height="15.0" fill="rgb(223,189,31)" rx="2" ry="2" />
<text  x="1187.51" y="351.5" ></text>
</g>
<g >
<title>vfs_read (23 samples, 0.49%)</title><rect x="53.7" y="405" width="5.7" height="15.0" fill="rgb(240,129,13)" rx="2" ry="2" />
<text  x="56.69" y="415.5" ></text>
</g>
<g >
<title>vma_merge (4 samples, 0.08%)</title><rect x="1130.3" y="405" width="1.0" height="15.0" fill="rgb(208,166,52)" rx="2" ry="2" />
<text  x="1133.34" y="415.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (3 samples, 0.06%)</title><rect x="29.2" y="229" width="0.8" height="15.0" fill="rgb(250,170,45)" rx="2" ry="2" />
<text  x="32.22" y="239.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (1 samples, 0.02%)</title><rect x="310.6" y="469" width="0.2" height="15.0" fill="rgb(214,110,17)" rx="2" ry="2" />
<text  x="313.55" y="479.5" ></text>
</g>
<g >
<title>finish_task_switch (4 samples, 0.08%)</title><rect x="707.5" y="245" width="1.0" height="15.0" fill="rgb(217,161,40)" rx="2" ry="2" />
<text  x="710.47" y="255.5" ></text>
</g>
<g >
<title>ksys_write (92 samples, 1.95%)</title><rect x="26.2" y="421" width="23.0" height="15.0" fill="rgb(233,151,29)" rx="2" ry="2" />
<text  x="29.23" y="431.5" >k..</text>
</g>
<g >
<title>hash_futex (2 samples, 0.04%)</title><rect x="95.6" y="389" width="0.5" height="15.0" fill="rgb(236,148,20)" rx="2" ry="2" />
<text  x="98.62" y="399.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (5 samples, 0.11%)</title><rect x="948.9" y="357" width="1.2" height="15.0" fill="rgb(214,159,7)" rx="2" ry="2" />
<text  x="951.86" y="367.5" ></text>
</g>
<g >
<title>read_pages (1 samples, 0.02%)</title><rect x="57.9" y="261" width="0.3" height="15.0" fill="rgb(248,89,35)" rx="2" ry="2" />
<text  x="60.93" y="271.5" ></text>
</g>
<g >
<title>__remove_hrtimer (1 samples, 0.02%)</title><rect x="706.5" y="261" width="0.2" height="15.0" fill="rgb(225,171,39)" rx="2" ry="2" />
<text  x="709.47" y="271.5" ></text>
</g>
<g >
<title>release_pages (4 samples, 0.08%)</title><rect x="1150.8" y="293" width="1.0" height="15.0" fill="rgb(254,144,36)" rx="2" ry="2" />
<text  x="1153.81" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (29 samples, 0.61%)</title><rect x="969.1" y="357" width="7.2" height="15.0" fill="rgb(229,119,44)" rx="2" ry="2" />
<text  x="972.08" y="367.5" ></text>
</g>
<g >
<title>std::deque&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::emplace_back&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (10 samples, 0.21%)</title><rect x="1089.6" y="405" width="2.5" height="15.0" fill="rgb(248,216,53)" rx="2" ry="2" />
<text  x="1092.65" y="415.5" ></text>
</g>
<g >
<title>pmd_devmap_trans_unstable (1 samples, 0.02%)</title><rect x="1185.5" y="389" width="0.3" height="15.0" fill="rgb(233,18,40)" rx="2" ry="2" />
<text  x="1188.51" y="399.5" ></text>
</g>
<g >
<title>kernel_poison_pages (1 samples, 0.02%)</title><rect x="1179.0" y="325" width="0.3" height="15.0" fill="rgb(221,200,8)" rx="2" ry="2" />
<text  x="1182.02" y="335.5" ></text>
</g>
<g >
<title>memcg_check_events (2 samples, 0.04%)</title><rect x="1183.5" y="357" width="0.5" height="15.0" fill="rgb(242,144,43)" rx="2" ry="2" />
<text  x="1186.51" y="367.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (3 samples, 0.06%)</title><rect x="1148.1" y="373" width="0.7" height="15.0" fill="rgb(226,111,37)" rx="2" ry="2" />
<text  x="1151.06" y="383.5" ></text>
</g>
<g >
<title>alloc_page_buffers (4 samples, 0.08%)</title><rect x="29.2" y="261" width="1.0" height="15.0" fill="rgb(211,229,40)" rx="2" ry="2" />
<text  x="32.22" y="271.5" ></text>
</g>
<g >
<title>alloc_buffer_head (4 samples, 0.08%)</title><rect x="29.2" y="245" width="1.0" height="15.0" fill="rgb(241,21,35)" rx="2" ry="2" />
<text  x="32.22" y="255.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="16.2" y="453" width="0.3" height="15.0" fill="rgb(234,21,47)" rx="2" ry="2" />
<text  x="19.24" y="463.5" ></text>
</g>
<g >
<title>__ext4_get_inode_loc (1 samples, 0.02%)</title><rect x="45.7" y="213" width="0.2" height="15.0" fill="rgb(236,3,32)" rx="2" ry="2" />
<text  x="48.70" y="223.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2 samples, 0.04%)</title><rect x="338.8" y="453" width="0.5" height="15.0" fill="rgb(241,118,2)" rx="2" ry="2" />
<text  x="341.76" y="463.5" ></text>
</g>
<g >
<title>unlock_page (1 samples, 0.02%)</title><rect x="47.7" y="293" width="0.2" height="15.0" fill="rgb(235,40,41)" rx="2" ry="2" />
<text  x="50.69" y="303.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (5 samples, 0.11%)</title><rect x="1150.6" y="325" width="1.2" height="15.0" fill="rgb(251,148,33)" rx="2" ry="2" />
<text  x="1153.56" y="335.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (4 samples, 0.08%)</title><rect x="706.5" y="277" width="1.0" height="15.0" fill="rgb(242,41,49)" rx="2" ry="2" />
<text  x="709.47" y="287.5" ></text>
</g>
<g >
<title>CSV2JSON::CSV2JSON (75 samples, 1.59%)</title><rect x="1087.7" y="469" width="18.7" height="15.0" fill="rgb(253,70,24)" rx="2" ry="2" />
<text  x="1090.65" y="479.5" ></text>
</g>
<g >
<title>alloc_pages_vma (10 samples, 0.21%)</title><rect x="1145.1" y="373" width="2.5" height="15.0" fill="rgb(216,18,18)" rx="2" ry="2" />
<text  x="1148.07" y="383.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="155.3" y="389" width="0.2" height="15.0" fill="rgb(242,55,40)" rx="2" ry="2" />
<text  x="158.28" y="399.5" ></text>
</g>
<g >
<title>main (80 samples, 1.69%)</title><rect x="1087.7" y="485" width="19.9" height="15.0" fill="rgb(234,221,46)" rx="2" ry="2" />
<text  x="1090.65" y="495.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (2 samples, 0.04%)</title><rect x="1164.0" y="485" width="0.5" height="15.0" fill="rgb(245,0,28)" rx="2" ry="2" />
<text  x="1167.04" y="495.5" ></text>
</g>
<g >
<title>do_truncate (6 samples, 0.13%)</title><rect x="23.5" y="357" width="1.5" height="15.0" fill="rgb(225,109,5)" rx="2" ry="2" />
<text  x="26.48" y="367.5" ></text>
</g>
<g >
<title>rwsem_optimistic_spin (4 samples, 0.08%)</title><rect x="1111.4" y="389" width="1.0" height="15.0" fill="rgb(243,199,19)" rx="2" ry="2" />
<text  x="1114.37" y="399.5" ></text>
</g>
<g >
<title>enqueue_task_fair (4 samples, 0.08%)</title><rect x="306.1" y="325" width="1.0" height="15.0" fill="rgb(250,161,20)" rx="2" ry="2" />
<text  x="309.06" y="335.5" ></text>
</g>
<g >
<title>up_write (1 samples, 0.02%)</title><rect x="1132.3" y="437" width="0.3" height="15.0" fill="rgb(211,136,39)" rx="2" ry="2" />
<text  x="1135.34" y="447.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (9 samples, 0.19%)</title><rect x="1149.6" y="469" width="2.2" height="15.0" fill="rgb(208,222,38)" rx="2" ry="2" />
<text  x="1152.56" y="479.5" ></text>
</g>
<g >
<title>kthread_blkcg (1 samples, 0.02%)</title><rect x="1184.0" y="357" width="0.3" height="15.0" fill="rgb(234,221,14)" rx="2" ry="2" />
<text  x="1187.01" y="367.5" ></text>
</g>
<g >
<title>load_elf_binary (4 samples, 0.08%)</title><rect x="1189.0" y="405" width="1.0" height="15.0" fill="rgb(245,101,31)" rx="2" ry="2" />
<text  x="1192.00" y="415.5" ></text>
</g>
<g >
<title>__pte_alloc (1 samples, 0.02%)</title><rect x="1173.3" y="373" width="0.2" height="15.0" fill="rgb(241,27,34)" rx="2" ry="2" />
<text  x="1176.27" y="383.5" ></text>
</g>
<g >
<title>rwsem_spin_on_owner (1 samples, 0.02%)</title><rect x="31.5" y="197" width="0.2" height="15.0" fill="rgb(244,3,4)" rx="2" ry="2" />
<text  x="34.47" y="207.5" ></text>
</g>
<g >
<title>rwsem_spin_on_owner (1 samples, 0.02%)</title><rect x="1112.4" y="389" width="0.2" height="15.0" fill="rgb(253,192,52)" rx="2" ry="2" />
<text  x="1115.37" y="399.5" ></text>
</g>
<g >
<title>down_write_killable (43 samples, 0.91%)</title><rect x="1110.4" y="421" width="10.7" height="15.0" fill="rgb(250,64,23)" rx="2" ry="2" />
<text  x="1113.37" y="431.5" ></text>
</g>
<g >
<title>sync_regs (2 samples, 0.04%)</title><rect x="1148.8" y="485" width="0.5" height="15.0" fill="rgb(251,133,30)" rx="2" ry="2" />
<text  x="1151.81" y="495.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (84 samples, 1.78%)</title><rect x="28.0" y="357" width="20.9" height="15.0" fill="rgb(223,135,53)" rx="2" ry="2" />
<text  x="30.97" y="367.5" ></text>
</g>
<g >
<title>osq_lock (1 samples, 0.02%)</title><rect x="1111.1" y="389" width="0.3" height="15.0" fill="rgb(251,21,27)" rx="2" ry="2" />
<text  x="1114.12" y="399.5" ></text>
</g>
<g >
<title>__pagevec_lru_add_fn (1 samples, 0.02%)</title><rect x="40.2" y="197" width="0.3" height="15.0" fill="rgb(212,45,35)" rx="2" ry="2" />
<text  x="43.21" y="207.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="267.1" y="405" width="0.3" height="15.0" fill="rgb(210,67,49)" rx="2" ry="2" />
<text  x="270.12" y="415.5" ></text>
</g>
<g >
<title>rmqueue (4 samples, 0.08%)</title><rect x="1146.3" y="325" width="1.0" height="15.0" fill="rgb(251,117,21)" rx="2" ry="2" />
<text  x="1149.31" y="335.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="940.1" y="261" width="0.3" height="15.0" fill="rgb(236,184,38)" rx="2" ry="2" />
<text  x="943.12" y="271.5" ></text>
</g>
<g >
<title>__calc_delta (1 samples, 0.02%)</title><rect x="67.4" y="277" width="0.3" height="15.0" fill="rgb(206,141,21)" rx="2" ry="2" />
<text  x="70.41" y="287.5" ></text>
</g>
<g >
<title>do_group_exit (9 samples, 0.19%)</title><rect x="1149.6" y="453" width="2.2" height="15.0" fill="rgb(206,201,24)" rx="2" ry="2" />
<text  x="1152.56" y="463.5" ></text>
</g>
<g >
<title>ext4_inode_csum_set (6 samples, 0.13%)</title><rect x="43.9" y="197" width="1.5" height="15.0" fill="rgb(237,54,36)" rx="2" ry="2" />
<text  x="46.95" y="207.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (1 samples, 0.02%)</title><rect x="1136.3" y="485" width="0.3" height="15.0" fill="rgb(250,49,39)" rx="2" ry="2" />
<text  x="1139.33" y="495.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (5 samples, 0.11%)</title><rect x="779.9" y="341" width="1.2" height="15.0" fill="rgb(234,121,23)" rx="2" ry="2" />
<text  x="782.86" y="351.5" ></text>
</g>
<g >
<title>native_write_msr (4 samples, 0.08%)</title><rect x="707.5" y="165" width="1.0" height="15.0" fill="rgb(234,112,28)" rx="2" ry="2" />
<text  x="710.47" y="175.5" ></text>
</g>
<g >
<title>__GI___libc_open (6 samples, 0.13%)</title><rect x="23.5" y="485" width="1.5" height="15.0" fill="rgb(234,93,32)" rx="2" ry="2" />
<text  x="26.48" y="495.5" ></text>
</g>
<g >
<title>unlink_chunk.isra.0 (24 samples, 0.51%)</title><rect x="977.1" y="485" width="6.0" height="15.0" fill="rgb(253,228,48)" rx="2" ry="2" />
<text  x="980.07" y="495.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.0 (16 samples, 0.34%)</title><rect x="49.4" y="405" width="4.0" height="15.0" fill="rgb(224,7,16)" rx="2" ry="2" />
<text  x="52.44" y="415.5" ></text>
</g>
<g >
<title>do_sys_open (6 samples, 0.13%)</title><rect x="23.5" y="421" width="1.5" height="15.0" fill="rgb(212,95,47)" rx="2" ry="2" />
<text  x="26.48" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::c_str (2 samples, 0.04%)</title><rect x="1104.4" y="453" width="0.5" height="15.0" fill="rgb(234,54,15)" rx="2" ry="2" />
<text  x="1107.38" y="463.5" ></text>
</g>
<g >
<title>__libc_read (26 samples, 0.55%)</title><rect x="53.7" y="485" width="6.5" height="15.0" fill="rgb(226,110,16)" rx="2" ry="2" />
<text  x="56.69" y="495.5" ></text>
</g>
<g >
<title>lru_cache_add (1 samples, 0.02%)</title><rect x="40.2" y="245" width="0.3" height="15.0" fill="rgb(234,203,11)" rx="2" ry="2" />
<text  x="43.21" y="255.5" ></text>
</g>
<g >
<title>do_syscall_64 (4 samples, 0.08%)</title><rect x="1136.6" y="469" width="1.0" height="15.0" fill="rgb(252,191,13)" rx="2" ry="2" />
<text  x="1139.58" y="479.5" ></text>
</g>
<g >
<title>blk_mq_sched_insert_requests (1 samples, 0.02%)</title><rect x="57.9" y="197" width="0.3" height="15.0" fill="rgb(225,56,45)" rx="2" ry="2" />
<text  x="60.93" y="207.5" ></text>
</g>
<g >
<title>_raw_read_lock (2 samples, 0.04%)</title><rect x="30.7" y="245" width="0.5" height="15.0" fill="rgb(215,146,12)" rx="2" ry="2" />
<text  x="33.72" y="255.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="29.5" y="117" width="0.2" height="15.0" fill="rgb(228,170,43)" rx="2" ry="2" />
<text  x="32.47" y="127.5" ></text>
</g>
<g >
<title>PageHuge (1 samples, 0.02%)</title><rect x="36.5" y="245" width="0.2" height="15.0" fill="rgb(225,179,21)" rx="2" ry="2" />
<text  x="39.46" y="255.5" ></text>
</g>
<g >
<title>finish_task_switch (34 samples, 0.72%)</title><rect x="1112.6" y="357" width="8.5" height="15.0" fill="rgb(222,172,23)" rx="2" ry="2" />
<text  x="1115.61" y="367.5" ></text>
</g>
<g >
<title>free_unref_page_commit (1 samples, 0.02%)</title><rect x="23.7" y="245" width="0.3" height="15.0" fill="rgb(244,120,41)" rx="2" ry="2" />
<text  x="26.73" y="255.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void  (2,549 samples, 53.92%)</title><rect x="340.8" y="389" width="636.3" height="15.0" fill="rgb(229,141,31)" rx="2" ry="2" />
<text  x="343.76" y="399.5" >std::__invoke&lt;void </text>
</g>
<g >
<title>CSV2JSON::ThreadingParseDatas (2,410 samples, 50.98%)</title><rect x="340.8" y="357" width="601.6" height="15.0" fill="rgb(247,131,10)" rx="2" ry="2" />
<text  x="343.76" y="367.5" >CSV2JSON::ThreadingParseDatas</text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="305.6" y="357" width="0.2" height="15.0" fill="rgb(233,179,17)" rx="2" ry="2" />
<text  x="308.56" y="367.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.08%)</title><rect x="1189.0" y="485" width="1.0" height="15.0" fill="rgb(231,99,41)" rx="2" ry="2" />
<text  x="1192.00" y="495.5" ></text>
</g>
<g >
<title>mpage_process_page_bufs (1 samples, 0.02%)</title><rect x="1087.4" y="293" width="0.3" height="15.0" fill="rgb(234,43,27)" rx="2" ry="2" />
<text  x="1090.40" y="303.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (5 samples, 0.11%)</title><rect x="706.2" y="325" width="1.3" height="15.0" fill="rgb(223,129,1)" rx="2" ry="2" />
<text  x="709.22" y="335.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1180.8" y="309" width="0.2" height="15.0" fill="rgb(230,131,39)" rx="2" ry="2" />
<text  x="1183.76" y="319.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (2 samples, 0.04%)</title><rect x="38.2" y="213" width="0.5" height="15.0" fill="rgb(249,146,43)" rx="2" ry="2" />
<text  x="41.21" y="223.5" ></text>
</g>
<g >
<title>do_writepages (2 samples, 0.04%)</title><rect x="1087.2" y="325" width="0.5" height="15.0" fill="rgb(214,164,19)" rx="2" ry="2" />
<text  x="1090.15" y="335.5" ></text>
</g>
<g >
<title>get_page_from_freelist (30 samples, 0.63%)</title><rect x="1173.5" y="341" width="7.5" height="15.0" fill="rgb(224,218,41)" rx="2" ry="2" />
<text  x="1176.52" y="351.5" ></text>
</g>
<g >
<title>new_heap (2 samples, 0.04%)</title><rect x="1160.0" y="501" width="0.5" height="15.0" fill="rgb(233,35,53)" rx="2" ry="2" />
<text  x="1163.04" y="511.5" ></text>
</g>
<g >
<title>__vfs_read (22 samples, 0.47%)</title><rect x="53.9" y="389" width="5.5" height="15.0" fill="rgb(244,126,33)" rx="2" ry="2" />
<text  x="56.93" y="399.5" ></text>
</g>
<g >
<title>update_cfs_group (1 samples, 0.02%)</title><rect x="306.8" y="293" width="0.3" height="15.0" fill="rgb(207,19,22)" rx="2" ry="2" />
<text  x="309.81" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (3 samples, 0.06%)</title><rect x="950.6" y="357" width="0.8" height="15.0" fill="rgb(240,121,4)" rx="2" ry="2" />
<text  x="953.61" y="367.5" ></text>
</g>
<g >
<title>__strlen_avx2 (18 samples, 0.38%)</title><rect x="125.1" y="485" width="4.5" height="15.0" fill="rgb(246,108,11)" rx="2" ry="2" />
<text  x="128.08" y="495.5" ></text>
</g>
<g >
<title>ctx_resched (4 samples, 0.08%)</title><rect x="1189.0" y="357" width="1.0" height="15.0" fill="rgb(232,17,12)" rx="2" ry="2" />
<text  x="1192.00" y="367.5" ></text>
</g>
<g >
<title>get_futex_key (6 samples, 0.13%)</title><rect x="297.8" y="389" width="1.5" height="15.0" fill="rgb(225,105,37)" rx="2" ry="2" />
<text  x="300.82" y="399.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.02%)</title><rect x="1131.8" y="373" width="0.3" height="15.0" fill="rgb(242,53,13)" rx="2" ry="2" />
<text  x="1134.84" y="383.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (1 samples, 0.02%)</title><rect x="1141.8" y="485" width="0.3" height="15.0" fill="rgb(243,146,42)" rx="2" ry="2" />
<text  x="1144.82" y="495.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (16 samples, 0.34%)</title><rect x="42.2" y="277" width="4.0" height="15.0" fill="rgb(249,138,17)" rx="2" ry="2" />
<text  x="45.20" y="287.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="1085.4" y="405" width="0.3" height="15.0" fill="rgb(232,53,25)" rx="2" ry="2" />
<text  x="1088.41" y="415.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="35.7" y="69" width="0.3" height="15.0" fill="rgb(208,197,35)" rx="2" ry="2" />
<text  x="38.71" y="79.5" ></text>
</g>
<g >
<title>__x64_sys_futex (57 samples, 1.21%)</title><rect x="295.8" y="437" width="14.3" height="15.0" fill="rgb(227,91,39)" rx="2" ry="2" />
<text  x="298.83" y="447.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="765.1" y="325" width="0.3" height="15.0" fill="rgb(234,209,47)" rx="2" ry="2" />
<text  x="768.13" y="335.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.02%)</title><rect x="309.1" y="277" width="0.2" height="15.0" fill="rgb(206,170,13)" rx="2" ry="2" />
<text  x="312.06" y="287.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="16.2" y="421" width="0.3" height="15.0" fill="rgb(219,72,3)" rx="2" ry="2" />
<text  x="19.24" y="431.5" ></text>
</g>
<g >
<title>schedule (34 samples, 0.72%)</title><rect x="1112.6" y="389" width="8.5" height="15.0" fill="rgb(240,2,31)" rx="2" ry="2" />
<text  x="1115.61" y="399.5" ></text>
</g>
<g >
<title>select_idle_sibling.part.0 (1 samples, 0.02%)</title><rect x="305.8" y="325" width="0.3" height="15.0" fill="rgb(245,168,4)" rx="2" ry="2" />
<text  x="308.81" y="335.5" ></text>
</g>
<g >
<title>ext4_da_map_blocks.constprop.0 (7 samples, 0.15%)</title><rect x="30.5" y="261" width="1.7" height="15.0" fill="rgb(237,18,50)" rx="2" ry="2" />
<text  x="33.47" y="271.5" ></text>
</g>
<g >
<title>_IO_default_xsputn (15 samples, 0.32%)</title><rect x="12.7" y="469" width="3.8" height="15.0" fill="rgb(219,45,40)" rx="2" ry="2" />
<text  x="15.75" y="479.5" ></text>
</g>
<g >
<title>do_syscall_64 (9 samples, 0.19%)</title><rect x="1149.6" y="485" width="2.2" height="15.0" fill="rgb(235,80,6)" rx="2" ry="2" />
<text  x="1152.56" y="495.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="93.4" y="277" width="0.2" height="15.0" fill="rgb(237,195,39)" rx="2" ry="2" />
<text  x="96.38" y="287.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="29.5" y="101" width="0.2" height="15.0" fill="rgb(233,83,5)" rx="2" ry="2" />
<text  x="32.47" y="111.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="707.2" y="245" width="0.3" height="15.0" fill="rgb(232,224,21)" rx="2" ry="2" />
<text  x="710.22" y="255.5" ></text>
</g>
<g >
<title>__x64_sys_futex (4 samples, 0.08%)</title><rect x="1136.6" y="453" width="1.0" height="15.0" fill="rgb(242,90,52)" rx="2" ry="2" />
<text  x="1139.58" y="463.5" ></text>
</g>
<g >
<title>__strchrnul_avx2 (99 samples, 2.09%)</title><rect x="155.5" y="469" width="24.7" height="15.0" fill="rgb(213,195,31)" rx="2" ry="2" />
<text  x="158.53" y="479.5" >_..</text>
</g>
<g >
<title>[C2J] (1 samples, 0.02%)</title><rect x="1092.6" y="453" width="0.3" height="15.0" fill="rgb(206,197,44)" rx="2" ry="2" />
<text  x="1095.64" y="463.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::deallocate (2 samples, 0.04%)</title><rect x="941.6" y="277" width="0.5" height="15.0" fill="rgb(235,218,15)" rx="2" ry="2" />
<text  x="944.62" y="287.5" ></text>
</g>
<g >
<title>std::deque&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::push_back (11 samples, 0.23%)</title><rect x="1089.4" y="421" width="2.7" height="15.0" fill="rgb(211,43,18)" rx="2" ry="2" />
<text  x="1092.40" y="431.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="1106.9" y="357" width="0.2" height="15.0" fill="rgb(247,105,7)" rx="2" ry="2" />
<text  x="1109.87" y="367.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (4 samples, 0.08%)</title><rect x="707.5" y="293" width="1.0" height="15.0" fill="rgb(254,96,16)" rx="2" ry="2" />
<text  x="710.47" y="303.5" ></text>
</g>
<g >
<title>__strlen_avx2 (18 samples, 0.38%)</title><rect x="1094.6" y="437" width="4.5" height="15.0" fill="rgb(224,193,48)" rx="2" ry="2" />
<text  x="1097.64" y="447.5" ></text>
</g>
<g >
<title>new_sync_write (84 samples, 1.78%)</title><rect x="28.0" y="373" width="20.9" height="15.0" fill="rgb(243,136,49)" rx="2" ry="2" />
<text  x="30.97" y="383.5" ></text>
</g>
<g >
<title>rwsem_down_write_slowpath (41 samples, 0.87%)</title><rect x="1110.9" y="405" width="10.2" height="15.0" fill="rgb(224,44,5)" rx="2" ry="2" />
<text  x="1113.87" y="415.5" ></text>
</g>
<g >
<title>block_write_end (6 samples, 0.13%)</title><rect x="46.2" y="277" width="1.5" height="15.0" fill="rgb(229,186,46)" rx="2" ry="2" />
<text  x="49.20" y="287.5" ></text>
</g>
<g >
<title>__blk_mq_try_issue_directly (1 samples, 0.02%)</title><rect x="57.9" y="149" width="0.3" height="15.0" fill="rgb(206,70,30)" rx="2" ry="2" />
<text  x="60.93" y="159.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.08%)</title><rect x="1189.0" y="501" width="1.0" height="15.0" fill="rgb(226,181,24)" rx="2" ry="2" />
<text  x="1192.00" y="511.5" ></text>
</g>
<g >
<title>__close_nocancel (2 samples, 0.04%)</title><rect x="1087.2" y="501" width="0.5" height="15.0" fill="rgb(213,175,36)" rx="2" ry="2" />
<text  x="1090.15" y="511.5" ></text>
</g>
<g >
<title>select_idle_sibling (1 samples, 0.02%)</title><rect x="305.8" y="341" width="0.3" height="15.0" fill="rgb(240,149,13)" rx="2" ry="2" />
<text  x="308.81" y="351.5" ></text>
</g>
<g >
<title>__fsnotify_parent (1 samples, 0.02%)</title><rect x="53.7" y="389" width="0.2" height="15.0" fill="rgb(223,198,15)" rx="2" ry="2" />
<text  x="56.69" y="399.5" ></text>
</g>
<g >
<title>io_schedule (8 samples, 0.17%)</title><rect x="55.9" y="309" width="2.0" height="15.0" fill="rgb(224,137,28)" rx="2" ry="2" />
<text  x="58.93" y="319.5" ></text>
</g>
<g >
<title>page_mapping (1 samples, 0.02%)</title><rect x="47.2" y="229" width="0.2" height="15.0" fill="rgb(227,161,19)" rx="2" ry="2" />
<text  x="50.19" y="239.5" ></text>
</g>
<g >
<title>std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::~pair (1 samples, 0.02%)</title><rect x="976.3" y="357" width="0.3" height="15.0" fill="rgb(221,103,5)" rx="2" ry="2" />
<text  x="979.32" y="367.5" ></text>
</g>
<g >
<title>__set_page_dirty (3 samples, 0.06%)</title><rect x="46.4" y="229" width="0.8" height="15.0" fill="rgb(230,90,53)" rx="2" ry="2" />
<text  x="49.45" y="239.5" ></text>
</g>
<g >
<title>do_anonymous_page (54 samples, 1.14%)</title><rect x="1171.8" y="389" width="13.5" height="15.0" fill="rgb(230,34,49)" rx="2" ry="2" />
<text  x="1174.78" y="399.5" ></text>
</g>
<g >
<title>page_cache_async_readahead (1 samples, 0.02%)</title><rect x="57.9" y="309" width="0.3" height="15.0" fill="rgb(216,113,46)" rx="2" ry="2" />
<text  x="60.93" y="319.5" ></text>
</g>
<g >
<title>tick_sched_timer (2 samples, 0.04%)</title><rect x="707.0" y="261" width="0.5" height="15.0" fill="rgb(212,173,6)" rx="2" ry="2" />
<text  x="709.97" y="271.5" ></text>
</g>
<g >
<title>default_wake_function (1 samples, 0.02%)</title><rect x="155.3" y="229" width="0.2" height="15.0" fill="rgb(249,194,31)" rx="2" ry="2" />
<text  x="158.28" y="239.5" ></text>
</g>
<g >
<title>dequeue_task_fair (3 samples, 0.06%)</title><rect x="66.9" y="325" width="0.8" height="15.0" fill="rgb(246,134,28)" rx="2" ry="2" />
<text  x="69.92" y="335.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.19%)</title><rect x="1149.6" y="501" width="2.2" height="15.0" fill="rgb(242,45,0)" rx="2" ry="2" />
<text  x="1152.56" y="511.5" ></text>
</g>
<g >
<title>__lru_cache_add (7 samples, 0.15%)</title><rect x="1181.3" y="357" width="1.7" height="15.0" fill="rgb(229,111,17)" rx="2" ry="2" />
<text  x="1184.26" y="367.5" ></text>
</g>
<g >
<title>ext4_alloc_da_blocks (2 samples, 0.04%)</title><rect x="1087.2" y="373" width="0.5" height="15.0" fill="rgb(219,207,43)" rx="2" ry="2" />
<text  x="1090.15" y="383.5" ></text>
</g>
<g >
<title>sprintf (11 samples, 0.23%)</title><rect x="781.4" y="341" width="2.7" height="15.0" fill="rgb(235,198,37)" rx="2" ry="2" />
<text  x="784.36" y="351.5" ></text>
</g>
<g >
<title>finish_task_switch (16 samples, 0.34%)</title><rect x="49.4" y="437" width="4.0" height="15.0" fill="rgb(212,87,12)" rx="2" ry="2" />
<text  x="52.44" y="447.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="1180.8" y="213" width="0.2" height="15.0" fill="rgb(219,108,50)" rx="2" ry="2" />
<text  x="1183.76" y="223.5" ></text>
</g>
<g >
<title>do_syscall_64 (97 samples, 2.05%)</title><rect x="1108.4" y="469" width="24.2" height="15.0" fill="rgb(226,109,37)" rx="2" ry="2" />
<text  x="1111.37" y="479.5" >d..</text>
</g>
<g >
<title>may_expand_vm (4 samples, 0.08%)</title><rect x="1121.9" y="421" width="0.9" height="15.0" fill="rgb(211,50,37)" rx="2" ry="2" />
<text  x="1124.85" y="431.5" ></text>
</g>
<g >
<title>ext4_es_insert_delayed_block (2 samples, 0.04%)</title><rect x="31.7" y="245" width="0.5" height="15.0" fill="rgb(231,60,30)" rx="2" ry="2" />
<text  x="34.72" y="255.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="1109.1" y="421" width="0.3" height="15.0" fill="rgb(254,142,19)" rx="2" ry="2" />
<text  x="1112.12" y="431.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (16 samples, 0.34%)</title><rect x="49.4" y="373" width="4.0" height="15.0" fill="rgb(237,41,49)" rx="2" ry="2" />
<text  x="52.44" y="383.5" ></text>
</g>
<g >
<title>do_syscall_64 (23 samples, 0.49%)</title><rect x="53.7" y="453" width="5.7" height="15.0" fill="rgb(237,49,4)" rx="2" ry="2" />
<text  x="56.69" y="463.5" ></text>
</g>
<g >
<title>__ext4_journal_start_sb (1 samples, 0.02%)</title><rect x="28.5" y="293" width="0.2" height="15.0" fill="rgb(226,111,10)" rx="2" ry="2" />
<text  x="31.47" y="303.5" ></text>
</g>
<g >
<title>blk_mq_request_issue_directly (1 samples, 0.02%)</title><rect x="57.9" y="165" width="0.3" height="15.0" fill="rgb(240,146,18)" rx="2" ry="2" />
<text  x="60.93" y="175.5" ></text>
</g>
<g >
<title>ext4_block_write_begin (15 samples, 0.32%)</title><rect x="28.7" y="293" width="3.8" height="15.0" fill="rgb(222,178,8)" rx="2" ry="2" />
<text  x="31.72" y="303.5" ></text>
</g>
<g >
<title>psi_task_change (9 samples, 0.19%)</title><rect x="307.1" y="325" width="2.2" height="15.0" fill="rgb(215,106,16)" rx="2" ry="2" />
<text  x="310.06" y="335.5" ></text>
</g>
<g >
<title>change_pte_range (1 samples, 0.02%)</title><rect x="1125.8" y="373" width="0.3" height="15.0" fill="rgb(237,125,10)" rx="2" ry="2" />
<text  x="1128.85" y="383.5" ></text>
</g>
<g >
<title>std::getline&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (3 samples, 0.06%)</title><rect x="1105.4" y="453" width="0.7" height="15.0" fill="rgb(223,101,39)" rx="2" ry="2" />
<text  x="1108.38" y="463.5" ></text>
</g>
<g >
<title>do_filp_open (6 samples, 0.13%)</title><rect x="23.5" y="405" width="1.5" height="15.0" fill="rgb(217,211,8)" rx="2" ry="2" />
<text  x="26.48" y="415.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.04%)</title><rect x="950.1" y="357" width="0.5" height="15.0" fill="rgb(238,164,31)" rx="2" ry="2" />
<text  x="953.11" y="367.5" ></text>
</g>
<g >
<title>std::queue&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::deque&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::front (11 samples, 0.23%)</title><rect x="933.6" y="341" width="2.8" height="15.0" fill="rgb(226,55,38)" rx="2" ry="2" />
<text  x="936.63" y="351.5" ></text>
</g>
<g >
<title>__do_execve_file.isra.0 (4 samples, 0.08%)</title><rect x="1189.0" y="437" width="1.0" height="15.0" fill="rgb(224,70,14)" rx="2" ry="2" />
<text  x="1192.00" y="447.5" ></text>
</g>
<g >
<title>std::deque&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::begin (6 samples, 0.13%)</title><rect x="934.9" y="309" width="1.5" height="15.0" fill="rgb(215,197,0)" rx="2" ry="2" />
<text  x="937.88" y="319.5" ></text>
</g>
<g >
<title>ext4_mark_inode_dirty (15 samples, 0.32%)</title><rect x="42.5" y="245" width="3.7" height="15.0" fill="rgb(247,219,45)" rx="2" ry="2" />
<text  x="45.45" y="255.5" ></text>
</g>
<g >
<title>get_futex_value_locked (3 samples, 0.06%)</title><rect x="94.9" y="373" width="0.7" height="15.0" fill="rgb(208,119,9)" rx="2" ry="2" />
<text  x="97.87" y="383.5" ></text>
</g>
<g >
<title>mmput (9 samples, 0.19%)</title><rect x="1149.6" y="421" width="2.2" height="15.0" fill="rgb(237,61,48)" rx="2" ry="2" />
<text  x="1152.56" y="431.5" ></text>
</g>
<g >
<title>ext4_da_write_end (30 samples, 0.63%)</title><rect x="40.5" y="309" width="7.4" height="15.0" fill="rgb(227,18,18)" rx="2" ry="2" />
<text  x="43.45" y="319.5" ></text>
</g>
<g >
<title>cs_irq_handler (1 samples, 0.02%)</title><rect x="155.3" y="325" width="0.2" height="15.0" fill="rgb(253,100,7)" rx="2" ry="2" />
<text  x="158.28" y="335.5" ></text>
</g>
<g >
<title>search_binary_handler (4 samples, 0.08%)</title><rect x="1189.0" y="421" width="1.0" height="15.0" fill="rgb(215,203,13)" rx="2" ry="2" />
<text  x="1192.00" y="431.5" ></text>
</g>
<g >
<title>delete_from_page_cache_batch (1 samples, 0.02%)</title><rect x="24.0" y="277" width="0.2" height="15.0" fill="rgb(240,192,13)" rx="2" ry="2" />
<text  x="26.98" y="287.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="267.1" y="389" width="0.3" height="15.0" fill="rgb(248,53,16)" rx="2" ry="2" />
<text  x="270.12" y="399.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void  (2,549 samples, 53.92%)</title><rect x="340.8" y="405" width="636.3" height="15.0" fill="rgb(229,123,6)" rx="2" ry="2" />
<text  x="343.76" y="415.5" >std::thread::_Invoker&lt;std::tuple&lt;void </text>
</g>
<g >
<title>xas_store (1 samples, 0.02%)</title><rect x="39.7" y="229" width="0.3" height="15.0" fill="rgb(231,37,13)" rx="2" ry="2" />
<text  x="42.71" y="239.5" ></text>
</g>
<g >
<title>_int_free (174 samples, 3.68%)</title><rect x="267.4" y="485" width="43.4" height="15.0" fill="rgb(224,24,26)" rx="2" ry="2" />
<text  x="270.37" y="495.5" >_int..</text>
</g>
<g >
<title>down_read_trylock (2 samples, 0.04%)</title><rect x="1166.8" y="421" width="0.5" height="15.0" fill="rgb(247,147,41)" rx="2" ry="2" />
<text  x="1169.78" y="431.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.04%)</title><rect x="1087.2" y="485" width="0.5" height="15.0" fill="rgb(222,150,22)" rx="2" ry="2" />
<text  x="1090.15" y="495.5" ></text>
</g>
<g >
<title>page_remove_rmap (2 samples, 0.04%)</title><rect x="1150.1" y="325" width="0.5" height="15.0" fill="rgb(235,225,7)" rx="2" ry="2" />
<text  x="1153.06" y="335.5" ></text>
</g>
<g >
<title>jbd2_journal_dirty_metadata (1 samples, 0.02%)</title><rect x="43.7" y="181" width="0.2" height="15.0" fill="rgb(211,143,38)" rx="2" ry="2" />
<text  x="46.70" y="191.5" ></text>
</g>
<g >
<title>schedule (4 samples, 0.08%)</title><rect x="1136.6" y="389" width="1.0" height="15.0" fill="rgb(254,187,35)" rx="2" ry="2" />
<text  x="1139.58" y="399.5" ></text>
</g>
<g >
<title>std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::~pair (3 samples, 0.06%)</title><rect x="932.4" y="341" width="0.7" height="15.0" fill="rgb(249,172,52)" rx="2" ry="2" />
<text  x="935.38" y="351.5" ></text>
</g>
<g >
<title>gen8_gt_irq_handler (1 samples, 0.02%)</title><rect x="155.3" y="341" width="0.2" height="15.0" fill="rgb(220,135,22)" rx="2" ry="2" />
<text  x="158.28" y="351.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (1 samples, 0.02%)</title><rect x="37.7" y="229" width="0.3" height="15.0" fill="rgb(230,149,35)" rx="2" ry="2" />
<text  x="40.71" y="239.5" ></text>
</g>
<g >
<title>vfs_write (85 samples, 1.80%)</title><rect x="28.0" y="405" width="21.2" height="15.0" fill="rgb(246,85,5)" rx="2" ry="2" />
<text  x="30.97" y="415.5" ></text>
</g>
<g >
<title>do_futex (4 samples, 0.08%)</title><rect x="1136.6" y="437" width="1.0" height="15.0" fill="rgb(213,137,20)" rx="2" ry="2" />
<text  x="1139.58" y="447.5" ></text>
</g>
<g >
<title>rmqueue (7 samples, 0.15%)</title><rect x="1179.3" y="325" width="1.7" height="15.0" fill="rgb(232,71,44)" rx="2" ry="2" />
<text  x="1182.27" y="335.5" ></text>
</g>
<g >
<title>mem_cgroup_from_task (1 samples, 0.02%)</title><rect x="1185.8" y="421" width="0.2" height="15.0" fill="rgb(232,78,52)" rx="2" ry="2" />
<text  x="1188.76" y="431.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (136 samples, 2.88%)</title><rect x="62.4" y="469" width="34.0" height="15.0" fill="rgb(238,32,12)" rx="2" ry="2" />
<text  x="65.42" y="479.5" >en..</text>
</g>
<g >
<title>_int_malloc (47 samples, 0.99%)</title><rect x="1137.6" y="501" width="11.7" height="15.0" fill="rgb(242,80,51)" rx="2" ry="2" />
<text  x="1140.58" y="511.5" ></text>
</g>
<g >
<title>mem_cgroup_uncharge_list (1 samples, 0.02%)</title><rect x="1151.6" y="277" width="0.2" height="15.0" fill="rgb(206,141,25)" rx="2" ry="2" />
<text  x="1154.56" y="287.5" ></text>
</g>
<g >
<title>std::queue&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::deque&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::empty (2 samples, 0.04%)</title><rect x="976.6" y="357" width="0.5" height="15.0" fill="rgb(247,156,1)" rx="2" ry="2" />
<text  x="979.57" y="367.5" ></text>
</g>
<g >
<title>std::istream::sentry::sentry (1 samples, 0.02%)</title><rect x="340.5" y="485" width="0.3" height="15.0" fill="rgb(212,146,12)" rx="2" ry="2" />
<text  x="343.51" y="495.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="49.2" y="469" width="0.2" height="15.0" fill="rgb(252,229,11)" rx="2" ry="2" />
<text  x="52.19" y="479.5" ></text>
</g>
<g >
<title>handle_mm_fault (4 samples, 0.08%)</title><rect x="1106.6" y="389" width="1.0" height="15.0" fill="rgb(233,186,23)" rx="2" ry="2" />
<text  x="1109.62" y="399.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1180.8" y="293" width="0.2" height="15.0" fill="rgb(218,132,11)" rx="2" ry="2" />
<text  x="1183.76" y="303.5" ></text>
</g>
<g >
<title>[unknown] (3,898 samples, 82.46%)</title><rect x="10.0" y="501" width="973.1" height="15.0" fill="rgb(243,3,11)" rx="2" ry="2" />
<text  x="13.00" y="511.5" >[unknown]</text>
</g>
<g >
<title>pagevec_lru_move_fn (7 samples, 0.15%)</title><rect x="1181.3" y="341" width="1.7" height="15.0" fill="rgb(250,5,37)" rx="2" ry="2" />
<text  x="1184.26" y="351.5" ></text>
</g>
<g >
<title>native_write_msr (4 samples, 0.08%)</title><rect x="1136.6" y="277" width="1.0" height="15.0" fill="rgb(251,58,35)" rx="2" ry="2" />
<text  x="1139.58" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::destroy&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="942.1" y="277" width="0.3" height="15.0" fill="rgb(233,89,11)" rx="2" ry="2" />
<text  x="945.12" y="287.5" ></text>
</g>
<g >
<title>down_read (1 samples, 0.02%)</title><rect x="31.5" y="245" width="0.2" height="15.0" fill="rgb(222,183,7)" rx="2" ry="2" />
<text  x="34.47" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (33 samples, 0.70%)</title><rect x="784.1" y="341" width="8.2" height="15.0" fill="rgb(249,0,12)" rx="2" ry="2" />
<text  x="787.10" y="351.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (3 samples, 0.06%)</title><rect x="1091.1" y="389" width="0.8" height="15.0" fill="rgb(214,53,13)" rx="2" ry="2" />
<text  x="1094.15" y="399.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="305.1" y="357" width="0.2" height="15.0" fill="rgb(227,202,51)" rx="2" ry="2" />
<text  x="308.06" y="367.5" ></text>
</g>
<g >
<title>x86_pmu_enable (32 samples, 0.68%)</title><rect x="1113.1" y="309" width="8.0" height="15.0" fill="rgb(238,59,20)" rx="2" ry="2" />
<text  x="1116.11" y="319.5" ></text>
</g>
<g >
<title>do_anonymous_page (1 samples, 0.02%)</title><rect x="1160.3" y="389" width="0.2" height="15.0" fill="rgb(218,26,27)" rx="2" ry="2" />
<text  x="1163.29" y="399.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.0 (8 samples, 0.17%)</title><rect x="55.9" y="229" width="2.0" height="15.0" fill="rgb(254,119,44)" rx="2" ry="2" />
<text  x="58.93" y="239.5" ></text>
</g>
<g >
<title>alloc_pages_vma (31 samples, 0.66%)</title><rect x="1173.5" y="373" width="7.8" height="15.0" fill="rgb(212,111,8)" rx="2" ry="2" />
<text  x="1176.52" y="383.5" ></text>
</g>
<g >
<title>perf_iterate_ctx (5 samples, 0.11%)</title><rect x="1128.3" y="373" width="1.3" height="15.0" fill="rgb(232,119,28)" rx="2" ry="2" />
<text  x="1131.34" y="383.5" ></text>
</g>
<g >
<title>up_write (1 samples, 0.02%)</title><rect x="1131.1" y="389" width="0.2" height="15.0" fill="rgb(227,150,0)" rx="2" ry="2" />
<text  x="1134.09" y="399.5" ></text>
</g>
<g >
<title>__lru_cache_add (1 samples, 0.02%)</title><rect x="40.2" y="229" width="0.3" height="15.0" fill="rgb(234,12,50)" rx="2" ry="2" />
<text  x="43.21" y="239.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (22 samples, 0.47%)</title><rect x="53.9" y="357" width="5.5" height="15.0" fill="rgb(206,161,36)" rx="2" ry="2" />
<text  x="56.93" y="367.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (15 samples, 0.32%)</title><rect x="32.7" y="229" width="3.8" height="15.0" fill="rgb(236,168,46)" rx="2" ry="2" />
<text  x="35.72" y="239.5" ></text>
</g>
<g >
<title>x86_pmu_enable (16 samples, 0.34%)</title><rect x="49.4" y="389" width="4.0" height="15.0" fill="rgb(212,57,9)" rx="2" ry="2" />
<text  x="52.44" y="399.5" ></text>
</g>
<g >
<title>try_charge (3 samples, 0.06%)</title><rect x="38.7" y="213" width="0.8" height="15.0" fill="rgb(229,72,3)" rx="2" ry="2" />
<text  x="41.71" y="223.5" ></text>
</g>
<g >
<title>cpuacct_charge (1 samples, 0.02%)</title><rect x="765.1" y="197" width="0.3" height="15.0" fill="rgb(214,116,44)" rx="2" ry="2" />
<text  x="768.13" y="207.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="293.8" y="437" width="0.3" height="15.0" fill="rgb(227,187,51)" rx="2" ry="2" />
<text  x="296.83" y="447.5" ></text>
</g>
<g >
<title>do_futex (1 samples, 0.02%)</title><rect x="310.1" y="437" width="0.2" height="15.0" fill="rgb(236,165,18)" rx="2" ry="2" />
<text  x="313.06" y="447.5" ></text>
</g>
<g >
<title>native_write_msr (4 samples, 0.08%)</title><rect x="1189.0" y="293" width="1.0" height="15.0" fill="rgb(205,140,38)" rx="2" ry="2" />
<text  x="1192.00" y="303.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void  (2,549 samples, 53.92%)</title><rect x="340.8" y="373" width="636.3" height="15.0" fill="rgb(206,201,29)" rx="2" ry="2" />
<text  x="343.76" y="383.5" >std::__invoke_impl&lt;void, void </text>
</g>
<g >
<title>__schedule (4 samples, 0.08%)</title><rect x="1136.6" y="373" width="1.0" height="15.0" fill="rgb(248,85,36)" rx="2" ry="2" />
<text  x="1139.58" y="383.5" ></text>
</g>
<g >
<title>native_write_msr (96 samples, 2.03%)</title><rect x="69.4" y="261" width="24.0" height="15.0" fill="rgb(211,210,5)" rx="2" ry="2" />
<text  x="72.41" y="271.5" >n..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (84 samples, 1.78%)</title><rect x="312.6" y="485" width="20.9" height="15.0" fill="rgb(207,14,35)" rx="2" ry="2" />
<text  x="315.55" y="495.5" ></text>
</g>
<g >
<title>idle_cpu (1 samples, 0.02%)</title><rect x="35.7" y="37" width="0.3" height="15.0" fill="rgb(228,58,26)" rx="2" ry="2" />
<text  x="38.71" y="47.5" ></text>
</g>
<g >
<title>page_mapping (1 samples, 0.02%)</title><rect x="47.4" y="245" width="0.3" height="15.0" fill="rgb(224,66,15)" rx="2" ry="2" />
<text  x="50.44" y="255.5" ></text>
</g>
<g >
<title>xas_store (1 samples, 0.02%)</title><rect x="24.0" y="261" width="0.2" height="15.0" fill="rgb(249,208,46)" rx="2" ry="2" />
<text  x="26.98" y="271.5" ></text>
</g>
<g >
<title>do_mprotect_pkey (95 samples, 2.01%)</title><rect x="1108.6" y="437" width="23.7" height="15.0" fill="rgb(237,172,27)" rx="2" ry="2" />
<text  x="1111.62" y="447.5" >d..</text>
</g>
<g >
<title>__vfs_write (84 samples, 1.78%)</title><rect x="28.0" y="389" width="20.9" height="15.0" fill="rgb(223,222,4)" rx="2" ry="2" />
<text  x="30.97" y="399.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="35.7" y="149" width="0.3" height="15.0" fill="rgb(254,45,9)" rx="2" ry="2" />
<text  x="38.71" y="159.5" ></text>
</g>
<g >
<title>__x64_sys_execve (4 samples, 0.08%)</title><rect x="1189.0" y="453" width="1.0" height="15.0" fill="rgb(252,190,13)" rx="2" ry="2" />
<text  x="1192.00" y="463.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::~basic_filebuf (17 samples, 0.36%)</title><rect x="336.3" y="485" width="4.2" height="15.0" fill="rgb(226,137,1)" rx="2" ry="2" />
<text  x="339.27" y="495.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (8 samples, 0.17%)</title><rect x="55.9" y="245" width="2.0" height="15.0" fill="rgb(252,193,24)" rx="2" ry="2" />
<text  x="58.93" y="255.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (10 samples, 0.21%)</title><rect x="130.3" y="469" width="2.5" height="15.0" fill="rgb(210,122,1)" rx="2" ry="2" />
<text  x="133.32" y="479.5" ></text>
</g>
<g >
<title>blk_finish_plug (1 samples, 0.02%)</title><rect x="57.9" y="245" width="0.3" height="15.0" fill="rgb(238,190,13)" rx="2" ry="2" />
<text  x="60.93" y="255.5" ></text>
</g>
<g >
<title>wake_up_q (1 samples, 0.02%)</title><rect x="1131.8" y="389" width="0.3" height="15.0" fill="rgb(250,10,28)" rx="2" ry="2" />
<text  x="1134.84" y="399.5" ></text>
</g>
<g >
<title>do_page_fault (4 samples, 0.08%)</title><rect x="1106.6" y="437" width="1.0" height="15.0" fill="rgb(226,53,51)" rx="2" ry="2" />
<text  x="1109.62" y="447.5" ></text>
</g>
<g >
<title>mprotect_fixup (35 samples, 0.74%)</title><rect x="1122.8" y="421" width="8.8" height="15.0" fill="rgb(230,209,19)" rx="2" ry="2" />
<text  x="1125.85" y="431.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="1160.3" y="341" width="0.2" height="15.0" fill="rgb(238,193,34)" rx="2" ry="2" />
<text  x="1163.29" y="351.5" ></text>
</g>
<g >
<title>create_empty_buffers (5 samples, 0.11%)</title><rect x="29.0" y="277" width="1.2" height="15.0" fill="rgb(237,3,26)" rx="2" ry="2" />
<text  x="31.97" y="287.5" ></text>
</g>
<g >
<title>__pagevec_release (1 samples, 0.02%)</title><rect x="23.7" y="277" width="0.3" height="15.0" fill="rgb(245,190,6)" rx="2" ry="2" />
<text  x="26.73" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator[] (318 samples, 6.73%)</title><rect x="831.3" y="341" width="79.4" height="15.0" fill="rgb(236,54,0)" rx="2" ry="2" />
<text  x="834.28" y="351.5" >std::__cx..</text>
</g>
<g >
<title>ext4_mark_iloc_dirty (13 samples, 0.28%)</title><rect x="42.5" y="229" width="3.2" height="15.0" fill="rgb(208,7,26)" rx="2" ry="2" />
<text  x="45.45" y="239.5" ></text>
</g>
<g >
<title>page_counter_cancel (1 samples, 0.02%)</title><rect x="1151.6" y="229" width="0.2" height="15.0" fill="rgb(212,133,28)" rx="2" ry="2" />
<text  x="1154.56" y="239.5" ></text>
</g>
<g >
<title>truncate_cleanup_page (3 samples, 0.06%)</title><rect x="24.2" y="277" width="0.8" height="15.0" fill="rgb(217,159,5)" rx="2" ry="2" />
<text  x="27.23" y="287.5" ></text>
</g>
<g >
<title>std::deque&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::pop_front (2 samples, 0.04%)</title><rect x="929.9" y="341" width="0.5" height="15.0" fill="rgb(212,206,23)" rx="2" ry="2" />
<text  x="932.89" y="351.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (4 samples, 0.08%)</title><rect x="707.5" y="229" width="1.0" height="15.0" fill="rgb(209,123,40)" rx="2" ry="2" />
<text  x="710.47" y="239.5" ></text>
</g>
<g >
<title>__brk (1 samples, 0.02%)</title><rect x="49.2" y="485" width="0.2" height="15.0" fill="rgb(247,151,43)" rx="2" ry="2" />
<text  x="52.19" y="495.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (11 samples, 0.23%)</title><rect x="10.0" y="485" width="2.7" height="15.0" fill="rgb(240,96,40)" rx="2" ry="2" />
<text  x="13.00" y="495.5" ></text>
</g>
</g>
</svg>
