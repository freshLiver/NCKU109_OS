<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="2134" onload="init(evt)" viewBox="0 0 1200 2134" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="2134.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="2117" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="2117" > </text>
<g id="frames">
<g >
<title>__vfs_write (85 samples, 3.18%)</title><rect x="31.2" y="1941" width="37.4" height="15.0" fill="rgb(248,51,1)" rx="2" ry="2" />
<text  x="34.17" y="1951.5" >__v..</text>
</g>
<g >
<title>get_futex_value_locked (1 samples, 0.04%)</title><rect x="86.3" y="1925" width="0.4" height="15.0" fill="rgb(216,143,11)" rx="2" ry="2" />
<text  x="89.29" y="1935.5" ></text>
</g>
<g >
<title>__x64_sys_execve (1 samples, 0.04%)</title><rect x="332.3" y="2005" width="0.5" height="15.0" fill="rgb(238,216,49)" rx="2" ry="2" />
<text  x="335.34" y="2015.5" ></text>
</g>
<g >
<title>__lru_cache_add (3 samples, 0.11%)</title><rect x="1170.6" y="1925" width="1.3" height="15.0" fill="rgb(232,135,5)" rx="2" ry="2" />
<text  x="1173.60" y="1935.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.04%)</title><rect x="810.8" y="1893" width="0.4" height="15.0" fill="rgb(226,179,28)" rx="2" ry="2" />
<text  x="813.78" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="2005" width="0.4" height="15.0" fill="rgb(243,128,34)" rx="2" ry="2" />
<text  x="16.09" y="2015.5" ></text>
</g>
<g >
<title>__x64_sys_openat (12 samples, 0.45%)</title><rect x="22.8" y="1989" width="5.3" height="15.0" fill="rgb(254,188,22)" rx="2" ry="2" />
<text  x="25.79" y="1999.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::thread::_State, std::default_delete&lt;std::thread::_State&gt; &gt;::~unique_ptr (1 samples, 0.04%)</title><rect x="13.1" y="213" width="0.4" height="15.0" fill="rgb(251,35,29)" rx="2" ry="2" />
<text  x="16.09" y="223.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="517" width="0.4" height="15.0" fill="rgb(228,197,50)" rx="2" ry="2" />
<text  x="16.09" y="527.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (1 samples, 0.04%)</title><rect x="62.0" y="1749" width="0.5" height="15.0" fill="rgb(237,176,1)" rx="2" ry="2" />
<text  x="65.03" y="1759.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.0 (4 samples, 0.15%)</title><rect x="1074.9" y="1733" width="1.8" height="15.0" fill="rgb(214,194,25)" rx="2" ry="2" />
<text  x="1077.91" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="965" width="0.4" height="15.0" fill="rgb(209,169,0)" rx="2" ry="2" />
<text  x="16.09" y="975.5" ></text>
</g>
<g >
<title>path_openat (12 samples, 0.45%)</title><rect x="22.8" y="1941" width="5.3" height="15.0" fill="rgb(237,110,30)" rx="2" ry="2" />
<text  x="25.79" y="1951.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.04%)</title><rect x="1108.9" y="1941" width="0.4" height="15.0" fill="rgb(247,23,4)" rx="2" ry="2" />
<text  x="1111.86" y="1951.5" ></text>
</g>
<g >
<title>change_pte_range (2 samples, 0.07%)</title><rect x="1111.1" y="1925" width="0.9" height="15.0" fill="rgb(221,191,16)" rx="2" ry="2" />
<text  x="1114.07" y="1935.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (9 samples, 0.34%)</title><rect x="962.5" y="1909" width="3.9" height="15.0" fill="rgb(253,69,25)" rx="2" ry="2" />
<text  x="965.47" y="1919.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::max_size (1 samples, 0.04%)</title><rect x="1083.7" y="1877" width="0.5" height="15.0" fill="rgb(237,143,34)" rx="2" ry="2" />
<text  x="1086.73" y="1887.5" ></text>
</g>
<g >
<title>__strlen_avx2 (11 samples, 0.41%)</title><rect x="133.9" y="2037" width="4.9" height="15.0" fill="rgb(209,211,9)" rx="2" ry="2" />
<text  x="136.91" y="2047.5" ></text>
</g>
<g >
<title>__schedule (4 samples, 0.15%)</title><rect x="799.3" y="1813" width="1.8" height="15.0" fill="rgb(246,149,6)" rx="2" ry="2" />
<text  x="802.31" y="1823.5" ></text>
</g>
<g >
<title>__pagevec_lru_add_fn (1 samples, 0.04%)</title><rect x="49.2" y="1749" width="0.5" height="15.0" fill="rgb(228,80,5)" rx="2" ry="2" />
<text  x="52.25" y="1759.5" ></text>
</g>
<g >
<title>__x64_sys_write (1 samples, 0.04%)</title><rect x="29.8" y="2005" width="0.5" height="15.0" fill="rgb(209,51,29)" rx="2" ry="2" />
<text  x="32.84" y="2015.5" ></text>
</g>
<g >
<title>mem_cgroup_update_lru_size (1 samples, 0.04%)</title><rect x="22.8" y="1813" width="0.4" height="15.0" fill="rgb(229,71,30)" rx="2" ry="2" />
<text  x="25.79" y="1823.5" ></text>
</g>
<g >
<title>_IO_str_init_static_internal (1 samples, 0.04%)</title><rect x="22.3" y="2037" width="0.5" height="15.0" fill="rgb(214,125,52)" rx="2" ry="2" />
<text  x="25.35" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="709" width="0.4" height="15.0" fill="rgb(235,29,45)" rx="2" ry="2" />
<text  x="16.09" y="719.5" ></text>
</g>
<g >
<title>do_filp_open (12 samples, 0.45%)</title><rect x="22.8" y="1957" width="5.3" height="15.0" fill="rgb(243,115,33)" rx="2" ry="2" />
<text  x="25.79" y="1967.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (4 samples, 0.15%)</title><rect x="77.5" y="1797" width="1.7" height="15.0" fill="rgb(227,43,30)" rx="2" ry="2" />
<text  x="80.47" y="1807.5" ></text>
</g>
<g >
<title>_IO_old_init (3 samples, 0.11%)</title><rect x="20.6" y="2037" width="1.3" height="15.0" fill="rgb(235,64,47)" rx="2" ry="2" />
<text  x="23.58" y="2047.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (1 samples, 0.04%)</title><rect x="13.1" y="101" width="0.4" height="15.0" fill="rgb(245,20,17)" rx="2" ry="2" />
<text  x="16.09" y="111.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.45%)</title><rect x="22.8" y="2021" width="5.3" height="15.0" fill="rgb(226,82,0)" rx="2" ry="2" />
<text  x="25.79" y="2031.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (91 samples, 3.40%)</title><rect x="29.4" y="2021" width="40.1" height="15.0" fill="rgb(216,97,33)" rx="2" ry="2" />
<text  x="32.40" y="2031.5" >ent..</text>
</g>
<g >
<title>try_charge (1 samples, 0.04%)</title><rect x="1141.1" y="1893" width="0.4" height="15.0" fill="rgb(236,171,45)" rx="2" ry="2" />
<text  x="1144.05" y="1903.5" ></text>
</g>
<g >
<title>__close_nocancel (9 samples, 0.34%)</title><rect x="1072.7" y="2053" width="4.0" height="15.0" fill="rgb(207,11,41)" rx="2" ry="2" />
<text  x="1075.71" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="277" width="0.4" height="15.0" fill="rgb(229,153,6)" rx="2" ry="2" />
<text  x="16.09" y="287.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.04%)</title><rect x="786.1" y="1797" width="0.4" height="15.0" fill="rgb(224,103,9)" rx="2" ry="2" />
<text  x="789.08" y="1807.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void  (1,359 samples, 50.78%)</title><rect x="369.8" y="1989" width="599.3" height="15.0" fill="rgb(250,62,19)" rx="2" ry="2" />
<text  x="372.82" y="1999.5" >std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void </text>
</g>
<g >
<title>page_mapping (1 samples, 0.04%)</title><rect x="1180.7" y="1845" width="0.5" height="15.0" fill="rgb(239,205,43)" rx="2" ry="2" />
<text  x="1183.74" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="261" width="0.4" height="15.0" fill="rgb(239,61,47)" rx="2" ry="2" />
<text  x="16.09" y="271.5" ></text>
</g>
<g >
<title>do_group_exit (15 samples, 0.56%)</title><rect x="1144.1" y="2005" width="6.7" height="15.0" fill="rgb(230,174,3)" rx="2" ry="2" />
<text  x="1147.14" y="2015.5" ></text>
</g>
<g >
<title>[C2J] (110 samples, 4.11%)</title><rect x="738.0" y="1893" width="48.5" height="15.0" fill="rgb(209,212,25)" rx="2" ry="2" />
<text  x="741.02" y="1903.5" >[C2J]</text>
</g>
<g >
<title>_IO_file_xsputn@@GLIBC_2.2.5 (3 samples, 0.11%)</title><rect x="1087.3" y="1989" width="1.3" height="15.0" fill="rgb(211,140,17)" rx="2" ry="2" />
<text  x="1090.26" y="1999.5" ></text>
</g>
<g >
<title>load_elf_binary (1 samples, 0.04%)</title><rect x="332.3" y="1957" width="0.5" height="15.0" fill="rgb(251,54,30)" rx="2" ry="2" />
<text  x="335.34" y="1967.5" ></text>
</g>
<g >
<title>alloc_pages_current (1 samples, 0.04%)</title><rect x="50.1" y="1813" width="0.5" height="15.0" fill="rgb(235,203,20)" rx="2" ry="2" />
<text  x="53.13" y="1823.5" ></text>
</g>
<g >
<title>std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::~pair (2 samples, 0.07%)</title><rect x="931.6" y="1893" width="0.9" height="15.0" fill="rgb(230,91,22)" rx="2" ry="2" />
<text  x="934.60" y="1903.5" ></text>
</g>
<g >
<title>_int_free (103 samples, 3.85%)</title><rect x="286.9" y="2037" width="45.4" height="15.0" fill="rgb(220,24,19)" rx="2" ry="2" />
<text  x="289.92" y="2047.5" >_int..</text>
</g>
<g >
<title>__ext4_get_inode_loc (1 samples, 0.04%)</title><rect x="53.7" y="1781" width="0.4" height="15.0" fill="rgb(243,203,41)" rx="2" ry="2" />
<text  x="56.65" y="1791.5" ></text>
</g>
<g >
<title>__libc_read (20 samples, 0.75%)</title><rect x="71.7" y="2037" width="8.9" height="15.0" fill="rgb(213,152,1)" rx="2" ry="2" />
<text  x="74.73" y="2047.5" ></text>
</g>
<g >
<title>try_to_release_page (2 samples, 0.07%)</title><rect x="26.8" y="1781" width="0.8" height="15.0" fill="rgb(205,176,46)" rx="2" ry="2" />
<text  x="29.76" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="1061" width="0.4" height="15.0" fill="rgb(238,155,48)" rx="2" ry="2" />
<text  x="16.09" y="1071.5" ></text>
</g>
<g >
<title>page_mapping (1 samples, 0.04%)</title><rect x="49.2" y="1733" width="0.5" height="15.0" fill="rgb(250,30,37)" rx="2" ry="2" />
<text  x="52.25" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="1749" width="0.4" height="15.0" fill="rgb(252,130,12)" rx="2" ry="2" />
<text  x="16.09" y="1759.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (32 samples, 1.20%)</title><rect x="833.7" y="1893" width="14.1" height="15.0" fill="rgb(249,112,13)" rx="2" ry="2" />
<text  x="836.71" y="1903.5" ></text>
</g>
<g >
<title>___slab_alloc (1 samples, 0.04%)</title><rect x="35.1" y="1749" width="0.5" height="15.0" fill="rgb(250,42,42)" rx="2" ry="2" />
<text  x="38.13" y="1759.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::max_size (1 samples, 0.04%)</title><rect x="1083.7" y="1893" width="0.5" height="15.0" fill="rgb(223,14,48)" rx="2" ry="2" />
<text  x="1086.73" y="1903.5" ></text>
</g>
<g >
<title>std::operator==&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;&amp;, std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*&gt; (2 samples, 0.07%)</title><rect x="932.5" y="1861" width="0.9" height="15.0" fill="rgb(238,124,38)" rx="2" ry="2" />
<text  x="935.48" y="1871.5" ></text>
</g>
<g >
<title>alloc_pages_vma (10 samples, 0.37%)</title><rect x="1134.0" y="1925" width="4.4" height="15.0" fill="rgb(227,180,43)" rx="2" ry="2" />
<text  x="1137.00" y="1935.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;&amp;, std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*&gt;::operator* (1 samples, 0.04%)</title><rect x="933.8" y="1877" width="0.4" height="15.0" fill="rgb(254,0,28)" rx="2" ry="2" />
<text  x="936.80" y="1887.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (4 samples, 0.15%)</title><rect x="909.6" y="1845" width="1.7" height="15.0" fill="rgb(247,184,22)" rx="2" ry="2" />
<text  x="912.55" y="1855.5" ></text>
</g>
<g >
<title>std::deque&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::begin (3 samples, 0.11%)</title><rect x="934.7" y="1861" width="1.3" height="15.0" fill="rgb(215,183,40)" rx="2" ry="2" />
<text  x="937.69" y="1871.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.0 (4 samples, 0.15%)</title><rect x="70.0" y="1957" width="1.7" height="15.0" fill="rgb(215,180,29)" rx="2" ry="2" />
<text  x="72.97" y="1967.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (13 samples, 0.49%)</title><rect x="52.8" y="1829" width="5.7" height="15.0" fill="rgb(249,100,41)" rx="2" ry="2" />
<text  x="55.77" y="1839.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (4 samples, 0.15%)</title><rect x="799.3" y="1781" width="1.8" height="15.0" fill="rgb(225,54,33)" rx="2" ry="2" />
<text  x="802.31" y="1791.5" ></text>
</g>
<g >
<title>lru_cache_add_active_or_unevictable (5 samples, 0.19%)</title><rect x="1179.9" y="1925" width="2.2" height="15.0" fill="rgb(205,137,38)" rx="2" ry="2" />
<text  x="1182.86" y="1935.5" ></text>
</g>
<g >
<title>sync_regs (4 samples, 0.15%)</title><rect x="1142.4" y="2037" width="1.7" height="15.0" fill="rgb(237,173,31)" rx="2" ry="2" />
<text  x="1145.38" y="2047.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (106 samples, 3.96%)</title><rect x="86.7" y="2037" width="46.8" height="15.0" fill="rgb(244,30,33)" rx="2" ry="2" />
<text  x="89.73" y="2047.5" >__me..</text>
</g>
<g >
<title>_IO_no_init (1 samples, 0.04%)</title><rect x="20.1" y="2037" width="0.5" height="15.0" fill="rgb(248,42,46)" rx="2" ry="2" />
<text  x="23.14" y="2047.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="332.3" y="2021" width="0.5" height="15.0" fill="rgb(228,229,46)" rx="2" ry="2" />
<text  x="335.34" y="2031.5" ></text>
</g>
<g >
<title>try_to_free_buffers (2 samples, 0.07%)</title><rect x="26.8" y="1733" width="0.8" height="15.0" fill="rgb(224,72,31)" rx="2" ry="2" />
<text  x="29.76" y="1743.5" ></text>
</g>
<g >
<title>ext4_da_get_block_prep (4 samples, 0.15%)</title><rect x="36.5" y="1829" width="1.7" height="15.0" fill="rgb(244,104,14)" rx="2" ry="2" />
<text  x="39.46" y="1839.5" ></text>
</g>
<g >
<title>__vfs_read (1 samples, 0.04%)</title><rect x="71.7" y="1957" width="0.5" height="15.0" fill="rgb(248,76,49)" rx="2" ry="2" />
<text  x="74.73" y="1967.5" ></text>
</g>
<g >
<title>xas_start (1 samples, 0.04%)</title><rect x="50.6" y="1797" width="0.4" height="15.0" fill="rgb(220,149,23)" rx="2" ry="2" />
<text  x="53.57" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="357" width="0.4" height="15.0" fill="rgb(247,154,14)" rx="2" ry="2" />
<text  x="16.09" y="367.5" ></text>
</g>
<g >
<title>__count_memcg_events (1 samples, 0.04%)</title><rect x="48.8" y="1749" width="0.4" height="15.0" fill="rgb(209,44,13)" rx="2" ry="2" />
<text  x="51.80" y="1759.5" ></text>
</g>
<g >
<title>add_to_page_cache_lru (6 samples, 0.22%)</title><rect x="47.5" y="1813" width="2.6" height="15.0" fill="rgb(207,85,17)" rx="2" ry="2" />
<text  x="50.48" y="1823.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (5 samples, 0.19%)</title><rect x="1179.9" y="1893" width="2.2" height="15.0" fill="rgb(249,175,8)" rx="2" ry="2" />
<text  x="1182.86" y="1903.5" ></text>
</g>
<g >
<title>__update_load_avg_se (2 samples, 0.07%)</title><rect x="83.2" y="1829" width="0.9" height="15.0" fill="rgb(214,213,47)" rx="2" ry="2" />
<text  x="86.20" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="1317" width="0.4" height="15.0" fill="rgb(252,197,46)" rx="2" ry="2" />
<text  x="16.09" y="1327.5" ></text>
</g>
<g >
<title>native_write_msr (4 samples, 0.15%)</title><rect x="70.0" y="1909" width="1.7" height="15.0" fill="rgb(246,166,46)" rx="2" ry="2" />
<text  x="72.97" y="1919.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (3 samples, 0.11%)</title><rect x="1182.5" y="1909" width="1.3" height="15.0" fill="rgb(232,99,46)" rx="2" ry="2" />
<text  x="1185.50" y="1919.5" ></text>
</g>
<g >
<title>std::queue&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::deque&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::pop (1 samples, 0.04%)</title><rect x="968.6" y="1909" width="0.5" height="15.0" fill="rgb(218,191,54)" rx="2" ry="2" />
<text  x="971.64" y="1919.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.15%)</title><rect x="799.3" y="1733" width="1.8" height="15.0" fill="rgb(231,190,28)" rx="2" ry="2" />
<text  x="802.31" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="1477" width="0.4" height="15.0" fill="rgb(251,162,39)" rx="2" ry="2" />
<text  x="16.09" y="1487.5" ></text>
</g>
<g >
<title>__vsprintf_internal (335 samples, 12.52%)</title><rect x="139.2" y="2037" width="147.7" height="15.0" fill="rgb(225,190,34)" rx="2" ry="2" />
<text  x="142.20" y="2047.5" >__vsprintf_internal</text>
</g>
<g >
<title>common_file_perm (2 samples, 0.07%)</title><rect x="68.6" y="1893" width="0.9" height="15.0" fill="rgb(246,135,29)" rx="2" ry="2" />
<text  x="71.65" y="1903.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.15%)</title><rect x="70.0" y="1925" width="1.7" height="15.0" fill="rgb(234,222,2)" rx="2" ry="2" />
<text  x="72.97" y="1935.5" ></text>
</g>
<g >
<title>kmem_cache_free (2 samples, 0.07%)</title><rect x="51.4" y="1813" width="0.9" height="15.0" fill="rgb(213,205,27)" rx="2" ry="2" />
<text  x="54.45" y="1823.5" ></text>
</g>
<g >
<title>node_dirty_ok (2 samples, 0.07%)</title><rect x="44.8" y="1749" width="0.9" height="15.0" fill="rgb(225,126,52)" rx="2" ry="2" />
<text  x="47.84" y="1759.5" ></text>
</g>
<g >
<title>do_anonymous_page (19 samples, 0.71%)</title><rect x="1133.1" y="1941" width="8.4" height="15.0" fill="rgb(217,148,50)" rx="2" ry="2" />
<text  x="1136.12" y="1951.5" ></text>
</g>
<g >
<title>schedule (5 samples, 0.19%)</title><rect x="82.8" y="1925" width="2.2" height="15.0" fill="rgb(211,169,26)" rx="2" ry="2" />
<text  x="85.76" y="1935.5" ></text>
</g>
<g >
<title>__slab_alloc (1 samples, 0.04%)</title><rect x="35.1" y="1765" width="0.5" height="15.0" fill="rgb(213,102,8)" rx="2" ry="2" />
<text  x="38.13" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="1701" width="0.4" height="15.0" fill="rgb(219,180,1)" rx="2" ry="2" />
<text  x="16.09" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="1109" width="0.4" height="15.0" fill="rgb(244,171,44)" rx="2" ry="2" />
<text  x="16.09" y="1119.5" ></text>
</g>
<g >
<title>rwsem_optimistic_spin (4 samples, 0.15%)</title><rect x="1106.7" y="1941" width="1.7" height="15.0" fill="rgb(241,114,4)" rx="2" ry="2" />
<text  x="1109.66" y="1951.5" ></text>
</g>
<g >
<title>do_anonymous_page (32 samples, 1.20%)</title><rect x="1170.2" y="1941" width="14.1" height="15.0" fill="rgb(212,164,20)" rx="2" ry="2" />
<text  x="1173.16" y="1951.5" ></text>
</g>
<g >
<title>__vfprintf_internal (159 samples, 5.94%)</title><rect x="216.8" y="2021" width="70.1" height="15.0" fill="rgb(244,122,32)" rx="2" ry="2" />
<text  x="219.81" y="2031.5" >__vfpri..</text>
</g>
<g >
<title>memcg_kmem_get_cache (1 samples, 0.04%)</title><rect x="35.6" y="1765" width="0.4" height="15.0" fill="rgb(238,140,5)" rx="2" ry="2" />
<text  x="38.58" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="373" width="0.4" height="15.0" fill="rgb(246,186,2)" rx="2" ry="2" />
<text  x="16.09" y="383.5" ></text>
</g>
<g >
<title>finish_task_switch (7 samples, 0.26%)</title><rect x="14.4" y="1925" width="3.1" height="15.0" fill="rgb(232,185,21)" rx="2" ry="2" />
<text  x="17.41" y="1935.5" ></text>
</g>
<g >
<title>generic_write_end (28 samples, 1.05%)</title><rect x="52.3" y="1845" width="12.4" height="15.0" fill="rgb(245,161,29)" rx="2" ry="2" />
<text  x="55.33" y="1855.5" ></text>
</g>
<g >
<title>lru_cache_add (1 samples, 0.04%)</title><rect x="49.2" y="1797" width="0.5" height="15.0" fill="rgb(239,96,52)" rx="2" ry="2" />
<text  x="52.25" y="1807.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.15%)</title><rect x="1188.2" y="1877" width="1.8" height="15.0" fill="rgb(250,40,32)" rx="2" ry="2" />
<text  x="1191.24" y="1887.5" ></text>
</g>
<g >
<title>__x86_indirect_thunk_rax (1 samples, 0.04%)</title><rect x="327.0" y="2005" width="0.5" height="15.0" fill="rgb(232,159,54)" rx="2" ry="2" />
<text  x="330.05" y="2015.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::deallocate (1 samples, 0.04%)</title><rect x="939.5" y="1829" width="0.5" height="15.0" fill="rgb(248,108,47)" rx="2" ry="2" />
<text  x="942.54" y="1839.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.15%)</title><rect x="1188.2" y="1861" width="1.8" height="15.0" fill="rgb(232,206,43)" rx="2" ry="2" />
<text  x="1191.24" y="1871.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.04%)</title><rect x="58.1" y="1749" width="0.4" height="15.0" fill="rgb(208,141,36)" rx="2" ry="2" />
<text  x="61.06" y="1759.5" ></text>
</g>
<g >
<title>io_schedule (6 samples, 0.22%)</title><rect x="1074.0" y="1813" width="2.7" height="15.0" fill="rgb(229,35,36)" rx="2" ry="2" />
<text  x="1077.03" y="1823.5" ></text>
</g>
<g >
<title>std::deque&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::front (4 samples, 0.15%)</title><rect x="934.2" y="1877" width="1.8" height="15.0" fill="rgb(252,11,22)" rx="2" ry="2" />
<text  x="937.25" y="1887.5" ></text>
</g>
<g >
<title>__inc_numa_state (1 samples, 0.04%)</title><rect x="1174.1" y="1877" width="0.5" height="15.0" fill="rgb(247,175,33)" rx="2" ry="2" />
<text  x="1177.13" y="1887.5" ></text>
</g>
<g >
<title>truncate_pagecache (12 samples, 0.45%)</title><rect x="22.8" y="1861" width="5.3" height="15.0" fill="rgb(250,79,46)" rx="2" ry="2" />
<text  x="25.79" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="997" width="0.4" height="15.0" fill="rgb(213,25,43)" rx="2" ry="2" />
<text  x="16.09" y="1007.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="1429" width="0.4" height="15.0" fill="rgb(208,224,43)" rx="2" ry="2" />
<text  x="16.09" y="1439.5" ></text>
</g>
<g >
<title>setup_new_exec (4 samples, 0.15%)</title><rect x="1188.2" y="1941" width="1.8" height="15.0" fill="rgb(216,137,5)" rx="2" ry="2" />
<text  x="1191.24" y="1951.5" ></text>
</g>
<g >
<title>start_this_handle (2 samples, 0.07%)</title><rect x="33.4" y="1813" width="0.9" height="15.0" fill="rgb(219,51,35)" rx="2" ry="2" />
<text  x="36.37" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="1589" width="0.4" height="15.0" fill="rgb(219,37,36)" rx="2" ry="2" />
<text  x="16.09" y="1599.5" ></text>
</g>
<g >
<title>ext4_release_file (9 samples, 0.34%)</title><rect x="1072.7" y="1941" width="4.0" height="15.0" fill="rgb(217,204,48)" rx="2" ry="2" />
<text  x="1075.71" y="1951.5" ></text>
</g>
<g >
<title>native_write_msr (7 samples, 0.26%)</title><rect x="14.4" y="1845" width="3.1" height="15.0" fill="rgb(216,183,4)" rx="2" ry="2" />
<text  x="17.41" y="1855.5" ></text>
</g>
<g >
<title>_int_free (2 samples, 0.07%)</title><rect x="949.2" y="1909" width="0.9" height="15.0" fill="rgb(224,12,17)" rx="2" ry="2" />
<text  x="952.24" y="1919.5" ></text>
</g>
<g >
<title>__block_commit_write.isra.0 (14 samples, 0.52%)</title><rect x="58.5" y="1813" width="6.2" height="15.0" fill="rgb(220,183,8)" rx="2" ry="2" />
<text  x="61.51" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="773" width="0.4" height="15.0" fill="rgb(226,154,4)" rx="2" ry="2" />
<text  x="16.09" y="783.5" ></text>
</g>
<g >
<title>unmap_single_vma (14 samples, 0.52%)</title><rect x="1144.6" y="1925" width="6.2" height="15.0" fill="rgb(211,175,17)" rx="2" ry="2" />
<text  x="1147.58" y="1935.5" ></text>
</g>
<g >
<title>ext4_writepages (9 samples, 0.34%)</title><rect x="1072.7" y="1861" width="4.0" height="15.0" fill="rgb(221,227,17)" rx="2" ry="2" />
<text  x="1075.71" y="1871.5" ></text>
</g>
<g >
<title>__lru_cache_add (5 samples, 0.19%)</title><rect x="1179.9" y="1909" width="2.2" height="15.0" fill="rgb(212,31,36)" rx="2" ry="2" />
<text  x="1182.86" y="1919.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="786.1" y="1877" width="0.4" height="15.0" fill="rgb(237,137,0)" rx="2" ry="2" />
<text  x="789.08" y="1887.5" ></text>
</g>
<g >
<title>crc32c_pcl_intel_update (1 samples, 0.04%)</title><rect x="55.9" y="1717" width="0.4" height="15.0" fill="rgb(206,180,28)" rx="2" ry="2" />
<text  x="58.86" y="1727.5" ></text>
</g>
<g >
<title>down_read (1 samples, 0.04%)</title><rect x="37.3" y="1797" width="0.5" height="15.0" fill="rgb(214,0,40)" rx="2" ry="2" />
<text  x="40.34" y="1807.5" ></text>
</g>
<g >
<title>[C2J] (17 samples, 0.64%)</title><rect x="940.9" y="1909" width="7.5" height="15.0" fill="rgb(223,123,48)" rx="2" ry="2" />
<text  x="943.86" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (2,187 samples, 81.73%)</title><rect x="10.0" y="2053" width="964.4" height="15.0" fill="rgb(205,169,51)" rx="2" ry="2" />
<text  x="13.00" y="2063.5" >[unknown]</text>
</g>
<g >
<title>ext4_write_checks (1 samples, 0.04%)</title><rect x="68.2" y="1893" width="0.4" height="15.0" fill="rgb(217,220,51)" rx="2" ry="2" />
<text  x="71.21" y="1903.5" ></text>
</g>
<g >
<title>__libc_start_main (65 samples, 2.43%)</title><rect x="1076.7" y="2053" width="28.6" height="15.0" fill="rgb(224,123,32)" rx="2" ry="2" />
<text  x="1079.67" y="2063.5" >__..</text>
</g>
<g >
<title>kmem_cache_alloc (1 samples, 0.04%)</title><rect x="32.5" y="1813" width="0.4" height="15.0" fill="rgb(206,39,14)" rx="2" ry="2" />
<text  x="35.49" y="1823.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.04%)</title><rect x="286.5" y="1973" width="0.4" height="15.0" fill="rgb(237,72,26)" rx="2" ry="2" />
<text  x="289.48" y="1983.5" ></text>
</g>
<g >
<title>release_pages (2 samples, 0.07%)</title><rect x="1181.2" y="1877" width="0.9" height="15.0" fill="rgb(254,199,26)" rx="2" ry="2" />
<text  x="1184.18" y="1887.5" ></text>
</g>
<g >
<title>schedule_tail (7 samples, 0.26%)</title><rect x="14.4" y="1941" width="3.1" height="15.0" fill="rgb(205,197,30)" rx="2" ry="2" />
<text  x="17.41" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="325" width="0.4" height="15.0" fill="rgb(225,16,11)" rx="2" ry="2" />
<text  x="16.09" y="335.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.04%)</title><rect x="1179.4" y="1909" width="0.5" height="15.0" fill="rgb(224,147,6)" rx="2" ry="2" />
<text  x="1182.42" y="1919.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (2 samples, 0.07%)</title><rect x="326.2" y="2021" width="0.8" height="15.0" fill="rgb(238,191,54)" rx="2" ry="2" />
<text  x="329.17" y="2031.5" ></text>
</g>
<g >
<title>perf_event_task_tick (2 samples, 0.07%)</title><rect x="737.1" y="1749" width="0.9" height="15.0" fill="rgb(239,156,20)" rx="2" ry="2" />
<text  x="740.14" y="1759.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.15%)</title><rect x="333.7" y="2037" width="1.7" height="15.0" fill="rgb(223,168,40)" rx="2" ry="2" />
<text  x="336.66" y="2047.5" ></text>
</g>
<g >
<title>clear_page_erms (9 samples, 0.34%)</title><rect x="40.9" y="1749" width="3.9" height="15.0" fill="rgb(216,159,1)" rx="2" ry="2" />
<text  x="43.87" y="1759.5" ></text>
</g>
<g >
<title>__count_memcg_events (1 samples, 0.04%)</title><rect x="1167.5" y="1957" width="0.5" height="15.0" fill="rgb(233,33,38)" rx="2" ry="2" />
<text  x="1170.51" y="1967.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (3 samples, 0.11%)</title><rect x="1081.5" y="1941" width="1.3" height="15.0" fill="rgb(215,1,53)" rx="2" ry="2" />
<text  x="1084.52" y="1951.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;&amp;, std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*&gt;::_Deque_iterator (3 samples, 0.11%)</title><rect x="934.7" y="1845" width="1.3" height="15.0" fill="rgb(238,125,46)" rx="2" ry="2" />
<text  x="937.69" y="1855.5" ></text>
</g>
<g >
<title>ctx_resched (4 samples, 0.15%)</title><rect x="1188.2" y="1909" width="1.8" height="15.0" fill="rgb(245,181,8)" rx="2" ry="2" />
<text  x="1191.24" y="1919.5" ></text>
</g>
<g >
<title>do_futex (11 samples, 0.41%)</title><rect x="81.9" y="1973" width="4.8" height="15.0" fill="rgb(229,3,7)" rx="2" ry="2" />
<text  x="84.88" y="1983.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (7 samples, 0.26%)</title><rect x="140.5" y="2021" width="3.1" height="15.0" fill="rgb(235,103,3)" rx="2" ry="2" />
<text  x="143.52" y="2031.5" ></text>
</g>
<g >
<title>scheduler_tick (2 samples, 0.07%)</title><rect x="737.1" y="1765" width="0.9" height="15.0" fill="rgb(224,13,8)" rx="2" ry="2" />
<text  x="740.14" y="1775.5" ></text>
</g>
<g >
<title>do_syscall_64 (4 samples, 0.15%)</title><rect x="1188.2" y="2021" width="1.8" height="15.0" fill="rgb(211,145,36)" rx="2" ry="2" />
<text  x="1191.24" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="581" width="0.4" height="15.0" fill="rgb(229,112,3)" rx="2" ry="2" />
<text  x="16.09" y="591.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="757" width="0.4" height="15.0" fill="rgb(216,143,38)" rx="2" ry="2" />
<text  x="16.09" y="767.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (1 samples, 0.04%)</title><rect x="29.0" y="2021" width="0.4" height="15.0" fill="rgb(246,137,11)" rx="2" ry="2" />
<text  x="31.96" y="2031.5" ></text>
</g>
<g >
<title>unlock_page_memcg (1 samples, 0.04%)</title><rect x="64.2" y="1781" width="0.5" height="15.0" fill="rgb(229,143,19)" rx="2" ry="2" />
<text  x="67.24" y="1791.5" ></text>
</g>
<g >
<title>ext4_get_group_desc (2 samples, 0.07%)</title><rect x="57.2" y="1749" width="0.9" height="15.0" fill="rgb(210,47,47)" rx="2" ry="2" />
<text  x="60.18" y="1759.5" ></text>
</g>
<g >
<title>jbd2__journal_start (5 samples, 0.19%)</title><rect x="32.0" y="1829" width="2.3" height="15.0" fill="rgb(247,56,26)" rx="2" ry="2" />
<text  x="35.05" y="1839.5" ></text>
</g>
<g >
<title>__handle_mm_fault (37 samples, 1.38%)</title><rect x="1168.0" y="1957" width="16.3" height="15.0" fill="rgb(250,31,13)" rx="2" ry="2" />
<text  x="1170.95" y="1967.5" ></text>
</g>
<g >
<title>rw_verify_area (2 samples, 0.07%)</title><rect x="68.6" y="1941" width="0.9" height="15.0" fill="rgb(211,65,29)" rx="2" ry="2" />
<text  x="71.65" y="1951.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.04%)</title><rect x="51.0" y="1845" width="0.4" height="15.0" fill="rgb(208,204,3)" rx="2" ry="2" />
<text  x="54.01" y="1855.5" ></text>
</g>
<g >
<title>CSV2JSON::ThreadingParseDatas (1,295 samples, 48.39%)</title><rect x="369.8" y="1909" width="571.1" height="15.0" fill="rgb(250,42,26)" rx="2" ry="2" />
<text  x="372.82" y="1919.5" >CSV2JSON::ThreadingParseDatas</text>
</g>
<g >
<title>find_get_entry (1 samples, 0.04%)</title><rect x="50.6" y="1813" width="0.4" height="15.0" fill="rgb(222,125,54)" rx="2" ry="2" />
<text  x="53.57" y="1823.5" ></text>
</g>
<g >
<title>do_syscall_64 (18 samples, 0.67%)</title><rect x="71.7" y="2005" width="8.0" height="15.0" fill="rgb(243,93,9)" rx="2" ry="2" />
<text  x="74.73" y="2015.5" ></text>
</g>
<g >
<title>mem_cgroup_commit_charge (1 samples, 0.04%)</title><rect x="1182.1" y="1925" width="0.4" height="15.0" fill="rgb(211,21,51)" rx="2" ry="2" />
<text  x="1185.06" y="1935.5" ></text>
</g>
<g >
<title>map_id_up (1 samples, 0.04%)</title><rect x="56.7" y="1733" width="0.5" height="15.0" fill="rgb(218,120,52)" rx="2" ry="2" />
<text  x="59.74" y="1743.5" ></text>
</g>
<g >
<title>__mempcpy_avx_unaligned_erms (1 samples, 0.04%)</title><rect x="133.5" y="2037" width="0.4" height="15.0" fill="rgb(245,85,36)" rx="2" ry="2" />
<text  x="136.47" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="725" width="0.4" height="15.0" fill="rgb(225,218,38)" rx="2" ry="2" />
<text  x="16.09" y="735.5" ></text>
</g>
<g >
<title>jbd2_journal_stop (2 samples, 0.07%)</title><rect x="51.4" y="1829" width="0.9" height="15.0" fill="rgb(253,38,18)" rx="2" ry="2" />
<text  x="54.45" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="1381" width="0.4" height="15.0" fill="rgb(220,16,42)" rx="2" ry="2" />
<text  x="16.09" y="1391.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="1541" width="0.4" height="15.0" fill="rgb(209,10,9)" rx="2" ry="2" />
<text  x="16.09" y="1551.5" ></text>
</g>
<g >
<title>[unknown] (1,359 samples, 50.78%)</title><rect x="369.8" y="2021" width="599.3" height="15.0" fill="rgb(214,219,11)" rx="2" ry="2" />
<text  x="372.82" y="2031.5" >[unknown]</text>
</g>
<g >
<title>__ext4_journal_stop (2 samples, 0.07%)</title><rect x="51.4" y="1845" width="0.9" height="15.0" fill="rgb(208,51,26)" rx="2" ry="2" />
<text  x="54.45" y="1855.5" ></text>
</g>
<g >
<title>handle_mm_fault (23 samples, 0.86%)</title><rect x="1131.8" y="1973" width="10.1" height="15.0" fill="rgb(221,216,10)" rx="2" ry="2" />
<text  x="1134.79" y="1983.5" ></text>
</g>
<g >
<title>down_write_killable (4 samples, 0.15%)</title><rect x="1106.7" y="1973" width="1.7" height="15.0" fill="rgb(237,153,5)" rx="2" ry="2" />
<text  x="1109.66" y="1983.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.15%)</title><rect x="1074.9" y="1717" width="1.8" height="15.0" fill="rgb(219,37,21)" rx="2" ry="2" />
<text  x="1077.91" y="1727.5" ></text>
</g>
<g >
<title>do_writepages (9 samples, 0.34%)</title><rect x="1072.7" y="1877" width="4.0" height="15.0" fill="rgb(210,100,19)" rx="2" ry="2" />
<text  x="1075.71" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="1637" width="0.4" height="15.0" fill="rgb(241,189,8)" rx="2" ry="2" />
<text  x="16.09" y="1647.5" ></text>
</g>
<g >
<title>__vfprintf_internal (1 samples, 0.04%)</title><rect x="138.8" y="2037" width="0.4" height="15.0" fill="rgb(229,49,50)" rx="2" ry="2" />
<text  x="141.76" y="2047.5" ></text>
</g>
<g >
<title>filemap_flush (9 samples, 0.34%)</title><rect x="1072.7" y="1909" width="4.0" height="15.0" fill="rgb(218,111,36)" rx="2" ry="2" />
<text  x="1075.71" y="1919.5" ></text>
</g>
<g >
<title>do_exit (15 samples, 0.56%)</title><rect x="1144.1" y="1989" width="6.7" height="15.0" fill="rgb(224,165,12)" rx="2" ry="2" />
<text  x="1147.14" y="1999.5" ></text>
</g>
<g >
<title>__slab_free (2 samples, 0.07%)</title><rect x="26.8" y="1685" width="0.8" height="15.0" fill="rgb(214,183,24)" rx="2" ry="2" />
<text  x="29.76" y="1695.5" ></text>
</g>
<g >
<title>x86_pmu_disable (1 samples, 0.04%)</title><rect x="737.6" y="1733" width="0.4" height="15.0" fill="rgb(224,138,12)" rx="2" ry="2" />
<text  x="740.58" y="1743.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_out (1 samples, 0.04%)</title><rect x="82.8" y="1893" width="0.4" height="15.0" fill="rgb(225,204,13)" rx="2" ry="2" />
<text  x="85.76" y="1903.5" ></text>
</g>
<g >
<title>__remove_hrtimer (1 samples, 0.04%)</title><rect x="736.7" y="1813" width="0.4" height="15.0" fill="rgb(220,103,14)" rx="2" ry="2" />
<text  x="739.70" y="1823.5" ></text>
</g>
<g >
<title>std::operator==&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;&amp;, std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*&gt; (1 samples, 0.04%)</title><rect x="933.4" y="1877" width="0.4" height="15.0" fill="rgb(219,184,0)" rx="2" ry="2" />
<text  x="936.36" y="1887.5" ></text>
</g>
<g >
<title>__bio_try_merge_page (1 samples, 0.04%)</title><rect x="1073.6" y="1765" width="0.4" height="15.0" fill="rgb(227,111,5)" rx="2" ry="2" />
<text  x="1076.59" y="1775.5" ></text>
</g>
<g >
<title>finish_task_switch (1 samples, 0.04%)</title><rect x="13.1" y="117" width="0.4" height="15.0" fill="rgb(226,2,49)" rx="2" ry="2" />
<text  x="16.09" y="127.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="629" width="0.4" height="15.0" fill="rgb(250,24,23)" rx="2" ry="2" />
<text  x="16.09" y="639.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="693" width="0.4" height="15.0" fill="rgb(213,225,52)" rx="2" ry="2" />
<text  x="16.09" y="703.5" ></text>
</g>
<g >
<title>std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair (1 samples, 0.04%)</title><rect x="1082.4" y="1909" width="0.4" height="15.0" fill="rgb(252,97,54)" rx="2" ry="2" />
<text  x="1085.41" y="1919.5" ></text>
</g>
<g >
<title>schedule_tail (1 samples, 0.04%)</title><rect x="13.1" y="133" width="0.4" height="15.0" fill="rgb(218,146,45)" rx="2" ry="2" />
<text  x="16.09" y="143.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (4 samples, 0.15%)</title><rect x="70.0" y="1973" width="1.7" height="15.0" fill="rgb(212,148,41)" rx="2" ry="2" />
<text  x="72.97" y="1983.5" ></text>
</g>
<g >
<title>__ext4_get_inode_loc (2 samples, 0.07%)</title><rect x="57.2" y="1765" width="0.9" height="15.0" fill="rgb(233,154,40)" rx="2" ry="2" />
<text  x="60.18" y="1775.5" ></text>
</g>
<g >
<title>__fput (9 samples, 0.34%)</title><rect x="1072.7" y="1957" width="4.0" height="15.0" fill="rgb(234,152,5)" rx="2" ry="2" />
<text  x="1075.71" y="1967.5" ></text>
</g>
<g >
<title>alloc_pages_current (20 samples, 0.75%)</title><rect x="38.7" y="1797" width="8.8" height="15.0" fill="rgb(232,150,25)" rx="2" ry="2" />
<text  x="41.66" y="1807.5" ></text>
</g>
<g >
<title>__pagevec_lru_add_fn (3 samples, 0.11%)</title><rect x="1179.9" y="1877" width="1.3" height="15.0" fill="rgb(219,47,42)" rx="2" ry="2" />
<text  x="1182.86" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="1925" width="0.4" height="15.0" fill="rgb(223,25,2)" rx="2" ry="2" />
<text  x="16.09" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="661" width="0.4" height="15.0" fill="rgb(205,180,31)" rx="2" ry="2" />
<text  x="16.09" y="671.5" ></text>
</g>
<g >
<title>change_pte_range (1 samples, 0.04%)</title><rect x="1112.0" y="1941" width="0.4" height="15.0" fill="rgb(208,214,34)" rx="2" ry="2" />
<text  x="1114.95" y="1951.5" ></text>
</g>
<g >
<title>create_empty_buffers (3 samples, 0.11%)</title><rect x="35.1" y="1829" width="1.4" height="15.0" fill="rgb(219,85,31)" rx="2" ry="2" />
<text  x="38.13" y="1839.5" ></text>
</g>
<g >
<title>__call_rcu (1 samples, 0.04%)</title><rect x="24.6" y="1781" width="0.4" height="15.0" fill="rgb(237,208,29)" rx="2" ry="2" />
<text  x="27.55" y="1791.5" ></text>
</g>
<g >
<title>do_truncate (12 samples, 0.45%)</title><rect x="22.8" y="1909" width="5.3" height="15.0" fill="rgb(247,88,31)" rx="2" ry="2" />
<text  x="25.79" y="1919.5" ></text>
</g>
<g >
<title>do_page_fault (49 samples, 1.83%)</title><rect x="1164.9" y="2021" width="21.6" height="15.0" fill="rgb(231,192,16)" rx="2" ry="2" />
<text  x="1167.87" y="2031.5" >d..</text>
</g>
<g >
<title>alloc_buffer_head (3 samples, 0.11%)</title><rect x="35.1" y="1797" width="1.4" height="15.0" fill="rgb(212,91,23)" rx="2" ry="2" />
<text  x="38.13" y="1807.5" ></text>
</g>
<g >
<title>__mod_node_page_state (2 samples, 0.07%)</title><rect x="62.9" y="1749" width="0.9" height="15.0" fill="rgb(229,179,48)" rx="2" ry="2" />
<text  x="65.91" y="1759.5" ></text>
</g>
<g >
<title>__xa_set_mark (1 samples, 0.04%)</title><rect x="61.2" y="1765" width="0.4" height="15.0" fill="rgb(210,208,47)" rx="2" ry="2" />
<text  x="64.15" y="1775.5" ></text>
</g>
<g >
<title>search_binary_handler (4 samples, 0.15%)</title><rect x="1188.2" y="1973" width="1.8" height="15.0" fill="rgb(231,206,31)" rx="2" ry="2" />
<text  x="1191.24" y="1983.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (27 samples, 1.01%)</title><rect x="1106.2" y="2037" width="11.9" height="15.0" fill="rgb(246,62,13)" rx="2" ry="2" />
<text  x="1109.22" y="2047.5" ></text>
</g>
<g >
<title>rb_next (1 samples, 0.04%)</title><rect x="736.7" y="1797" width="0.4" height="15.0" fill="rgb(223,0,0)" rx="2" ry="2" />
<text  x="739.70" y="1807.5" ></text>
</g>
<g >
<title>std::queue&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::deque&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::push (13 samples, 0.49%)</title><rect x="1079.3" y="1989" width="5.8" height="15.0" fill="rgb(230,127,46)" rx="2" ry="2" />
<text  x="1082.32" y="1999.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (7 samples, 0.26%)</title><rect x="14.4" y="1861" width="3.1" height="15.0" fill="rgb(251,103,39)" rx="2" ry="2" />
<text  x="17.41" y="1871.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.15%)</title><rect x="909.6" y="1749" width="1.7" height="15.0" fill="rgb(208,33,33)" rx="2" ry="2" />
<text  x="912.55" y="1759.5" ></text>
</g>
<g >
<title>__schedule (6 samples, 0.22%)</title><rect x="1074.0" y="1781" width="2.7" height="15.0" fill="rgb(220,178,52)" rx="2" ry="2" />
<text  x="1077.03" y="1791.5" ></text>
</g>
<g >
<title>__pagevec_lru_add_fn (1 samples, 0.04%)</title><rect x="1139.3" y="1877" width="0.4" height="15.0" fill="rgb(235,71,8)" rx="2" ry="2" />
<text  x="1142.29" y="1887.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.15%)</title><rect x="1188.2" y="2037" width="1.8" height="15.0" fill="rgb(234,78,12)" rx="2" ry="2" />
<text  x="1191.24" y="2047.5" ></text>
</g>
<g >
<title>clear_page_erms (5 samples, 0.19%)</title><rect x="1134.4" y="1877" width="2.2" height="15.0" fill="rgb(210,128,12)" rx="2" ry="2" />
<text  x="1137.44" y="1887.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.15%)</title><rect x="70.0" y="1941" width="1.7" height="15.0" fill="rgb(242,89,3)" rx="2" ry="2" />
<text  x="72.97" y="1951.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (1 samples, 0.04%)</title><rect x="1139.3" y="1893" width="0.4" height="15.0" fill="rgb(218,194,50)" rx="2" ry="2" />
<text  x="1142.29" y="1903.5" ></text>
</g>
<g >
<title>do_syscall_64 (89 samples, 3.33%)</title><rect x="30.3" y="2005" width="39.2" height="15.0" fill="rgb(250,162,53)" rx="2" ry="2" />
<text  x="33.28" y="2015.5" >do_..</text>
</g>
<g >
<title>dequeue_entity (2 samples, 0.07%)</title><rect x="83.2" y="1861" width="0.9" height="15.0" fill="rgb(207,21,47)" rx="2" ry="2" />
<text  x="86.20" y="1871.5" ></text>
</g>
<g >
<title>std::deque&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_push_back_aux&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (4 samples, 0.15%)</title><rect x="1082.8" y="1941" width="1.8" height="15.0" fill="rgb(205,34,13)" rx="2" ry="2" />
<text  x="1085.85" y="1951.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (1 samples, 0.04%)</title><rect x="69.5" y="2021" width="0.5" height="15.0" fill="rgb(218,93,51)" rx="2" ry="2" />
<text  x="72.53" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="2021" width="0.4" height="15.0" fill="rgb(224,78,41)" rx="2" ry="2" />
<text  x="16.09" y="2031.5" ></text>
</g>
<g >
<title>CSV2JSON::WriteJSON (1 samples, 0.04%)</title><rect x="1085.1" y="2005" width="0.4" height="15.0" fill="rgb(233,51,16)" rx="2" ry="2" />
<text  x="1088.05" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="933" width="0.4" height="15.0" fill="rgb(225,75,42)" rx="2" ry="2" />
<text  x="16.09" y="943.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (7 samples, 0.26%)</title><rect x="10.0" y="2037" width="3.1" height="15.0" fill="rgb(242,217,38)" rx="2" ry="2" />
<text  x="13.00" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="469" width="0.4" height="15.0" fill="rgb(217,214,22)" rx="2" ry="2" />
<text  x="16.09" y="479.5" ></text>
</g>
<g >
<title>jbd2_journal_try_to_free_buffers (2 samples, 0.07%)</title><rect x="26.8" y="1749" width="0.8" height="15.0" fill="rgb(248,73,43)" rx="2" ry="2" />
<text  x="29.76" y="1759.5" ></text>
</g>
<g >
<title>std::swap&lt;std::thread::id&gt; (1 samples, 0.04%)</title><rect x="13.1" y="229" width="0.4" height="15.0" fill="rgb(240,185,48)" rx="2" ry="2" />
<text  x="16.09" y="239.5" ></text>
</g>
<g >
<title>finish_task_switch (4 samples, 0.15%)</title><rect x="799.3" y="1797" width="1.8" height="15.0" fill="rgb(229,91,9)" rx="2" ry="2" />
<text  x="802.31" y="1807.5" ></text>
</g>
<g >
<title>__pthread_clockjoin_ex (7 samples, 0.26%)</title><rect x="14.4" y="2021" width="3.1" height="15.0" fill="rgb(224,20,2)" rx="2" ry="2" />
<text  x="17.41" y="2031.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::thread::_State, std::default_delete&lt;std::thread::_State&gt; &gt;::_M_ptr (1 samples, 0.04%)</title><rect x="13.1" y="197" width="0.4" height="15.0" fill="rgb(217,3,15)" rx="2" ry="2" />
<text  x="16.09" y="207.5" ></text>
</g>
<g >
<title>__strchrnul_avx2 (3 samples, 0.11%)</title><rect x="1088.6" y="1989" width="1.3" height="15.0" fill="rgb(215,12,16)" rx="2" ry="2" />
<text  x="1091.58" y="1999.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (10 samples, 0.37%)</title><rect x="926.3" y="1893" width="4.4" height="15.0" fill="rgb(226,52,19)" rx="2" ry="2" />
<text  x="929.31" y="1903.5" ></text>
</g>
<g >
<title>finish_task_switch (4 samples, 0.15%)</title><rect x="909.6" y="1797" width="1.7" height="15.0" fill="rgb(240,42,21)" rx="2" ry="2" />
<text  x="912.55" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="917" width="0.4" height="15.0" fill="rgb(233,205,0)" rx="2" ry="2" />
<text  x="16.09" y="927.5" ></text>
</g>
<g >
<title>schedule (4 samples, 0.15%)</title><rect x="909.6" y="1829" width="1.7" height="15.0" fill="rgb(252,145,48)" rx="2" ry="2" />
<text  x="912.55" y="1839.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (2 samples, 0.07%)</title><rect x="809.9" y="1893" width="0.9" height="15.0" fill="rgb(225,43,18)" rx="2" ry="2" />
<text  x="812.90" y="1903.5" ></text>
</g>
<g >
<title>find_get_entries (1 samples, 0.04%)</title><rect x="25.0" y="1813" width="0.4" height="15.0" fill="rgb(208,125,49)" rx="2" ry="2" />
<text  x="27.99" y="1823.5" ></text>
</g>
<g >
<title>__ext4_journal_get_write_access (1 samples, 0.04%)</title><rect x="58.1" y="1765" width="0.4" height="15.0" fill="rgb(226,43,29)" rx="2" ry="2" />
<text  x="61.06" y="1775.5" ></text>
</g>
<g >
<title>mpage_map_and_submit_extent (3 samples, 0.11%)</title><rect x="1072.7" y="1845" width="1.3" height="15.0" fill="rgb(213,89,49)" rx="2" ry="2" />
<text  x="1075.71" y="1855.5" ></text>
</g>
<g >
<title>__test_set_page_writeback (1 samples, 0.04%)</title><rect x="1073.1" y="1781" width="0.5" height="15.0" fill="rgb(241,144,46)" rx="2" ry="2" />
<text  x="1076.15" y="1791.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.04%)</title><rect x="47.0" y="1781" width="0.5" height="15.0" fill="rgb(252,90,27)" rx="2" ry="2" />
<text  x="50.04" y="1791.5" ></text>
</g>
<g >
<title>block_invalidatepage (5 samples, 0.19%)</title><rect x="25.4" y="1797" width="2.2" height="15.0" fill="rgb(254,20,37)" rx="2" ry="2" />
<text  x="28.43" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="245" width="0.4" height="15.0" fill="rgb(234,2,24)" rx="2" ry="2" />
<text  x="16.09" y="255.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.04%)</title><rect x="1106.2" y="1973" width="0.5" height="15.0" fill="rgb(207,197,37)" rx="2" ry="2" />
<text  x="1109.22" y="1983.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.04%)</title><rect x="786.1" y="1845" width="0.4" height="15.0" fill="rgb(239,123,27)" rx="2" ry="2" />
<text  x="789.08" y="1855.5" ></text>
</g>
<g >
<title>do_user_addr_fault (2 samples, 0.07%)</title><rect x="1104.5" y="1957" width="0.8" height="15.0" fill="rgb(240,186,38)" rx="2" ry="2" />
<text  x="1107.45" y="1967.5" ></text>
</g>
<g >
<title>rwsem_spin_on_owner (2 samples, 0.07%)</title><rect x="1107.5" y="1925" width="0.9" height="15.0" fill="rgb(209,157,22)" rx="2" ry="2" />
<text  x="1110.54" y="1935.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (1 samples, 0.04%)</title><rect x="49.7" y="1797" width="0.4" height="15.0" fill="rgb(236,174,40)" rx="2" ry="2" />
<text  x="52.69" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="453" width="0.4" height="15.0" fill="rgb(227,114,48)" rx="2" ry="2" />
<text  x="16.09" y="463.5" ></text>
</g>
<g >
<title>__generic_file_write_iter (84 samples, 3.14%)</title><rect x="31.2" y="1893" width="37.0" height="15.0" fill="rgb(206,222,19)" rx="2" ry="2" />
<text  x="34.17" y="1903.5" >__g..</text>
</g>
<g >
<title>ext4_bio_write_page (2 samples, 0.07%)</title><rect x="1073.1" y="1797" width="0.9" height="15.0" fill="rgb(252,100,46)" rx="2" ry="2" />
<text  x="1076.15" y="1807.5" ></text>
</g>
<g >
<title>do_sys_open (12 samples, 0.45%)</title><rect x="22.8" y="1973" width="5.3" height="15.0" fill="rgb(223,190,28)" rx="2" ry="2" />
<text  x="25.79" y="1983.5" ></text>
</g>
<g >
<title>std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::~pair (1 samples, 0.04%)</title><rect x="938.7" y="1845" width="0.4" height="15.0" fill="rgb(240,152,16)" rx="2" ry="2" />
<text  x="941.65" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="1829" width="0.4" height="15.0" fill="rgb(214,112,44)" rx="2" ry="2" />
<text  x="16.09" y="1839.5" ></text>
</g>
<g >
<title>allocate_slab (1 samples, 0.04%)</title><rect x="35.1" y="1717" width="0.5" height="15.0" fill="rgb(212,139,31)" rx="2" ry="2" />
<text  x="38.13" y="1727.5" ></text>
</g>
<g >
<title>__lock_text_start (2 samples, 0.07%)</title><rect x="59.8" y="1781" width="0.9" height="15.0" fill="rgb(230,32,7)" rx="2" ry="2" />
<text  x="62.83" y="1791.5" ></text>
</g>
<g >
<title>__vfprintf_internal (1 samples, 0.04%)</title><rect x="1085.9" y="2005" width="0.5" height="15.0" fill="rgb(240,28,8)" rx="2" ry="2" />
<text  x="1088.93" y="2015.5" ></text>
</g>
<g >
<title>__count_memcg_events (1 samples, 0.04%)</title><rect x="1139.7" y="1893" width="0.5" height="15.0" fill="rgb(219,69,30)" rx="2" ry="2" />
<text  x="1142.73" y="1903.5" ></text>
</g>
<g >
<title>block_write_end (14 samples, 0.52%)</title><rect x="58.5" y="1829" width="6.2" height="15.0" fill="rgb(215,101,2)" rx="2" ry="2" />
<text  x="61.51" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="885" width="0.4" height="15.0" fill="rgb(231,28,42)" rx="2" ry="2" />
<text  x="16.09" y="895.5" ></text>
</g>
<g >
<title>__do_execve_file.isra.0 (1 samples, 0.04%)</title><rect x="332.3" y="1989" width="0.5" height="15.0" fill="rgb(229,201,46)" rx="2" ry="2" />
<text  x="335.34" y="1999.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (3 samples, 0.11%)</title><rect x="1182.5" y="1925" width="1.3" height="15.0" fill="rgb(253,23,29)" rx="2" ry="2" />
<text  x="1185.50" y="1935.5" ></text>
</g>
<g >
<title>native_write_msr (4 samples, 0.15%)</title><rect x="77.5" y="1733" width="1.7" height="15.0" fill="rgb(227,170,37)" rx="2" ry="2" />
<text  x="80.47" y="1743.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (15 samples, 0.56%)</title><rect x="1144.1" y="2021" width="6.7" height="15.0" fill="rgb(235,178,24)" rx="2" ry="2" />
<text  x="1147.14" y="2031.5" ></text>
</g>
<g >
<title>futex_wait_setup (4 samples, 0.15%)</title><rect x="85.0" y="1941" width="1.7" height="15.0" fill="rgb(222,50,6)" rx="2" ry="2" />
<text  x="87.96" y="1951.5" ></text>
</g>
<g >
<title>alloc_slab_page (1 samples, 0.04%)</title><rect x="35.1" y="1701" width="0.5" height="15.0" fill="rgb(205,22,54)" rx="2" ry="2" />
<text  x="38.13" y="1711.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (6 samples, 0.22%)</title><rect x="82.3" y="1941" width="2.7" height="15.0" fill="rgb(210,153,21)" rx="2" ry="2" />
<text  x="85.32" y="1951.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void  (1,359 samples, 50.78%)</title><rect x="369.8" y="1925" width="599.3" height="15.0" fill="rgb(252,55,36)" rx="2" ry="2" />
<text  x="372.82" y="1935.5" >std::__invoke_impl&lt;void, void </text>
</g>
<g >
<title>uncharge_batch (1 samples, 0.04%)</title><rect x="24.1" y="1781" width="0.5" height="15.0" fill="rgb(225,97,52)" rx="2" ry="2" />
<text  x="27.11" y="1791.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;&amp;, std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.04%)</title><rect x="1084.2" y="1893" width="0.4" height="15.0" fill="rgb(222,43,15)" rx="2" ry="2" />
<text  x="1087.17" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="853" width="0.4" height="15.0" fill="rgb(240,22,16)" rx="2" ry="2" />
<text  x="16.09" y="863.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (2 samples, 0.07%)</title><rect x="1140.6" y="1909" width="0.9" height="15.0" fill="rgb(220,184,43)" rx="2" ry="2" />
<text  x="1143.61" y="1919.5" ></text>
</g>
<g >
<title>CSV2JSON::List2Cell (16 samples, 0.60%)</title><rect x="381.7" y="1893" width="7.1" height="15.0" fill="rgb(250,84,54)" rx="2" ry="2" />
<text  x="384.73" y="1903.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (4 samples, 0.15%)</title><rect x="909.6" y="1861" width="1.7" height="15.0" fill="rgb(226,32,21)" rx="2" ry="2" />
<text  x="912.55" y="1871.5" ></text>
</g>
<g >
<title>native_write_msr (4 samples, 0.15%)</title><rect x="1188.2" y="1845" width="1.8" height="15.0" fill="rgb(214,24,48)" rx="2" ry="2" />
<text  x="1191.24" y="1855.5" ></text>
</g>
<g >
<title>bio_add_page (1 samples, 0.04%)</title><rect x="1073.6" y="1781" width="0.4" height="15.0" fill="rgb(220,165,18)" rx="2" ry="2" />
<text  x="1076.59" y="1791.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.45%)</title><rect x="327.0" y="2021" width="5.3" height="15.0" fill="rgb(220,117,40)" rx="2" ry="2" />
<text  x="330.05" y="2031.5" ></text>
</g>
<g >
<title>unlink_chunk.isra.0 (12 samples, 0.45%)</title><rect x="969.1" y="2037" width="5.3" height="15.0" fill="rgb(206,46,34)" rx="2" ry="2" />
<text  x="972.08" y="2047.5" ></text>
</g>
<g >
<title>do_syscall_64 (12 samples, 0.45%)</title><rect x="22.8" y="2005" width="5.3" height="15.0" fill="rgb(246,205,21)" rx="2" ry="2" />
<text  x="25.79" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="1157" width="0.4" height="15.0" fill="rgb(219,158,2)" rx="2" ry="2" />
<text  x="16.09" y="1167.5" ></text>
</g>
<g >
<title>kmem_cache_free (2 samples, 0.07%)</title><rect x="26.8" y="1701" width="0.8" height="15.0" fill="rgb(208,134,37)" rx="2" ry="2" />
<text  x="29.76" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="1941" width="0.4" height="15.0" fill="rgb(232,42,34)" rx="2" ry="2" />
<text  x="16.09" y="1951.5" ></text>
</g>
<g >
<title>tick_sched_handle (2 samples, 0.07%)</title><rect x="737.1" y="1797" width="0.9" height="15.0" fill="rgb(251,180,40)" rx="2" ry="2" />
<text  x="740.14" y="1807.5" ></text>
</g>
<g >
<title>_int_free (2 samples, 0.07%)</title><rect x="802.0" y="1893" width="0.8" height="15.0" fill="rgb(240,45,50)" rx="2" ry="2" />
<text  x="804.96" y="1903.5" ></text>
</g>
<g >
<title>get_page_from_freelist (10 samples, 0.37%)</title><rect x="1134.0" y="1893" width="4.4" height="15.0" fill="rgb(241,15,12)" rx="2" ry="2" />
<text  x="1137.00" y="1903.5" ></text>
</g>
<g >
<title>rmqueue (1 samples, 0.04%)</title><rect x="46.6" y="1765" width="0.4" height="15.0" fill="rgb(226,206,53)" rx="2" ry="2" />
<text  x="49.60" y="1775.5" ></text>
</g>
<g >
<title>do_syscall_64 (11 samples, 0.41%)</title><rect x="327.5" y="2005" width="4.8" height="15.0" fill="rgb(220,196,32)" rx="2" ry="2" />
<text  x="330.49" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="821" width="0.4" height="15.0" fill="rgb(236,84,45)" rx="2" ry="2" />
<text  x="16.09" y="831.5" ></text>
</g>
<g >
<title>__clone (1 samples, 0.04%)</title><rect x="13.1" y="165" width="0.4" height="15.0" fill="rgb(215,199,19)" rx="2" ry="2" />
<text  x="16.09" y="175.5" ></text>
</g>
<g >
<title>std::deque&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::size (1 samples, 0.04%)</title><rect x="1084.2" y="1925" width="0.4" height="15.0" fill="rgb(251,140,35)" rx="2" ry="2" />
<text  x="1087.17" y="1935.5" ></text>
</g>
<g >
<title>unmap_page_range (14 samples, 0.52%)</title><rect x="1144.6" y="1909" width="6.2" height="15.0" fill="rgb(243,6,4)" rx="2" ry="2" />
<text  x="1147.58" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="1781" width="0.4" height="15.0" fill="rgb(254,138,12)" rx="2" ry="2" />
<text  x="16.09" y="1791.5" ></text>
</g>
<g >
<title>std::queue&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::deque&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::front (5 samples, 0.19%)</title><rect x="933.8" y="1893" width="2.2" height="15.0" fill="rgb(207,208,3)" rx="2" ry="2" />
<text  x="936.80" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="805" width="0.4" height="15.0" fill="rgb(242,163,47)" rx="2" ry="2" />
<text  x="16.09" y="815.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (13 samples, 0.49%)</title><rect x="52.8" y="1813" width="5.7" height="15.0" fill="rgb(222,6,17)" rx="2" ry="2" />
<text  x="55.77" y="1823.5" ></text>
</g>
<g >
<title>may_expand_vm (1 samples, 0.04%)</title><rect x="1108.4" y="1973" width="0.5" height="15.0" fill="rgb(254,194,17)" rx="2" ry="2" />
<text  x="1111.42" y="1983.5" ></text>
</g>
<g >
<title>crc32c_pcl_intel_update (1 samples, 0.04%)</title><rect x="56.3" y="1701" width="0.4" height="15.0" fill="rgb(247,225,23)" rx="2" ry="2" />
<text  x="59.30" y="1711.5" ></text>
</g>
<g >
<title>ext4_do_update_inode (5 samples, 0.19%)</title><rect x="55.0" y="1765" width="2.2" height="15.0" fill="rgb(230,93,54)" rx="2" ry="2" />
<text  x="57.98" y="1775.5" ></text>
</g>
<g >
<title>__strlen_avx2 (45 samples, 1.68%)</title><rect x="197.0" y="2021" width="19.8" height="15.0" fill="rgb(209,123,18)" rx="2" ry="2" />
<text  x="199.97" y="2031.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.04%)</title><rect x="1084.2" y="1877" width="0.4" height="15.0" fill="rgb(242,90,11)" rx="2" ry="2" />
<text  x="1087.17" y="1887.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (1 samples, 0.04%)</title><rect x="13.1" y="53" width="0.4" height="15.0" fill="rgb(206,172,47)" rx="2" ry="2" />
<text  x="16.09" y="63.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="1813" width="0.4" height="15.0" fill="rgb(253,177,33)" rx="2" ry="2" />
<text  x="16.09" y="1823.5" ></text>
</g>
<g >
<title>alloc_pages_vma (18 samples, 0.67%)</title><rect x="1171.9" y="1925" width="8.0" height="15.0" fill="rgb(226,197,53)" rx="2" ry="2" />
<text  x="1174.92" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="1269" width="0.4" height="15.0" fill="rgb(240,55,43)" rx="2" ry="2" />
<text  x="16.09" y="1279.5" ></text>
</g>
<g >
<title>std::getline&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (1 samples, 0.04%)</title><rect x="1103.1" y="2005" width="0.5" height="15.0" fill="rgb(238,170,42)" rx="2" ry="2" />
<text  x="1106.13" y="2015.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (16 samples, 0.60%)</title><rect x="955.4" y="1909" width="7.1" height="15.0" fill="rgb(222,118,47)" rx="2" ry="2" />
<text  x="958.41" y="1919.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (1 samples, 0.04%)</title><rect x="331.5" y="1877" width="0.4" height="15.0" fill="rgb(211,197,33)" rx="2" ry="2" />
<text  x="334.46" y="1887.5" ></text>
</g>
<g >
<title>____fput (9 samples, 0.34%)</title><rect x="1072.7" y="1973" width="4.0" height="15.0" fill="rgb(233,6,52)" rx="2" ry="2" />
<text  x="1075.71" y="1983.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.04%)</title><rect x="786.1" y="1781" width="0.4" height="15.0" fill="rgb(231,136,45)" rx="2" ry="2" />
<text  x="789.08" y="1791.5" ></text>
</g>
<g >
<title>__schedule (5 samples, 0.19%)</title><rect x="82.8" y="1909" width="2.2" height="15.0" fill="rgb(249,202,24)" rx="2" ry="2" />
<text  x="85.76" y="1919.5" ></text>
</g>
<g >
<title>find_vma (2 samples, 0.07%)</title><rect x="1165.7" y="1973" width="0.9" height="15.0" fill="rgb(243,154,38)" rx="2" ry="2" />
<text  x="1168.75" y="1983.5" ></text>
</g>
<g >
<title>rmqueue (4 samples, 0.15%)</title><rect x="1177.7" y="1877" width="1.7" height="15.0" fill="rgb(234,187,52)" rx="2" ry="2" />
<text  x="1180.65" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="1845" width="0.4" height="15.0" fill="rgb(217,88,28)" rx="2" ry="2" />
<text  x="16.09" y="1855.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::substr (34 samples, 1.27%)</title><rect x="911.3" y="1893" width="15.0" height="15.0" fill="rgb(247,130,31)" rx="2" ry="2" />
<text  x="914.32" y="1903.5" ></text>
</g>
<g >
<title>security_file_permission (2 samples, 0.07%)</title><rect x="68.6" y="1925" width="0.9" height="15.0" fill="rgb(213,168,33)" rx="2" ry="2" />
<text  x="71.65" y="1935.5" ></text>
</g>
<g >
<title>__x64_sys_read (18 samples, 0.67%)</title><rect x="71.7" y="1989" width="8.0" height="15.0" fill="rgb(250,93,41)" rx="2" ry="2" />
<text  x="74.73" y="1999.5" ></text>
</g>
<g >
<title>mark_buffer_dirty (12 samples, 0.45%)</title><rect x="59.4" y="1797" width="5.3" height="15.0" fill="rgb(238,95,45)" rx="2" ry="2" />
<text  x="62.39" y="1807.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="332.3" y="2037" width="0.5" height="15.0" fill="rgb(244,130,36)" rx="2" ry="2" />
<text  x="335.34" y="2047.5" ></text>
</g>
<g >
<title>__schedule (4 samples, 0.15%)</title><rect x="909.6" y="1813" width="1.7" height="15.0" fill="rgb(253,15,8)" rx="2" ry="2" />
<text  x="912.55" y="1823.5" ></text>
</g>
<g >
<title>delete_from_page_cache_batch (1 samples, 0.04%)</title><rect x="24.6" y="1829" width="0.4" height="15.0" fill="rgb(253,64,27)" rx="2" ry="2" />
<text  x="27.55" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="869" width="0.4" height="15.0" fill="rgb(247,119,30)" rx="2" ry="2" />
<text  x="16.09" y="879.5" ></text>
</g>
<g >
<title>try_to_release_page (1 samples, 0.04%)</title><rect x="27.6" y="1797" width="0.5" height="15.0" fill="rgb(206,24,11)" rx="2" ry="2" />
<text  x="30.64" y="1807.5" ></text>
</g>
<g >
<title>main (65 samples, 2.43%)</title><rect x="1076.7" y="2037" width="28.6" height="15.0" fill="rgb(213,180,13)" rx="2" ry="2" />
<text  x="1079.67" y="2047.5" >main</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::length (44 samples, 1.64%)</title><rect x="814.3" y="1893" width="19.4" height="15.0" fill="rgb(206,223,45)" rx="2" ry="2" />
<text  x="817.30" y="1903.5" ></text>
</g>
<g >
<title>dequeue_task_fair (1 samples, 0.04%)</title><rect x="1074.0" y="1749" width="0.5" height="15.0" fill="rgb(206,81,41)" rx="2" ry="2" />
<text  x="1077.03" y="1759.5" ></text>
</g>
<g >
<title>__GI___libc_write (95 samples, 3.55%)</title><rect x="28.1" y="2037" width="41.9" height="15.0" fill="rgb(208,152,43)" rx="2" ry="2" />
<text  x="31.08" y="2047.5" >__G..</text>
</g>
<g >
<title>__lru_cache_add (1 samples, 0.04%)</title><rect x="1133.6" y="1925" width="0.4" height="15.0" fill="rgb(242,210,8)" rx="2" ry="2" />
<text  x="1136.56" y="1935.5" ></text>
</g>
<g >
<title>__page_cache_alloc (20 samples, 0.75%)</title><rect x="38.7" y="1813" width="8.8" height="15.0" fill="rgb(226,198,3)" rx="2" ry="2" />
<text  x="41.66" y="1823.5" ></text>
</g>
<g >
<title>mpage_prepare_extent_to_map (6 samples, 0.22%)</title><rect x="1074.0" y="1845" width="2.7" height="15.0" fill="rgb(212,189,20)" rx="2" ry="2" />
<text  x="1077.03" y="1855.5" ></text>
</g>
<g >
<title>ext4_setattr (12 samples, 0.45%)</title><rect x="22.8" y="1877" width="5.3" height="15.0" fill="rgb(247,88,46)" rx="2" ry="2" />
<text  x="25.79" y="1887.5" ></text>
</g>
<g >
<title>ext4_mark_iloc_dirty (7 samples, 0.26%)</title><rect x="54.1" y="1781" width="3.1" height="15.0" fill="rgb(246,152,28)" rx="2" ry="2" />
<text  x="57.10" y="1791.5" ></text>
</g>
<g >
<title>exit_mmap (15 samples, 0.56%)</title><rect x="1144.1" y="1957" width="6.7" height="15.0" fill="rgb(251,8,50)" rx="2" ry="2" />
<text  x="1147.14" y="1967.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (4 samples, 0.15%)</title><rect x="799.3" y="1877" width="1.8" height="15.0" fill="rgb(252,24,20)" rx="2" ry="2" />
<text  x="802.31" y="1887.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (2 samples, 0.07%)</title><rect x="35.1" y="1781" width="0.9" height="15.0" fill="rgb(229,210,11)" rx="2" ry="2" />
<text  x="38.13" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="1221" width="0.4" height="15.0" fill="rgb(219,140,17)" rx="2" ry="2" />
<text  x="16.09" y="1231.5" ></text>
</g>
<g >
<title>native_write_msr (4 samples, 0.15%)</title><rect x="909.6" y="1717" width="1.7" height="15.0" fill="rgb(222,153,28)" rx="2" ry="2" />
<text  x="912.55" y="1727.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.0 (4 samples, 0.15%)</title><rect x="799.3" y="1765" width="1.8" height="15.0" fill="rgb(222,133,43)" rx="2" ry="2" />
<text  x="802.31" y="1775.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.04%)</title><rect x="786.1" y="1829" width="0.4" height="15.0" fill="rgb(214,180,15)" rx="2" ry="2" />
<text  x="789.08" y="1839.5" ></text>
</g>
<g >
<title>__ext4_journal_start_sb (1 samples, 0.04%)</title><rect x="52.8" y="1797" width="0.4" height="15.0" fill="rgb(212,92,36)" rx="2" ry="2" />
<text  x="55.77" y="1807.5" ></text>
</g>
<g >
<title>pagevec_lookup_entries (1 samples, 0.04%)</title><rect x="25.0" y="1829" width="0.4" height="15.0" fill="rgb(215,34,32)" rx="2" ry="2" />
<text  x="27.99" y="1839.5" ></text>
</g>
<g >
<title>select_task_rq_fair (1 samples, 0.04%)</title><rect x="331.9" y="1909" width="0.4" height="15.0" fill="rgb(234,180,54)" rx="2" ry="2" />
<text  x="334.90" y="1919.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.04%)</title><rect x="37.8" y="1781" width="0.4" height="15.0" fill="rgb(208,48,3)" rx="2" ry="2" />
<text  x="40.78" y="1791.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::thread::_State*, std::default_delete&lt;std::thread::_State&gt; &gt; (7 samples, 0.26%)</title><rect x="14.4" y="1989" width="3.1" height="15.0" fill="rgb(248,51,12)" rx="2" ry="2" />
<text  x="17.41" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="1877" width="0.4" height="15.0" fill="rgb(212,129,18)" rx="2" ry="2" />
<text  x="16.09" y="1887.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="286.5" y="2005" width="0.4" height="15.0" fill="rgb(235,29,50)" rx="2" ry="2" />
<text  x="289.48" y="2015.5" ></text>
</g>
<g >
<title>do_mprotect_pkey (26 samples, 0.97%)</title><rect x="1106.2" y="1989" width="11.5" height="15.0" fill="rgb(253,183,40)" rx="2" ry="2" />
<text  x="1109.22" y="1999.5" ></text>
</g>
<g >
<title>unlock_page (2 samples, 0.07%)</title><rect x="67.3" y="1861" width="0.9" height="15.0" fill="rgb(205,2,2)" rx="2" ry="2" />
<text  x="70.32" y="1871.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (2 samples, 0.07%)</title><rect x="948.4" y="1909" width="0.8" height="15.0" fill="rgb(232,211,32)" rx="2" ry="2" />
<text  x="951.36" y="1919.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (18 samples, 0.67%)</title><rect x="71.7" y="2021" width="8.0" height="15.0" fill="rgb(218,30,3)" rx="2" ry="2" />
<text  x="74.73" y="2031.5" ></text>
</g>
<g >
<title>perf_event_mmap (5 samples, 0.19%)</title><rect x="1112.4" y="1957" width="2.2" height="15.0" fill="rgb(238,5,36)" rx="2" ry="2" />
<text  x="1115.39" y="1967.5" ></text>
</g>
<g >
<title>_IO_file_write@@GLIBC_2.2.5 (1 samples, 0.04%)</title><rect x="17.5" y="2037" width="0.4" height="15.0" fill="rgb(240,154,42)" rx="2" ry="2" />
<text  x="20.50" y="2047.5" ></text>
</g>
<g >
<title>generic_write_checks (1 samples, 0.04%)</title><rect x="68.2" y="1877" width="0.4" height="15.0" fill="rgb(244,75,2)" rx="2" ry="2" />
<text  x="71.21" y="1887.5" ></text>
</g>
<g >
<title>perf_iterate_ctx (1 samples, 0.04%)</title><rect x="1112.8" y="1941" width="0.5" height="15.0" fill="rgb(242,81,19)" rx="2" ry="2" />
<text  x="1115.83" y="1951.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (1 samples, 0.04%)</title><rect x="362.8" y="2037" width="0.4" height="15.0" fill="rgb(220,124,43)" rx="2" ry="2" />
<text  x="365.77" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="1893" width="0.4" height="15.0" fill="rgb(217,175,24)" rx="2" ry="2" />
<text  x="16.09" y="1903.5" ></text>
</g>
<g >
<title>std::deque&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::empty (2 samples, 0.07%)</title><rect x="932.5" y="1877" width="0.9" height="15.0" fill="rgb(216,40,34)" rx="2" ry="2" />
<text  x="935.48" y="1887.5" ></text>
</g>
<g >
<title>get_futex_key (1 samples, 0.04%)</title><rect x="328.4" y="1941" width="0.4" height="15.0" fill="rgb(250,168,3)" rx="2" ry="2" />
<text  x="331.37" y="1951.5" ></text>
</g>
<g >
<title>_IO_default_xsputn (44 samples, 1.64%)</title><rect x="143.6" y="2021" width="19.4" height="15.0" fill="rgb(235,174,29)" rx="2" ry="2" />
<text  x="146.61" y="2031.5" ></text>
</g>
<g >
<title>std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::~pair (4 samples, 0.15%)</title><rect x="966.9" y="1909" width="1.7" height="15.0" fill="rgb(219,192,30)" rx="2" ry="2" />
<text  x="969.88" y="1919.5" ></text>
</g>
<g >
<title>malloc (2 samples, 0.07%)</title><rect x="332.8" y="2037" width="0.9" height="15.0" fill="rgb(242,188,14)" rx="2" ry="2" />
<text  x="335.78" y="2047.5" ></text>
</g>
<g >
<title>change_protection_range (6 samples, 0.22%)</title><rect x="1109.3" y="1941" width="2.7" height="15.0" fill="rgb(241,119,41)" rx="2" ry="2" />
<text  x="1112.30" y="1951.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.0 (7 samples, 0.26%)</title><rect x="14.4" y="1893" width="3.1" height="15.0" fill="rgb(228,109,30)" rx="2" ry="2" />
<text  x="17.41" y="1903.5" ></text>
</g>
<g >
<title>truncate_inode_pages_range (12 samples, 0.45%)</title><rect x="22.8" y="1845" width="5.3" height="15.0" fill="rgb(209,125,43)" rx="2" ry="2" />
<text  x="25.79" y="1855.5" ></text>
</g>
<g >
<title>task_work_run (9 samples, 0.34%)</title><rect x="1072.7" y="1989" width="4.0" height="15.0" fill="rgb(233,96,23)" rx="2" ry="2" />
<text  x="1075.71" y="1999.5" ></text>
</g>
<g >
<title>__ext4_journal_start_sb (5 samples, 0.19%)</title><rect x="32.0" y="1845" width="2.3" height="15.0" fill="rgb(210,162,49)" rx="2" ry="2" />
<text  x="35.05" y="1855.5" ></text>
</g>
<g >
<title>up_read (5 samples, 0.19%)</title><rect x="1184.3" y="1989" width="2.2" height="15.0" fill="rgb(236,122,39)" rx="2" ry="2" />
<text  x="1187.27" y="1999.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (1 samples, 0.04%)</title><rect x="1164.4" y="2037" width="0.5" height="15.0" fill="rgb(227,182,33)" rx="2" ry="2" />
<text  x="1167.42" y="2047.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (16 samples, 0.60%)</title><rect x="72.6" y="1909" width="7.1" height="15.0" fill="rgb(225,219,49)" rx="2" ry="2" />
<text  x="75.62" y="1919.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (8 samples, 0.30%)</title><rect x="1147.2" y="1877" width="3.6" height="15.0" fill="rgb(218,229,43)" rx="2" ry="2" />
<text  x="1150.23" y="1887.5" ></text>
</g>
<g >
<title>xas_load (1 samples, 0.04%)</title><rect x="61.2" y="1749" width="0.4" height="15.0" fill="rgb(211,228,52)" rx="2" ry="2" />
<text  x="64.15" y="1759.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.04%)</title><rect x="803.3" y="1893" width="0.4" height="15.0" fill="rgb(238,179,46)" rx="2" ry="2" />
<text  x="806.28" y="1903.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (5 samples, 0.19%)</title><rect x="786.5" y="1893" width="2.2" height="15.0" fill="rgb(216,122,25)" rx="2" ry="2" />
<text  x="789.52" y="1903.5" ></text>
</g>
<g >
<title>load_elf_binary (4 samples, 0.15%)</title><rect x="1188.2" y="1957" width="1.8" height="15.0" fill="rgb(217,71,46)" rx="2" ry="2" />
<text  x="1191.24" y="1967.5" ></text>
</g>
<g >
<title>__inc_numa_state (1 samples, 0.04%)</title><rect x="1179.0" y="1861" width="0.4" height="15.0" fill="rgb(216,21,52)" rx="2" ry="2" />
<text  x="1181.98" y="1871.5" ></text>
</g>
<g >
<title>__x64_sys_execve (4 samples, 0.15%)</title><rect x="1188.2" y="2005" width="1.8" height="15.0" fill="rgb(223,121,24)" rx="2" ry="2" />
<text  x="1191.24" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="1989" width="0.4" height="15.0" fill="rgb(226,188,50)" rx="2" ry="2" />
<text  x="16.09" y="1999.5" ></text>
</g>
<g >
<title>_IO_default_xsputn (2 samples, 0.07%)</title><rect x="13.5" y="2021" width="0.9" height="15.0" fill="rgb(240,190,27)" rx="2" ry="2" />
<text  x="16.53" y="2031.5" ></text>
</g>
<g >
<title>ext4_alloc_da_blocks (9 samples, 0.34%)</title><rect x="1072.7" y="1925" width="4.0" height="15.0" fill="rgb(216,45,7)" rx="2" ry="2" />
<text  x="1075.71" y="1935.5" ></text>
</g>
<g >
<title>new_sync_write (85 samples, 3.18%)</title><rect x="31.2" y="1925" width="37.4" height="15.0" fill="rgb(219,220,16)" rx="2" ry="2" />
<text  x="34.17" y="1935.5" >new..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator[] (144 samples, 5.38%)</title><rect x="847.8" y="1893" width="63.5" height="15.0" fill="rgb(237,22,44)" rx="2" ry="2" />
<text  x="850.82" y="1903.5" >std::_..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.49%)</title><rect x="81.0" y="2021" width="5.7" height="15.0" fill="rgb(224,199,30)" rx="2" ry="2" />
<text  x="83.99" y="2031.5" ></text>
</g>
<g >
<title>mmput (15 samples, 0.56%)</title><rect x="1144.1" y="1973" width="6.7" height="15.0" fill="rgb(207,52,0)" rx="2" ry="2" />
<text  x="1147.14" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="341" width="0.4" height="15.0" fill="rgb(215,165,0)" rx="2" ry="2" />
<text  x="16.09" y="351.5" ></text>
</g>
<g >
<title>futex_wake (10 samples, 0.37%)</title><rect x="327.9" y="1957" width="4.4" height="15.0" fill="rgb(248,124,16)" rx="2" ry="2" />
<text  x="330.93" y="1967.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.0 (4 samples, 0.15%)</title><rect x="1188.2" y="1893" width="1.8" height="15.0" fill="rgb(206,99,53)" rx="2" ry="2" />
<text  x="1191.24" y="1903.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (28 samples, 1.05%)</title><rect x="788.7" y="1893" width="12.4" height="15.0" fill="rgb(240,46,48)" rx="2" ry="2" />
<text  x="791.73" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="1173" width="0.4" height="15.0" fill="rgb(207,163,16)" rx="2" ry="2" />
<text  x="16.09" y="1183.5" ></text>
</g>
<g >
<title>error_entry (1 samples, 0.04%)</title><rect x="1130.5" y="2037" width="0.4" height="15.0" fill="rgb(229,46,14)" rx="2" ry="2" />
<text  x="1133.47" y="2047.5" ></text>
</g>
<g >
<title>__x64_sys_write (89 samples, 3.33%)</title><rect x="30.3" y="1989" width="39.2" height="15.0" fill="rgb(226,124,15)" rx="2" ry="2" />
<text  x="33.28" y="1999.5" >__x..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (59 samples, 2.20%)</title><rect x="335.4" y="2037" width="26.0" height="15.0" fill="rgb(253,28,50)" rx="2" ry="2" />
<text  x="338.43" y="2047.5" >s..</text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="1909" width="0.4" height="15.0" fill="rgb(211,228,49)" rx="2" ry="2" />
<text  x="16.09" y="1919.5" ></text>
</g>
<g >
<title>__do_munmap (1 samples, 0.04%)</title><rect x="332.3" y="1893" width="0.5" height="15.0" fill="rgb(210,138,17)" rx="2" ry="2" />
<text  x="335.34" y="1903.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::thread::_State*, std::default_delete&lt;std::thread::_State&gt; &gt; (1 samples, 0.04%)</title><rect x="13.1" y="181" width="0.4" height="15.0" fill="rgb(236,93,49)" rx="2" ry="2" />
<text  x="16.09" y="191.5" ></text>
</g>
<g >
<title>release_pages (7 samples, 0.26%)</title><rect x="1147.7" y="1845" width="3.1" height="15.0" fill="rgb(226,164,23)" rx="2" ry="2" />
<text  x="1150.67" y="1855.5" ></text>
</g>
<g >
<title>account_entity_dequeue (1 samples, 0.04%)</title><rect x="1074.0" y="1733" width="0.5" height="15.0" fill="rgb(231,142,22)" rx="2" ry="2" />
<text  x="1077.03" y="1743.5" ></text>
</g>
<g >
<title>__GI___libc_open (12 samples, 0.45%)</title><rect x="22.8" y="2037" width="5.3" height="15.0" fill="rgb(249,84,3)" rx="2" ry="2" />
<text  x="25.79" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="1141" width="0.4" height="15.0" fill="rgb(239,194,21)" rx="2" ry="2" />
<text  x="16.09" y="1151.5" ></text>
</g>
<g >
<title>ksys_write (88 samples, 3.29%)</title><rect x="30.7" y="1973" width="38.8" height="15.0" fill="rgb(249,197,17)" rx="2" ry="2" />
<text  x="33.72" y="1983.5" >ksy..</text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (2 samples, 0.07%)</title><rect x="950.1" y="1909" width="0.9" height="15.0" fill="rgb(207,198,22)" rx="2" ry="2" />
<text  x="953.12" y="1919.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (11 samples, 0.41%)</title><rect x="72.6" y="1845" width="4.9" height="15.0" fill="rgb(215,2,22)" rx="2" ry="2" />
<text  x="75.62" y="1855.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (1 samples, 0.04%)</title><rect x="49.2" y="1765" width="0.5" height="15.0" fill="rgb(219,213,52)" rx="2" ry="2" />
<text  x="52.25" y="1775.5" ></text>
</g>
<g >
<title>psi_task_change (1 samples, 0.04%)</title><rect x="84.5" y="1877" width="0.5" height="15.0" fill="rgb(218,156,46)" rx="2" ry="2" />
<text  x="87.52" y="1887.5" ></text>
</g>
<g >
<title>rwsem_down_write_slowpath (4 samples, 0.15%)</title><rect x="1106.7" y="1957" width="1.7" height="15.0" fill="rgb(221,93,2)" rx="2" ry="2" />
<text  x="1109.66" y="1967.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (3 samples, 0.11%)</title><rect x="736.7" y="1829" width="1.3" height="15.0" fill="rgb(222,62,11)" rx="2" ry="2" />
<text  x="739.70" y="1839.5" ></text>
</g>
<g >
<title>schedule_tail (4 samples, 0.15%)</title><rect x="70.0" y="2005" width="1.7" height="15.0" fill="rgb(212,174,8)" rx="2" ry="2" />
<text  x="72.97" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="645" width="0.4" height="15.0" fill="rgb(216,41,54)" rx="2" ry="2" />
<text  x="16.09" y="655.5" ></text>
</g>
<g >
<title>ext4_block_write_begin (9 samples, 0.34%)</title><rect x="34.3" y="1845" width="3.9" height="15.0" fill="rgb(241,32,53)" rx="2" ry="2" />
<text  x="37.25" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="837" width="0.4" height="15.0" fill="rgb(243,68,11)" rx="2" ry="2" />
<text  x="16.09" y="847.5" ></text>
</g>
<g >
<title>vmacache_update (1 samples, 0.04%)</title><rect x="1166.2" y="1957" width="0.4" height="15.0" fill="rgb(240,0,44)" rx="2" ry="2" />
<text  x="1169.19" y="1967.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.0 (4 samples, 0.15%)</title><rect x="909.6" y="1765" width="1.7" height="15.0" fill="rgb(235,61,4)" rx="2" ry="2" />
<text  x="912.55" y="1775.5" ></text>
</g>
<g >
<title>io_schedule (4 samples, 0.15%)</title><rect x="77.5" y="1861" width="1.7" height="15.0" fill="rgb(235,39,12)" rx="2" ry="2" />
<text  x="80.47" y="1871.5" ></text>
</g>
<g >
<title>__do_execve_file.isra.0 (4 samples, 0.15%)</title><rect x="1188.2" y="1989" width="1.8" height="15.0" fill="rgb(242,25,20)" rx="2" ry="2" />
<text  x="1191.24" y="1999.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.04%)</title><rect x="1117.2" y="1925" width="0.5" height="15.0" fill="rgb(216,38,2)" rx="2" ry="2" />
<text  x="1120.24" y="1935.5" ></text>
</g>
<g >
<title>update_process_times (2 samples, 0.07%)</title><rect x="737.1" y="1781" width="0.9" height="15.0" fill="rgb(215,54,18)" rx="2" ry="2" />
<text  x="740.14" y="1791.5" ></text>
</g>
<g >
<title>all (2,676 samples, 100%)</title><rect x="10.0" y="2085" width="1180.0" height="15.0" fill="rgb(251,24,24)" rx="2" ry="2" />
<text  x="13.00" y="2095.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (4 samples, 0.15%)</title><rect x="1103.6" y="2021" width="1.7" height="15.0" fill="rgb(254,86,28)" rx="2" ry="2" />
<text  x="1106.57" y="2031.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (2 samples, 0.07%)</title><rect x="1140.6" y="1925" width="0.9" height="15.0" fill="rgb(243,151,36)" rx="2" ry="2" />
<text  x="1143.61" y="1935.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (3 samples, 0.11%)</title><rect x="736.7" y="1845" width="1.3" height="15.0" fill="rgb(247,42,42)" rx="2" ry="2" />
<text  x="739.70" y="1855.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (19 samples, 0.71%)</title><rect x="38.7" y="1781" width="8.3" height="15.0" fill="rgb(210,122,28)" rx="2" ry="2" />
<text  x="41.66" y="1791.5" ></text>
</g>
<g >
<title>xas_store (1 samples, 0.04%)</title><rect x="24.6" y="1813" width="0.4" height="15.0" fill="rgb(210,192,13)" rx="2" ry="2" />
<text  x="27.55" y="1823.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (3 samples, 0.11%)</title><rect x="736.7" y="1877" width="1.3" height="15.0" fill="rgb(254,76,2)" rx="2" ry="2" />
<text  x="739.70" y="1887.5" ></text>
</g>
<g >
<title>native_write_msr (4 samples, 0.15%)</title><rect x="799.3" y="1717" width="1.8" height="15.0" fill="rgb(229,27,32)" rx="2" ry="2" />
<text  x="802.31" y="1727.5" ></text>
</g>
<g >
<title>mprotect_fixup (19 samples, 0.71%)</title><rect x="1108.9" y="1973" width="8.3" height="15.0" fill="rgb(221,1,2)" rx="2" ry="2" />
<text  x="1111.86" y="1983.5" ></text>
</g>
<g >
<title>std::queue&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::deque&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::pop (11 samples, 0.41%)</title><rect x="936.0" y="1893" width="4.9" height="15.0" fill="rgb(236,62,40)" rx="2" ry="2" />
<text  x="939.01" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="1205" width="0.4" height="15.0" fill="rgb(207,28,12)" rx="2" ry="2" />
<text  x="16.09" y="1215.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="286.5" y="1989" width="0.4" height="15.0" fill="rgb(253,218,45)" rx="2" ry="2" />
<text  x="289.48" y="1999.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (2 samples, 0.07%)</title><rect x="61.6" y="1765" width="0.9" height="15.0" fill="rgb(229,30,14)" rx="2" ry="2" />
<text  x="64.59" y="1775.5" ></text>
</g>
<g >
<title>__x64_sys_futex (11 samples, 0.41%)</title><rect x="81.9" y="1989" width="4.8" height="15.0" fill="rgb(248,69,34)" rx="2" ry="2" />
<text  x="84.88" y="1999.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (1 samples, 0.04%)</title><rect x="802.8" y="1893" width="0.5" height="15.0" fill="rgb(229,38,16)" rx="2" ry="2" />
<text  x="805.84" y="1903.5" ></text>
</g>
<g >
<title>mem_cgroup_charge_statistics (1 samples, 0.04%)</title><rect x="48.8" y="1765" width="0.4" height="15.0" fill="rgb(249,74,13)" rx="2" ry="2" />
<text  x="51.80" y="1775.5" ></text>
</g>
<g >
<title>ext4_invalidatepage (6 samples, 0.22%)</title><rect x="25.4" y="1813" width="2.7" height="15.0" fill="rgb(216,124,44)" rx="2" ry="2" />
<text  x="28.43" y="1823.5" ></text>
</g>
<g >
<title>__set_page_dirty (8 samples, 0.30%)</title><rect x="60.7" y="1781" width="3.5" height="15.0" fill="rgb(235,102,50)" rx="2" ry="2" />
<text  x="63.71" y="1791.5" ></text>
</g>
<g >
<title>std::deque&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::emplace_back&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (9 samples, 0.34%)</title><rect x="1080.6" y="1957" width="4.0" height="15.0" fill="rgb(248,198,53)" rx="2" ry="2" />
<text  x="1083.64" y="1967.5" ></text>
</g>
<g >
<title>xas_set_mark (1 samples, 0.04%)</title><rect x="63.8" y="1765" width="0.4" height="15.0" fill="rgb(211,67,1)" rx="2" ry="2" />
<text  x="66.80" y="1775.5" ></text>
</g>
<g >
<title>_int_free (3 samples, 0.11%)</title><rect x="937.3" y="1829" width="1.4" height="15.0" fill="rgb(229,216,13)" rx="2" ry="2" />
<text  x="940.33" y="1839.5" ></text>
</g>
<g >
<title>down_read_trylock (1 samples, 0.04%)</title><rect x="1104.9" y="1941" width="0.4" height="15.0" fill="rgb(210,214,21)" rx="2" ry="2" />
<text  x="1107.90" y="1951.5" ></text>
</g>
<g >
<title>page_add_new_anon_rmap (1 samples, 0.04%)</title><rect x="1183.8" y="1925" width="0.5" height="15.0" fill="rgb(243,90,21)" rx="2" ry="2" />
<text  x="1186.83" y="1935.5" ></text>
</g>
<g >
<title>__clone (7 samples, 0.26%)</title><rect x="14.4" y="1973" width="3.1" height="15.0" fill="rgb(221,83,27)" rx="2" ry="2" />
<text  x="17.41" y="1983.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void  (1,359 samples, 50.78%)</title><rect x="369.8" y="1973" width="599.3" height="15.0" fill="rgb(243,25,39)" rx="2" ry="2" />
<text  x="372.82" y="1983.5" >std::thread::_Invoker&lt;std::tuple&lt;void </text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="485" width="0.4" height="15.0" fill="rgb(226,139,24)" rx="2" ry="2" />
<text  x="16.09" y="495.5" ></text>
</g>
<g >
<title>malloc (23 samples, 0.86%)</title><rect x="1150.8" y="2053" width="10.1" height="15.0" fill="rgb(213,172,29)" rx="2" ry="2" />
<text  x="1153.75" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="1861" width="0.4" height="15.0" fill="rgb(217,109,15)" rx="2" ry="2" />
<text  x="16.09" y="1871.5" ></text>
</g>
<g >
<title>deactivate_task (1 samples, 0.04%)</title><rect x="1074.0" y="1765" width="0.5" height="15.0" fill="rgb(252,0,42)" rx="2" ry="2" />
<text  x="1077.03" y="1775.5" ></text>
</g>
<g >
<title>free_pgd_range (1 samples, 0.04%)</title><rect x="1144.1" y="1925" width="0.5" height="15.0" fill="rgb(241,227,46)" rx="2" ry="2" />
<text  x="1147.14" y="1935.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.15%)</title><rect x="1074.9" y="1701" width="1.8" height="15.0" fill="rgb(217,157,48)" rx="2" ry="2" />
<text  x="1077.91" y="1711.5" ></text>
</g>
<g >
<title>notify_change (12 samples, 0.45%)</title><rect x="22.8" y="1893" width="5.3" height="15.0" fill="rgb(222,25,43)" rx="2" ry="2" />
<text  x="25.79" y="1903.5" ></text>
</g>
<g >
<title>rmqueue (1 samples, 0.04%)</title><rect x="46.2" y="1749" width="0.4" height="15.0" fill="rgb(226,54,0)" rx="2" ry="2" />
<text  x="49.16" y="1759.5" ></text>
</g>
<g >
<title>rwsem_wake.isra.0 (1 samples, 0.04%)</title><rect x="1117.2" y="1957" width="0.5" height="15.0" fill="rgb(212,23,33)" rx="2" ry="2" />
<text  x="1120.24" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="1237" width="0.4" height="15.0" fill="rgb(237,128,30)" rx="2" ry="2" />
<text  x="16.09" y="1247.5" ></text>
</g>
<g >
<title>__vfs_read (16 samples, 0.60%)</title><rect x="72.6" y="1941" width="7.1" height="15.0" fill="rgb(234,185,8)" rx="2" ry="2" />
<text  x="75.62" y="1951.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void  (1,359 samples, 50.78%)</title><rect x="369.8" y="1957" width="599.3" height="15.0" fill="rgb(235,216,25)" rx="2" ry="2" />
<text  x="372.82" y="1967.5" >std::thread::_Invoker&lt;std::tuple&lt;void </text>
</g>
<g >
<title>std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair (1 samples, 0.04%)</title><rect x="931.2" y="1893" width="0.4" height="15.0" fill="rgb(238,98,44)" rx="2" ry="2" />
<text  x="934.16" y="1903.5" ></text>
</g>
<g >
<title>free_pud_range (1 samples, 0.04%)</title><rect x="1144.1" y="1909" width="0.5" height="15.0" fill="rgb(225,135,16)" rx="2" ry="2" />
<text  x="1147.14" y="1919.5" ></text>
</g>
<g >
<title>ext4_mark_inode_dirty (12 samples, 0.45%)</title><rect x="53.2" y="1797" width="5.3" height="15.0" fill="rgb(233,80,9)" rx="2" ry="2" />
<text  x="56.21" y="1807.5" ></text>
</g>
<g >
<title>do_user_addr_fault (23 samples, 0.86%)</title><rect x="1131.8" y="1989" width="10.1" height="15.0" fill="rgb(217,104,3)" rx="2" ry="2" />
<text  x="1134.79" y="1999.5" ></text>
</g>
<g >
<title>native_write_msr (1 samples, 0.04%)</title><rect x="13.1" y="37" width="0.4" height="15.0" fill="rgb(237,179,39)" rx="2" ry="2" />
<text  x="16.09" y="47.5" ></text>
</g>
<g >
<title>mem_cgroup_uncharge_list (1 samples, 0.04%)</title><rect x="24.1" y="1797" width="0.5" height="15.0" fill="rgb(243,85,5)" rx="2" ry="2" />
<text  x="27.11" y="1807.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (4 samples, 0.15%)</title><rect x="799.3" y="1845" width="1.8" height="15.0" fill="rgb(206,27,2)" rx="2" ry="2" />
<text  x="802.31" y="1855.5" ></text>
</g>
<g >
<title>__pagevec_release (4 samples, 0.15%)</title><rect x="22.8" y="1829" width="1.8" height="15.0" fill="rgb(254,129,28)" rx="2" ry="2" />
<text  x="25.79" y="1839.5" ></text>
</g>
<g >
<title>std::move&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;&amp;&gt; (1 samples, 0.04%)</title><rect x="1084.6" y="1957" width="0.5" height="15.0" fill="rgb(220,36,10)" rx="2" ry="2" />
<text  x="1087.61" y="1967.5" ></text>
</g>
<g >
<title>__mod_memcg_state (1 samples, 0.04%)</title><rect x="62.5" y="1733" width="0.4" height="15.0" fill="rgb(249,34,15)" rx="2" ry="2" />
<text  x="65.47" y="1743.5" ></text>
</g>
<g >
<title>schedule (6 samples, 0.22%)</title><rect x="1074.0" y="1797" width="2.7" height="15.0" fill="rgb(252,81,27)" rx="2" ry="2" />
<text  x="1077.03" y="1807.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (14 samples, 0.52%)</title><rect x="803.7" y="1893" width="6.2" height="15.0" fill="rgb(215,66,47)" rx="2" ry="2" />
<text  x="806.72" y="1903.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (17 samples, 0.64%)</title><rect x="1171.9" y="1909" width="7.5" height="15.0" fill="rgb(206,131,5)" rx="2" ry="2" />
<text  x="1174.92" y="1919.5" ></text>
</g>
<g >
<title>free_unref_page_commit (1 samples, 0.04%)</title><rect x="23.2" y="1781" width="0.5" height="15.0" fill="rgb(233,227,22)" rx="2" ry="2" />
<text  x="26.23" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="1445" width="0.4" height="15.0" fill="rgb(218,111,40)" rx="2" ry="2" />
<text  x="16.09" y="1455.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="1253" width="0.4" height="15.0" fill="rgb(228,19,36)" rx="2" ry="2" />
<text  x="16.09" y="1263.5" ></text>
</g>
<g >
<title>call_rcu (1 samples, 0.04%)</title><rect x="24.6" y="1797" width="0.4" height="15.0" fill="rgb(224,17,9)" rx="2" ry="2" />
<text  x="27.55" y="1807.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1,359 samples, 50.78%)</title><rect x="369.8" y="2005" width="599.3" height="15.0" fill="rgb(217,10,9)" rx="2" ry="2" />
<text  x="372.82" y="2015.5" >[libstdc++.so.6.0.28]</text>
</g>
<g >
<title>mem_cgroup_charge_statistics (1 samples, 0.04%)</title><rect x="1139.7" y="1909" width="0.5" height="15.0" fill="rgb(236,37,0)" rx="2" ry="2" />
<text  x="1142.73" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="1605" width="0.4" height="15.0" fill="rgb(235,111,20)" rx="2" ry="2" />
<text  x="16.09" y="1615.5" ></text>
</g>
<g >
<title>unmap_vmas (14 samples, 0.52%)</title><rect x="1144.6" y="1941" width="6.2" height="15.0" fill="rgb(206,104,18)" rx="2" ry="2" />
<text  x="1147.58" y="1951.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_deallocate_node (1 samples, 0.04%)</title><rect x="939.5" y="1845" width="0.5" height="15.0" fill="rgb(233,149,38)" rx="2" ry="2" />
<text  x="942.54" y="1855.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (3 samples, 0.11%)</title><rect x="361.4" y="2037" width="1.4" height="15.0" fill="rgb(254,197,43)" rx="2" ry="2" />
<text  x="364.44" y="2047.5" ></text>
</g>
<g >
<title>__vm_munmap (1 samples, 0.04%)</title><rect x="332.3" y="1909" width="0.5" height="15.0" fill="rgb(228,65,25)" rx="2" ry="2" />
<text  x="335.34" y="1919.5" ></text>
</g>
<g >
<title>std::deque&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_S_max_size (1 samples, 0.04%)</title><rect x="1083.7" y="1909" width="0.5" height="15.0" fill="rgb(208,65,21)" rx="2" ry="2" />
<text  x="1086.73" y="1919.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void  (1,359 samples, 50.78%)</title><rect x="369.8" y="2037" width="599.3" height="15.0" fill="rgb(236,75,39)" rx="2" ry="2" />
<text  x="372.82" y="2047.5" >std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void </text>
</g>
<g >
<title>__lru_cache_add (1 samples, 0.04%)</title><rect x="1139.3" y="1909" width="0.4" height="15.0" fill="rgb(221,122,4)" rx="2" ry="2" />
<text  x="1142.29" y="1919.5" ></text>
</g>
<g >
<title>__do_page_fault (23 samples, 0.86%)</title><rect x="1131.8" y="2005" width="10.1" height="15.0" fill="rgb(250,149,21)" rx="2" ry="2" />
<text  x="1134.79" y="2015.5" ></text>
</g>
<g >
<title>page_fault (49 samples, 1.83%)</title><rect x="1164.9" y="2037" width="21.6" height="15.0" fill="rgb(222,63,16)" rx="2" ry="2" />
<text  x="1167.87" y="2047.5" >p..</text>
</g>
<g >
<title>up_write (1 samples, 0.04%)</title><rect x="1117.2" y="1973" width="0.5" height="15.0" fill="rgb(238,43,11)" rx="2" ry="2" />
<text  x="1120.24" y="1983.5" ></text>
</g>
<g >
<title>vfs_read (17 samples, 0.64%)</title><rect x="72.2" y="1957" width="7.5" height="15.0" fill="rgb(225,156,48)" rx="2" ry="2" />
<text  x="75.17" y="1967.5" ></text>
</g>
<g >
<title>try_to_wake_up (8 samples, 0.30%)</title><rect x="328.8" y="1925" width="3.5" height="15.0" fill="rgb(250,177,43)" rx="2" ry="2" />
<text  x="331.81" y="1935.5" ></text>
</g>
<g >
<title>std::deque&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::max_size (1 samples, 0.04%)</title><rect x="1083.7" y="1925" width="0.5" height="15.0" fill="rgb(217,21,54)" rx="2" ry="2" />
<text  x="1086.73" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="1125" width="0.4" height="15.0" fill="rgb(226,11,45)" rx="2" ry="2" />
<text  x="16.09" y="1135.5" ></text>
</g>
<g >
<title>uncharge_page (2 samples, 0.07%)</title><rect x="1149.9" y="1813" width="0.9" height="15.0" fill="rgb(219,52,49)" rx="2" ry="2" />
<text  x="1152.87" y="1823.5" ></text>
</g>
<g >
<title>vm_normal_page (1 samples, 0.04%)</title><rect x="1144.6" y="1893" width="0.4" height="15.0" fill="rgb(220,168,6)" rx="2" ry="2" />
<text  x="1147.58" y="1903.5" ></text>
</g>
<g >
<title>std::queue&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::deque&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::empty (3 samples, 0.11%)</title><rect x="932.5" y="1893" width="1.3" height="15.0" fill="rgb(218,139,44)" rx="2" ry="2" />
<text  x="935.48" y="1903.5" ></text>
</g>
<g >
<title>__add_to_page_cache_locked (4 samples, 0.15%)</title><rect x="47.5" y="1797" width="1.7" height="15.0" fill="rgb(212,68,16)" rx="2" ry="2" />
<text  x="50.48" y="1807.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (85 samples, 3.18%)</title><rect x="31.2" y="1909" width="37.4" height="15.0" fill="rgb(230,0,45)" rx="2" ry="2" />
<text  x="34.17" y="1919.5" >ext..</text>
</g>
<g >
<title>iov_iter_copy_from_user_atomic (5 samples, 0.19%)</title><rect x="65.1" y="1861" width="2.2" height="15.0" fill="rgb(225,19,52)" rx="2" ry="2" />
<text  x="68.12" y="1871.5" ></text>
</g>
<g >
<title>wake_up_q (1 samples, 0.04%)</title><rect x="1117.2" y="1941" width="0.5" height="15.0" fill="rgb(211,154,27)" rx="2" ry="2" />
<text  x="1120.24" y="1951.5" ></text>
</g>
<g >
<title>account_page_dirtied (3 samples, 0.11%)</title><rect x="62.5" y="1765" width="1.3" height="15.0" fill="rgb(207,84,54)" rx="2" ry="2" />
<text  x="65.47" y="1775.5" ></text>
</g>
<g >
<title>tick_sched_timer (2 samples, 0.07%)</title><rect x="737.1" y="1813" width="0.9" height="15.0" fill="rgb(205,147,26)" rx="2" ry="2" />
<text  x="740.14" y="1823.5" ></text>
</g>
<g >
<title>prep_new_page (1 samples, 0.04%)</title><rect x="45.7" y="1749" width="0.5" height="15.0" fill="rgb(224,113,51)" rx="2" ry="2" />
<text  x="48.72" y="1759.5" ></text>
</g>
<g >
<title>release_pages (3 samples, 0.11%)</title><rect x="23.2" y="1813" width="1.4" height="15.0" fill="rgb(238,41,12)" rx="2" ry="2" />
<text  x="26.23" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="901" width="0.4" height="15.0" fill="rgb(223,75,29)" rx="2" ry="2" />
<text  x="16.09" y="911.5" ></text>
</g>
<g >
<title>__vsprintf_internal (2 samples, 0.07%)</title><rect x="801.1" y="1893" width="0.9" height="15.0" fill="rgb(213,189,21)" rx="2" ry="2" />
<text  x="804.08" y="1903.5" ></text>
</g>
<g >
<title>__handle_mm_fault (21 samples, 0.78%)</title><rect x="1132.7" y="1957" width="9.2" height="15.0" fill="rgb(238,178,40)" rx="2" ry="2" />
<text  x="1135.68" y="1967.5" ></text>
</g>
<g >
<title>std::deque&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::pop_front (11 samples, 0.41%)</title><rect x="936.0" y="1877" width="4.9" height="15.0" fill="rgb(212,13,9)" rx="2" ry="2" />
<text  x="939.01" y="1887.5" ></text>
</g>
<g >
<title>__task_rq_lock (1 samples, 0.04%)</title><rect x="331.5" y="1909" width="0.4" height="15.0" fill="rgb(252,43,23)" rx="2" ry="2" />
<text  x="334.46" y="1919.5" ></text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.04%)</title><rect x="13.1" y="149" width="0.4" height="15.0" fill="rgb(233,85,3)" rx="2" ry="2" />
<text  x="16.09" y="159.5" ></text>
</g>
<g >
<title>change_protection (8 samples, 0.30%)</title><rect x="1108.9" y="1957" width="3.5" height="15.0" fill="rgb(244,212,15)" rx="2" ry="2" />
<text  x="1111.86" y="1967.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.04%)</title><rect x="331.5" y="1893" width="0.4" height="15.0" fill="rgb(205,136,42)" rx="2" ry="2" />
<text  x="334.46" y="1903.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;&amp;, std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*&gt;::_M_set_node (2 samples, 0.07%)</title><rect x="940.0" y="1845" width="0.9" height="15.0" fill="rgb(211,213,22)" rx="2" ry="2" />
<text  x="942.98" y="1855.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.15%)</title><rect x="799.3" y="1749" width="1.8" height="15.0" fill="rgb(254,192,24)" rx="2" ry="2" />
<text  x="802.31" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="1189" width="0.4" height="15.0" fill="rgb(226,201,31)" rx="2" ry="2" />
<text  x="16.09" y="1199.5" ></text>
</g>
<g >
<title>ret_from_fork (7 samples, 0.26%)</title><rect x="14.4" y="1957" width="3.1" height="15.0" fill="rgb(208,190,51)" rx="2" ry="2" />
<text  x="17.41" y="1967.5" ></text>
</g>
<g >
<title>touch_atime (1 samples, 0.04%)</title><rect x="79.2" y="1861" width="0.5" height="15.0" fill="rgb(238,227,22)" rx="2" ry="2" />
<text  x="82.23" y="1871.5" ></text>
</g>
<g >
<title>mem_cgroup_commit_charge (1 samples, 0.04%)</title><rect x="1139.7" y="1925" width="0.5" height="15.0" fill="rgb(217,136,53)" rx="2" ry="2" />
<text  x="1142.73" y="1935.5" ></text>
</g>
<g >
<title>do_syscall_64 (27 samples, 1.01%)</title><rect x="1106.2" y="2021" width="11.9" height="15.0" fill="rgb(214,34,8)" rx="2" ry="2" />
<text  x="1109.22" y="2031.5" ></text>
</g>
<g >
<title>_IO_setb (1 samples, 0.04%)</title><rect x="21.9" y="2037" width="0.4" height="15.0" fill="rgb(248,162,49)" rx="2" ry="2" />
<text  x="24.91" y="2047.5" ></text>
</g>
<g >
<title>page_remove_rmap (2 samples, 0.07%)</title><rect x="1146.3" y="1877" width="0.9" height="15.0" fill="rgb(225,187,42)" rx="2" ry="2" />
<text  x="1149.35" y="1887.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.0 (1 samples, 0.04%)</title><rect x="13.1" y="85" width="0.4" height="15.0" fill="rgb(244,210,31)" rx="2" ry="2" />
<text  x="16.09" y="95.5" ></text>
</g>
<g >
<title>ret_from_fork (4 samples, 0.15%)</title><rect x="70.0" y="2021" width="1.7" height="15.0" fill="rgb(248,102,29)" rx="2" ry="2" />
<text  x="72.97" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="1765" width="0.4" height="15.0" fill="rgb(221,216,31)" rx="2" ry="2" />
<text  x="16.09" y="1775.5" ></text>
</g>
<g >
<title>prep_new_page (1 samples, 0.04%)</title><rect x="1137.1" y="1877" width="0.4" height="15.0" fill="rgb(228,202,13)" rx="2" ry="2" />
<text  x="1140.09" y="1887.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (1 samples, 0.04%)</title><rect x="367.6" y="2005" width="0.5" height="15.0" fill="rgb(229,147,13)" rx="2" ry="2" />
<text  x="370.62" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="437" width="0.4" height="15.0" fill="rgb(252,180,26)" rx="2" ry="2" />
<text  x="16.09" y="447.5" ></text>
</g>
<g >
<title>search_binary_handler (1 samples, 0.04%)</title><rect x="332.3" y="1973" width="0.5" height="15.0" fill="rgb(231,180,41)" rx="2" ry="2" />
<text  x="335.34" y="1983.5" ></text>
</g>
<g >
<title>mem_cgroup_commit_charge (2 samples, 0.07%)</title><rect x="48.4" y="1781" width="0.8" height="15.0" fill="rgb(209,207,46)" rx="2" ry="2" />
<text  x="51.36" y="1791.5" ></text>
</g>
<g >
<title>get_page_from_freelist (15 samples, 0.56%)</title><rect x="1172.8" y="1893" width="6.6" height="15.0" fill="rgb(219,5,52)" rx="2" ry="2" />
<text  x="1175.80" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="421" width="0.4" height="15.0" fill="rgb(222,128,38)" rx="2" ry="2" />
<text  x="16.09" y="431.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (5 samples, 0.19%)</title><rect x="65.1" y="1845" width="2.2" height="15.0" fill="rgb(219,113,24)" rx="2" ry="2" />
<text  x="68.12" y="1855.5" ></text>
</g>
<g >
<title>rcu_segcblist_enqueue (1 samples, 0.04%)</title><rect x="24.6" y="1765" width="0.4" height="15.0" fill="rgb(248,222,36)" rx="2" ry="2" />
<text  x="27.55" y="1775.5" ></text>
</g>
<g >
<title>mpage_submit_page (2 samples, 0.07%)</title><rect x="1073.1" y="1813" width="0.9" height="15.0" fill="rgb(237,90,52)" rx="2" ry="2" />
<text  x="1076.15" y="1823.5" ></text>
</g>
<g >
<title>perf_iterate_ctx (2 samples, 0.07%)</title><rect x="1113.7" y="1925" width="0.9" height="15.0" fill="rgb(249,200,6)" rx="2" ry="2" />
<text  x="1116.71" y="1935.5" ></text>
</g>
<g >
<title>__x64_sys_futex (1 samples, 0.04%)</title><rect x="81.0" y="2005" width="0.4" height="15.0" fill="rgb(205,143,37)" rx="2" ry="2" />
<text  x="83.99" y="2015.5" ></text>
</g>
<g >
<title>anon_vma_interval_tree_insert (2 samples, 0.07%)</title><rect x="1116.4" y="1941" width="0.8" height="15.0" fill="rgb(220,59,21)" rx="2" ry="2" />
<text  x="1119.36" y="1951.5" ></text>
</g>
<g >
<title>should_failslab (1 samples, 0.04%)</title><rect x="36.0" y="1781" width="0.5" height="15.0" fill="rgb(209,86,5)" rx="2" ry="2" />
<text  x="39.02" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="1797" width="0.4" height="15.0" fill="rgb(227,66,10)" rx="2" ry="2" />
<text  x="16.09" y="1807.5" ></text>
</g>
<g >
<title>dequeue_task_fair (3 samples, 0.11%)</title><rect x="83.2" y="1877" width="1.3" height="15.0" fill="rgb(225,128,40)" rx="2" ry="2" />
<text  x="86.20" y="1887.5" ></text>
</g>
<g >
<title>new_slab (1 samples, 0.04%)</title><rect x="35.1" y="1733" width="0.5" height="15.0" fill="rgb(249,137,18)" rx="2" ry="2" />
<text  x="38.13" y="1743.5" ></text>
</g>
<g >
<title>__filemap_fdatawrite_range (9 samples, 0.34%)</title><rect x="1072.7" y="1893" width="4.0" height="15.0" fill="rgb(237,139,49)" rx="2" ry="2" />
<text  x="1075.71" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="389" width="0.4" height="15.0" fill="rgb(216,202,32)" rx="2" ry="2" />
<text  x="16.09" y="399.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.04%)</title><rect x="1132.7" y="1941" width="0.4" height="15.0" fill="rgb(228,198,28)" rx="2" ry="2" />
<text  x="1135.68" y="1951.5" ></text>
</g>
<g >
<title>CSV2JSON::ReadCSV (19 samples, 0.71%)</title><rect x="1076.7" y="2005" width="8.4" height="15.0" fill="rgb(216,118,35)" rx="2" ry="2" />
<text  x="1079.67" y="2015.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="786.1" y="1861" width="0.4" height="15.0" fill="rgb(221,197,5)" rx="2" ry="2" />
<text  x="789.08" y="1871.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (4 samples, 0.15%)</title><rect x="909.6" y="1877" width="1.7" height="15.0" fill="rgb(219,112,19)" rx="2" ry="2" />
<text  x="912.55" y="1887.5" ></text>
</g>
<g >
<title>from_kgid (1 samples, 0.04%)</title><rect x="56.7" y="1749" width="0.5" height="15.0" fill="rgb(223,23,20)" rx="2" ry="2" />
<text  x="59.74" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="1957" width="0.4" height="15.0" fill="rgb(224,44,0)" rx="2" ry="2" />
<text  x="16.09" y="1967.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.04%)</title><rect x="1078.0" y="1989" width="0.4" height="15.0" fill="rgb(214,79,54)" rx="2" ry="2" />
<text  x="1081.00" y="1999.5" ></text>
</g>
<g >
<title>__schedule (4 samples, 0.15%)</title><rect x="77.5" y="1829" width="1.7" height="15.0" fill="rgb(206,205,27)" rx="2" ry="2" />
<text  x="80.47" y="1839.5" ></text>
</g>
<g >
<title>finish_task_switch (4 samples, 0.15%)</title><rect x="70.0" y="1989" width="1.7" height="15.0" fill="rgb(217,117,52)" rx="2" ry="2" />
<text  x="72.97" y="1999.5" ></text>
</g>
<g >
<title>ext4_releasepage (2 samples, 0.07%)</title><rect x="26.8" y="1765" width="0.8" height="15.0" fill="rgb(228,166,38)" rx="2" ry="2" />
<text  x="29.76" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="949" width="0.4" height="15.0" fill="rgb(222,224,27)" rx="2" ry="2" />
<text  x="16.09" y="959.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (4 samples, 0.15%)</title><rect x="799.3" y="1861" width="1.8" height="15.0" fill="rgb(225,18,7)" rx="2" ry="2" />
<text  x="802.31" y="1871.5" ></text>
</g>
<g >
<title>__vfprintf_internal (19 samples, 0.71%)</title><rect x="1094.3" y="1989" width="8.4" height="15.0" fill="rgb(205,182,53)" rx="2" ry="2" />
<text  x="1097.31" y="1999.5" ></text>
</g>
<g >
<title>free_unref_page_list (3 samples, 0.11%)</title><rect x="1148.1" y="1829" width="1.3" height="15.0" fill="rgb(218,47,29)" rx="2" ry="2" />
<text  x="1151.11" y="1839.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (9 samples, 0.34%)</title><rect x="1072.7" y="2005" width="4.0" height="15.0" fill="rgb(210,45,45)" rx="2" ry="2" />
<text  x="1075.71" y="2015.5" ></text>
</g>
<g >
<title>std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair (1 samples, 0.04%)</title><rect x="966.4" y="1909" width="0.5" height="15.0" fill="rgb(251,32,33)" rx="2" ry="2" />
<text  x="969.43" y="1919.5" ></text>
</g>
<g >
<title>_IO_default_xsputn (221 samples, 8.26%)</title><rect x="974.4" y="2053" width="97.4" height="15.0" fill="rgb(248,211,26)" rx="2" ry="2" />
<text  x="977.37" y="2063.5" >_IO_default..</text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="1301" width="0.4" height="15.0" fill="rgb(224,4,29)" rx="2" ry="2" />
<text  x="16.09" y="1311.5" ></text>
</g>
<g >
<title>truncate_cleanup_page (6 samples, 0.22%)</title><rect x="25.4" y="1829" width="2.7" height="15.0" fill="rgb(207,130,29)" rx="2" ry="2" />
<text  x="28.43" y="1839.5" ></text>
</g>
<g >
<title>generic_perform_write (84 samples, 3.14%)</title><rect x="31.2" y="1877" width="37.0" height="15.0" fill="rgb(216,125,49)" rx="2" ry="2" />
<text  x="34.17" y="1887.5" >gen..</text>
</g>
<g >
<title>get_mem_cgroup_from_mm (1 samples, 0.04%)</title><rect x="1140.6" y="1893" width="0.5" height="15.0" fill="rgb(250,163,12)" rx="2" ry="2" />
<text  x="1143.61" y="1903.5" ></text>
</g>
<g >
<title>error_entry (1 samples, 0.04%)</title><rect x="1118.1" y="2037" width="0.5" height="15.0" fill="rgb(248,220,45)" rx="2" ry="2" />
<text  x="1121.12" y="2047.5" ></text>
</g>
<g >
<title>page_fault (25 samples, 0.93%)</title><rect x="1130.9" y="2037" width="11.0" height="15.0" fill="rgb(228,228,36)" rx="2" ry="2" />
<text  x="1133.91" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="1461" width="0.4" height="15.0" fill="rgb(246,142,33)" rx="2" ry="2" />
<text  x="16.09" y="1471.5" ></text>
</g>
<g >
<title>C2J (2,672 samples, 99.85%)</title><rect x="10.0" y="2069" width="1178.2" height="15.0" fill="rgb(241,160,49)" rx="2" ry="2" />
<text  x="13.00" y="2079.5" >C2J</text>
</g>
<g >
<title>finish_task_switch (4 samples, 0.15%)</title><rect x="77.5" y="1813" width="1.7" height="15.0" fill="rgb(205,1,20)" rx="2" ry="2" />
<text  x="80.47" y="1823.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (4 samples, 0.15%)</title><rect x="909.6" y="1781" width="1.7" height="15.0" fill="rgb(226,161,11)" rx="2" ry="2" />
<text  x="912.55" y="1791.5" ></text>
</g>
<g >
<title>ext4_journal_check_start (1 samples, 0.04%)</title><rect x="52.8" y="1781" width="0.4" height="15.0" fill="rgb(246,177,47)" rx="2" ry="2" />
<text  x="55.77" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="613" width="0.4" height="15.0" fill="rgb(230,77,7)" rx="2" ry="2" />
<text  x="16.09" y="623.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="1493" width="0.4" height="15.0" fill="rgb(245,37,13)" rx="2" ry="2" />
<text  x="16.09" y="1503.5" ></text>
</g>
<g >
<title>sysmalloc (62 samples, 2.32%)</title><rect x="1160.9" y="2053" width="27.3" height="15.0" fill="rgb(206,29,12)" rx="2" ry="2" />
<text  x="1163.90" y="2063.5" >s..</text>
</g>
<g >
<title>task_ctx_sched_out (1 samples, 0.04%)</title><rect x="82.8" y="1877" width="0.4" height="15.0" fill="rgb(224,214,6)" rx="2" ry="2" />
<text  x="85.76" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="1333" width="0.4" height="15.0" fill="rgb(207,223,31)" rx="2" ry="2" />
<text  x="16.09" y="1343.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.04%)</title><rect x="35.1" y="1669" width="0.5" height="15.0" fill="rgb(212,77,15)" rx="2" ry="2" />
<text  x="38.13" y="1679.5" ></text>
</g>
<g >
<title>_raw_spin_lock (2 samples, 0.07%)</title><rect x="1169.3" y="1941" width="0.9" height="15.0" fill="rgb(243,62,16)" rx="2" ry="2" />
<text  x="1172.28" y="1951.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::thread::_State, std::default_delete&lt;std::thread::_State&gt; &gt;::_M_ptr (7 samples, 0.26%)</title><rect x="14.4" y="2005" width="3.1" height="15.0" fill="rgb(217,64,44)" rx="2" ry="2" />
<text  x="17.41" y="2015.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (1 samples, 0.04%)</title><rect x="80.6" y="2021" width="0.4" height="15.0" fill="rgb(222,175,51)" rx="2" ry="2" />
<text  x="83.55" y="2031.5" ></text>
</g>
<g >
<title>_IO_file_xsputn@@GLIBC_2.2.5 (5 samples, 0.19%)</title><rect x="17.9" y="2037" width="2.2" height="15.0" fill="rgb(222,77,1)" rx="2" ry="2" />
<text  x="20.94" y="2047.5" ></text>
</g>
<g >
<title>get_page_from_freelist (17 samples, 0.64%)</title><rect x="39.1" y="1765" width="7.5" height="15.0" fill="rgb(240,115,30)" rx="2" ry="2" />
<text  x="42.10" y="1775.5" ></text>
</g>
<g >
<title>copy_page_to_iter (11 samples, 0.41%)</title><rect x="72.6" y="1861" width="4.9" height="15.0" fill="rgb(248,212,50)" rx="2" ry="2" />
<text  x="75.62" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="741" width="0.4" height="15.0" fill="rgb(240,168,42)" rx="2" ry="2" />
<text  x="16.09" y="751.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="597" width="0.4" height="15.0" fill="rgb(229,169,8)" rx="2" ry="2" />
<text  x="16.09" y="607.5" ></text>
</g>
<g >
<title>CSV2JSON::Split2List (792 samples, 29.60%)</title><rect x="388.8" y="1893" width="349.2" height="15.0" fill="rgb(217,160,8)" rx="2" ry="2" />
<text  x="391.78" y="1903.5" >CSV2JSON::Split2List</text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="1365" width="0.4" height="15.0" fill="rgb(253,185,52)" rx="2" ry="2" />
<text  x="16.09" y="1375.5" ></text>
</g>
<g >
<title>page_fault (10 samples, 0.37%)</title><rect x="1118.6" y="2037" width="4.4" height="15.0" fill="rgb(253,196,11)" rx="2" ry="2" />
<text  x="1121.57" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="1525" width="0.4" height="15.0" fill="rgb(241,131,13)" rx="2" ry="2" />
<text  x="16.09" y="1535.5" ></text>
</g>
<g >
<title>clear_page_erms (7 samples, 0.26%)</title><rect x="1174.6" y="1877" width="3.1" height="15.0" fill="rgb(250,127,22)" rx="2" ry="2" />
<text  x="1177.57" y="1887.5" ></text>
</g>
<g >
<title>free_buffer_head (2 samples, 0.07%)</title><rect x="26.8" y="1717" width="0.8" height="15.0" fill="rgb(240,197,31)" rx="2" ry="2" />
<text  x="29.76" y="1727.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.04%)</title><rect x="286.5" y="1957" width="0.4" height="15.0" fill="rgb(218,128,20)" rx="2" ry="2" />
<text  x="289.48" y="1967.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.04%)</title><rect x="786.1" y="1813" width="0.4" height="15.0" fill="rgb(211,89,33)" rx="2" ry="2" />
<text  x="789.08" y="1823.5" ></text>
</g>
<g >
<title>schedule (4 samples, 0.15%)</title><rect x="799.3" y="1829" width="1.8" height="15.0" fill="rgb(207,69,24)" rx="2" ry="2" />
<text  x="802.31" y="1839.5" ></text>
</g>
<g >
<title>schedule (4 samples, 0.15%)</title><rect x="77.5" y="1845" width="1.7" height="15.0" fill="rgb(251,200,26)" rx="2" ry="2" />
<text  x="80.47" y="1855.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (8 samples, 0.30%)</title><rect x="1147.2" y="1861" width="3.6" height="15.0" fill="rgb(250,44,28)" rx="2" ry="2" />
<text  x="1150.23" y="1871.5" ></text>
</g>
<g >
<title>free_unref_page_list (2 samples, 0.07%)</title><rect x="23.2" y="1797" width="0.9" height="15.0" fill="rgb(251,162,30)" rx="2" ry="2" />
<text  x="26.23" y="1807.5" ></text>
</g>
<g >
<title>crypto_shash_update (1 samples, 0.04%)</title><rect x="56.3" y="1717" width="0.4" height="15.0" fill="rgb(234,154,25)" rx="2" ry="2" />
<text  x="59.30" y="1727.5" ></text>
</g>
<g >
<title>update_cfs_group (1 samples, 0.04%)</title><rect x="84.1" y="1861" width="0.4" height="15.0" fill="rgb(208,177,13)" rx="2" ry="2" />
<text  x="87.08" y="1871.5" ></text>
</g>
<g >
<title>__strlen_avx2 (10 samples, 0.37%)</title><rect x="1089.9" y="1989" width="4.4" height="15.0" fill="rgb(206,194,51)" rx="2" ry="2" />
<text  x="1092.90" y="1999.5" ></text>
</g>
<g >
<title>do_futex (11 samples, 0.41%)</title><rect x="327.5" y="1973" width="4.8" height="15.0" fill="rgb(233,135,53)" rx="2" ry="2" />
<text  x="330.49" y="1983.5" ></text>
</g>
<g >
<title>sync_regs (4 samples, 0.15%)</title><rect x="1186.5" y="2037" width="1.7" height="15.0" fill="rgb(245,172,19)" rx="2" ry="2" />
<text  x="1189.47" y="2047.5" ></text>
</g>
<g >
<title>apparmor_file_permission (2 samples, 0.07%)</title><rect x="68.6" y="1909" width="0.9" height="15.0" fill="rgb(206,152,43)" rx="2" ry="2" />
<text  x="71.65" y="1919.5" ></text>
</g>
<g >
<title>ext4_inode_csum.isra.0 (3 samples, 0.11%)</title><rect x="55.4" y="1733" width="1.3" height="15.0" fill="rgb(241,169,17)" rx="2" ry="2" />
<text  x="58.42" y="1743.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;&amp;, std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*&gt;::_M_set_node (1 samples, 0.04%)</title><rect x="1083.3" y="1925" width="0.4" height="15.0" fill="rgb(219,72,5)" rx="2" ry="2" />
<text  x="1086.29" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="1029" width="0.4" height="15.0" fill="rgb(230,122,35)" rx="2" ry="2" />
<text  x="16.09" y="1039.5" ></text>
</g>
<g >
<title>do_syscall_64 (15 samples, 0.56%)</title><rect x="1144.1" y="2037" width="6.7" height="15.0" fill="rgb(216,150,11)" rx="2" ry="2" />
<text  x="1147.14" y="2047.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.04%)</title><rect x="327.5" y="1957" width="0.4" height="15.0" fill="rgb(214,98,44)" rx="2" ry="2" />
<text  x="330.49" y="1967.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (5 samples, 0.19%)</title><rect x="1074.5" y="1749" width="2.2" height="15.0" fill="rgb(231,115,26)" rx="2" ry="2" />
<text  x="1077.47" y="1759.5" ></text>
</g>
<g >
<title>unlock_page (1 samples, 0.04%)</title><rect x="64.7" y="1845" width="0.4" height="15.0" fill="rgb(224,224,39)" rx="2" ry="2" />
<text  x="67.68" y="1855.5" ></text>
</g>
<g >
<title>do_syscall_64 (12 samples, 0.45%)</title><rect x="81.4" y="2005" width="5.3" height="15.0" fill="rgb(229,174,32)" rx="2" ry="2" />
<text  x="84.43" y="2015.5" ></text>
</g>
<g >
<title>generic_file_buffered_read (16 samples, 0.60%)</title><rect x="72.6" y="1877" width="7.1" height="15.0" fill="rgb(212,165,35)" rx="2" ry="2" />
<text  x="75.62" y="1887.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (1 samples, 0.04%)</title><rect x="62.5" y="1749" width="0.4" height="15.0" fill="rgb(235,196,47)" rx="2" ry="2" />
<text  x="65.47" y="1759.5" ></text>
</g>
<g >
<title>rmqueue (2 samples, 0.07%)</title><rect x="1137.5" y="1877" width="0.9" height="15.0" fill="rgb(239,202,18)" rx="2" ry="2" />
<text  x="1140.53" y="1887.5" ></text>
</g>
<g >
<title>vmacache_find (1 samples, 0.04%)</title><rect x="1165.7" y="1957" width="0.5" height="15.0" fill="rgb(251,172,34)" rx="2" ry="2" />
<text  x="1168.75" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="1557" width="0.4" height="15.0" fill="rgb(220,220,25)" rx="2" ry="2" />
<text  x="16.09" y="1567.5" ></text>
</g>
<g >
<title>__count_memcg_events (1 samples, 0.04%)</title><rect x="1132.2" y="1957" width="0.5" height="15.0" fill="rgb(212,216,52)" rx="2" ry="2" />
<text  x="1135.23" y="1967.5" ></text>
</g>
<g >
<title>finish_task_switch (5 samples, 0.19%)</title><rect x="1074.5" y="1765" width="2.2" height="15.0" fill="rgb(210,206,3)" rx="2" ry="2" />
<text  x="1077.47" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="1397" width="0.4" height="15.0" fill="rgb(221,157,36)" rx="2" ry="2" />
<text  x="16.09" y="1407.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (1 samples, 0.04%)</title><rect x="939.5" y="1813" width="0.5" height="15.0" fill="rgb(242,211,44)" rx="2" ry="2" />
<text  x="942.54" y="1823.5" ></text>
</g>
<g >
<title>up_write (1 samples, 0.04%)</title><rect x="1117.7" y="1989" width="0.4" height="15.0" fill="rgb(232,167,5)" rx="2" ry="2" />
<text  x="1120.68" y="1999.5" ></text>
</g>
<g >
<title>do_last (12 samples, 0.45%)</title><rect x="22.8" y="1925" width="5.3" height="15.0" fill="rgb(234,74,19)" rx="2" ry="2" />
<text  x="25.79" y="1935.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (3 samples, 0.11%)</title><rect x="1148.1" y="1797" width="1.3" height="15.0" fill="rgb(219,176,18)" rx="2" ry="2" />
<text  x="1151.11" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="565" width="0.4" height="15.0" fill="rgb(231,131,22)" rx="2" ry="2" />
<text  x="16.09" y="575.5" ></text>
</g>
<g >
<title>ext4_nonda_switch (1 samples, 0.04%)</title><rect x="38.2" y="1845" width="0.5" height="15.0" fill="rgb(237,60,17)" rx="2" ry="2" />
<text  x="41.22" y="1855.5" ></text>
</g>
<g >
<title>elf_map (1 samples, 0.04%)</title><rect x="332.3" y="1941" width="0.5" height="15.0" fill="rgb(226,8,13)" rx="2" ry="2" />
<text  x="335.34" y="1951.5" ></text>
</g>
<g >
<title>__mod_memcg_state (1 samples, 0.04%)</title><rect x="24.1" y="1765" width="0.5" height="15.0" fill="rgb(225,55,53)" rx="2" ry="2" />
<text  x="27.11" y="1775.5" ></text>
</g>
<g >
<title>vma_merge (4 samples, 0.15%)</title><rect x="1115.5" y="1957" width="1.7" height="15.0" fill="rgb(249,76,12)" rx="2" ry="2" />
<text  x="1118.48" y="1967.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2 samples, 0.07%)</title><rect x="366.7" y="2005" width="0.9" height="15.0" fill="rgb(211,43,10)" rx="2" ry="2" />
<text  x="369.73" y="2015.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.04%)</title><rect x="1085.5" y="2005" width="0.4" height="15.0" fill="rgb(232,131,6)" rx="2" ry="2" />
<text  x="1088.49" y="2015.5" ></text>
</g>
<g >
<title>handle_mm_fault (40 samples, 1.49%)</title><rect x="1166.6" y="1973" width="17.7" height="15.0" fill="rgb(247,58,44)" rx="2" ry="2" />
<text  x="1169.63" y="1983.5" ></text>
</g>
<g >
<title>page_evictable (1 samples, 0.04%)</title><rect x="1180.7" y="1861" width="0.5" height="15.0" fill="rgb(206,29,17)" rx="2" ry="2" />
<text  x="1183.74" y="1871.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.34%)</title><rect x="1072.7" y="2037" width="4.0" height="15.0" fill="rgb(216,156,8)" rx="2" ry="2" />
<text  x="1075.71" y="2047.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::destroy&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (3 samples, 0.11%)</title><rect x="937.3" y="1845" width="1.4" height="15.0" fill="rgb(249,25,22)" rx="2" ry="2" />
<text  x="940.33" y="1855.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::~basic_filebuf (15 samples, 0.56%)</title><rect x="363.2" y="2037" width="6.6" height="15.0" fill="rgb(250,122,47)" rx="2" ry="2" />
<text  x="366.21" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="1413" width="0.4" height="15.0" fill="rgb(206,95,29)" rx="2" ry="2" />
<text  x="16.09" y="1423.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="1285" width="0.4" height="15.0" fill="rgb(218,136,53)" rx="2" ry="2" />
<text  x="16.09" y="1295.5" ></text>
</g>
<g >
<title>ext4_da_map_blocks.constprop.0 (4 samples, 0.15%)</title><rect x="36.5" y="1813" width="1.7" height="15.0" fill="rgb(225,173,23)" rx="2" ry="2" />
<text  x="39.46" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="1573" width="0.4" height="15.0" fill="rgb(222,142,17)" rx="2" ry="2" />
<text  x="16.09" y="1583.5" ></text>
</g>
<g >
<title>__strchrnul_avx2 (77 samples, 2.88%)</title><rect x="163.0" y="2021" width="34.0" height="15.0" fill="rgb(224,30,5)" rx="2" ry="2" />
<text  x="166.01" y="2031.5" >__..</text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="1973" width="0.4" height="15.0" fill="rgb(254,171,9)" rx="2" ry="2" />
<text  x="16.09" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (15 samples, 0.56%)</title><rect x="363.2" y="2021" width="6.6" height="15.0" fill="rgb(230,80,8)" rx="2" ry="2" />
<text  x="366.21" y="2031.5" ></text>
</g>
<g >
<title>wake_up_q (8 samples, 0.30%)</title><rect x="328.8" y="1941" width="3.5" height="15.0" fill="rgb(214,101,25)" rx="2" ry="2" />
<text  x="331.81" y="1951.5" ></text>
</g>
<g >
<title>zap_pte_range.isra.0 (13 samples, 0.49%)</title><rect x="1145.0" y="1893" width="5.8" height="15.0" fill="rgb(214,84,43)" rx="2" ry="2" />
<text  x="1148.02" y="1903.5" ></text>
</g>
<g >
<title>alloc_page_buffers (3 samples, 0.11%)</title><rect x="35.1" y="1813" width="1.4" height="15.0" fill="rgb(239,218,15)" rx="2" ry="2" />
<text  x="38.13" y="1823.5" ></text>
</g>
<g >
<title>futex_wait (11 samples, 0.41%)</title><rect x="81.9" y="1957" width="4.8" height="15.0" fill="rgb(237,12,52)" rx="2" ry="2" />
<text  x="84.88" y="1967.5" ></text>
</g>
<g >
<title>pagecache_get_page (28 samples, 1.05%)</title><rect x="38.7" y="1829" width="12.3" height="15.0" fill="rgb(242,68,33)" rx="2" ry="2" />
<text  x="41.66" y="1839.5" ></text>
</g>
<g >
<title>std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair&lt;unsigned int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, true&gt; (2 samples, 0.07%)</title><rect x="1078.4" y="1989" width="0.9" height="15.0" fill="rgb(233,125,4)" rx="2" ry="2" />
<text  x="1081.44" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="1669" width="0.4" height="15.0" fill="rgb(254,18,9)" rx="2" ry="2" />
<text  x="16.09" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="501" width="0.4" height="15.0" fill="rgb(214,41,24)" rx="2" ry="2" />
<text  x="16.09" y="511.5" ></text>
</g>
<g >
<title>perf_event_exec (4 samples, 0.15%)</title><rect x="1188.2" y="1925" width="1.8" height="15.0" fill="rgb(207,191,11)" rx="2" ry="2" />
<text  x="1191.24" y="1935.5" ></text>
</g>
<g >
<title>lru_cache_add_active_or_unevictable (3 samples, 0.11%)</title><rect x="1138.4" y="1925" width="1.3" height="15.0" fill="rgb(239,119,29)" rx="2" ry="2" />
<text  x="1141.41" y="1935.5" ></text>
</g>
<g >
<title>__do_page_fault (2 samples, 0.07%)</title><rect x="1104.5" y="1973" width="0.8" height="15.0" fill="rgb(215,79,18)" rx="2" ry="2" />
<text  x="1107.45" y="1983.5" ></text>
</g>
<g >
<title>__dec_node_state (1 samples, 0.04%)</title><rect x="1146.8" y="1861" width="0.4" height="15.0" fill="rgb(220,11,45)" rx="2" ry="2" />
<text  x="1149.79" y="1871.5" ></text>
</g>
<g >
<title>try_charge (3 samples, 0.11%)</title><rect x="1182.5" y="1893" width="1.3" height="15.0" fill="rgb(210,130,26)" rx="2" ry="2" />
<text  x="1185.50" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="789" width="0.4" height="15.0" fill="rgb(222,198,46)" rx="2" ry="2" />
<text  x="16.09" y="799.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="533" width="0.4" height="15.0" fill="rgb(213,20,37)" rx="2" ry="2" />
<text  x="16.09" y="543.5" ></text>
</g>
<g >
<title>vfs_write (88 samples, 3.29%)</title><rect x="30.7" y="1957" width="38.8" height="15.0" fill="rgb(236,135,22)" rx="2" ry="2" />
<text  x="33.72" y="1967.5" >vfs..</text>
</g>
<g >
<title>ksys_read (18 samples, 0.67%)</title><rect x="71.7" y="1973" width="8.0" height="15.0" fill="rgb(213,77,30)" rx="2" ry="2" />
<text  x="74.73" y="1983.5" ></text>
</g>
<g >
<title>perf_pmu_disable.part.0 (1 samples, 0.04%)</title><rect x="82.8" y="1861" width="0.4" height="15.0" fill="rgb(238,143,25)" rx="2" ry="2" />
<text  x="85.76" y="1871.5" ></text>
</g>
<g >
<title>pmd_devmap_trans_unstable (1 samples, 0.04%)</title><rect x="1141.5" y="1941" width="0.4" height="15.0" fill="rgb(215,123,24)" rx="2" ry="2" />
<text  x="1144.49" y="1951.5" ></text>
</g>
<g >
<title>do_syscall_64 (9 samples, 0.34%)</title><rect x="1072.7" y="2021" width="4.0" height="15.0" fill="rgb(218,191,30)" rx="2" ry="2" />
<text  x="1075.71" y="2031.5" ></text>
</g>
<g >
<title>std::getline&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (4 samples, 0.15%)</title><rect x="368.1" y="2005" width="1.7" height="15.0" fill="rgb(239,54,38)" rx="2" ry="2" />
<text  x="371.06" y="2015.5" ></text>
</g>
<g >
<title>vm_pgprot_modify (2 samples, 0.07%)</title><rect x="1114.6" y="1957" width="0.9" height="15.0" fill="rgb(245,116,50)" rx="2" ry="2" />
<text  x="1117.60" y="1967.5" ></text>
</g>
<g >
<title>x86_pmu_enable (7 samples, 0.26%)</title><rect x="14.4" y="1877" width="3.1" height="15.0" fill="rgb(228,208,44)" rx="2" ry="2" />
<text  x="17.41" y="1887.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (2 samples, 0.07%)</title><rect x="1082.0" y="1925" width="0.8" height="15.0" fill="rgb(244,49,8)" rx="2" ry="2" />
<text  x="1084.97" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="1093" width="0.4" height="15.0" fill="rgb(252,191,47)" rx="2" ry="2" />
<text  x="16.09" y="1103.5" ></text>
</g>
<g >
<title>deactivate_task (4 samples, 0.15%)</title><rect x="83.2" y="1893" width="1.8" height="15.0" fill="rgb(216,193,30)" rx="2" ry="2" />
<text  x="86.20" y="1903.5" ></text>
</g>
<g >
<title>__lru_cache_add (1 samples, 0.04%)</title><rect x="49.2" y="1781" width="0.5" height="15.0" fill="rgb(242,194,8)" rx="2" ry="2" />
<text  x="52.25" y="1791.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.04%)</title><rect x="1086.8" y="1989" width="0.5" height="15.0" fill="rgb(244,212,44)" rx="2" ry="2" />
<text  x="1089.82" y="1999.5" ></text>
</g>
<g >
<title>std::deque&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::pop_front (1 samples, 0.04%)</title><rect x="930.7" y="1893" width="0.5" height="15.0" fill="rgb(251,3,41)" rx="2" ry="2" />
<text  x="933.72" y="1903.5" ></text>
</g>
<g >
<title>_int_malloc (48 samples, 1.79%)</title><rect x="1123.0" y="2053" width="21.1" height="15.0" fill="rgb(252,42,43)" rx="2" ry="2" />
<text  x="1125.97" y="2063.5" ></text>
</g>
<g >
<title>std::deque&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_pop_front_aux (4 samples, 0.15%)</title><rect x="939.1" y="1861" width="1.8" height="15.0" fill="rgb(229,164,48)" rx="2" ry="2" />
<text  x="942.10" y="1871.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (1 samples, 0.04%)</title><rect x="1117.2" y="1893" width="0.5" height="15.0" fill="rgb(224,218,14)" rx="2" ry="2" />
<text  x="1120.24" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="677" width="0.4" height="15.0" fill="rgb(218,191,44)" rx="2" ry="2" />
<text  x="16.09" y="687.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (7 samples, 0.26%)</title><rect x="14.4" y="1909" width="3.1" height="15.0" fill="rgb(229,98,34)" rx="2" ry="2" />
<text  x="17.41" y="1919.5" ></text>
</g>
<g >
<title>ext4_reserve_inode_write (3 samples, 0.11%)</title><rect x="57.2" y="1781" width="1.3" height="15.0" fill="rgb(208,66,17)" rx="2" ry="2" />
<text  x="60.18" y="1791.5" ></text>
</g>
<g >
<title>ext4_da_reserve_space (1 samples, 0.04%)</title><rect x="37.8" y="1797" width="0.4" height="15.0" fill="rgb(235,156,53)" rx="2" ry="2" />
<text  x="40.78" y="1807.5" ></text>
</g>
<g >
<title>page_fault (3 samples, 0.11%)</title><rect x="1104.0" y="2005" width="1.3" height="15.0" fill="rgb(248,214,37)" rx="2" ry="2" />
<text  x="1107.01" y="2015.5" ></text>
</g>
<g >
<title>mem_cgroup_throttle_swaprate (1 samples, 0.04%)</title><rect x="1140.2" y="1925" width="0.4" height="15.0" fill="rgb(241,197,17)" rx="2" ry="2" />
<text  x="1143.17" y="1935.5" ></text>
</g>
<g >
<title>grab_cache_page_write_begin (28 samples, 1.05%)</title><rect x="38.7" y="1845" width="12.3" height="15.0" fill="rgb(209,36,22)" rx="2" ry="2" />
<text  x="41.66" y="1855.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.15%)</title><rect x="77.5" y="1765" width="1.7" height="15.0" fill="rgb(216,88,1)" rx="2" ry="2" />
<text  x="80.47" y="1775.5" ></text>
</g>
<g >
<title>do_user_addr_fault (44 samples, 1.64%)</title><rect x="1164.9" y="1989" width="19.4" height="15.0" fill="rgb(231,40,35)" rx="2" ry="2" />
<text  x="1167.87" y="1999.5" ></text>
</g>
<g >
<title>_pthread_cleanup_push_defer (1 samples, 0.04%)</title><rect x="1102.7" y="1989" width="0.4" height="15.0" fill="rgb(220,140,20)" rx="2" ry="2" />
<text  x="1105.69" y="1999.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (46 samples, 1.72%)</title><rect x="31.2" y="1861" width="20.2" height="15.0" fill="rgb(236,14,17)" rx="2" ry="2" />
<text  x="34.17" y="1871.5" ></text>
</g>
<g >
<title>kernel_poison_pages (1 samples, 0.04%)</title><rect x="23.7" y="1781" width="0.4" height="15.0" fill="rgb(223,185,36)" rx="2" ry="2" />
<text  x="26.67" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="1685" width="0.4" height="15.0" fill="rgb(228,71,43)" rx="2" ry="2" />
<text  x="16.09" y="1695.5" ></text>
</g>
<g >
<title>native_write_msr (4 samples, 0.15%)</title><rect x="1074.9" y="1685" width="1.8" height="15.0" fill="rgb(233,19,38)" rx="2" ry="2" />
<text  x="1077.91" y="1695.5" ></text>
</g>
<g >
<title>__x64_sys_mprotect (27 samples, 1.01%)</title><rect x="1106.2" y="2005" width="11.9" height="15.0" fill="rgb(218,178,47)" rx="2" ry="2" />
<text  x="1109.22" y="2015.5" ></text>
</g>
<g >
<title>mpage_map_and_submit_buffers (3 samples, 0.11%)</title><rect x="1072.7" y="1829" width="1.3" height="15.0" fill="rgb(219,41,5)" rx="2" ry="2" />
<text  x="1075.71" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="1653" width="0.4" height="15.0" fill="rgb(238,4,52)" rx="2" ry="2" />
<text  x="16.09" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="1077" width="0.4" height="15.0" fill="rgb(249,144,53)" rx="2" ry="2" />
<text  x="16.09" y="1087.5" ></text>
</g>
<g >
<title>__lll_lock_wait_private (14 samples, 0.52%)</title><rect x="80.6" y="2037" width="6.1" height="15.0" fill="rgb(217,69,45)" rx="2" ry="2" />
<text  x="83.55" y="2047.5" ></text>
</g>
<g >
<title>do_page_fault (2 samples, 0.07%)</title><rect x="1104.5" y="1989" width="0.8" height="15.0" fill="rgb(222,24,42)" rx="2" ry="2" />
<text  x="1107.45" y="1999.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.04%)</title><rect x="82.3" y="1925" width="0.5" height="15.0" fill="rgb(221,24,13)" rx="2" ry="2" />
<text  x="85.32" y="1935.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign (9 samples, 0.34%)</title><rect x="951.4" y="1909" width="4.0" height="15.0" fill="rgb(229,219,40)" rx="2" ry="2" />
<text  x="954.44" y="1919.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.04%)</title><rect x="951.0" y="1909" width="0.4" height="15.0" fill="rgb(247,30,42)" rx="2" ry="2" />
<text  x="954.00" y="1919.5" ></text>
</g>
<g >
<title>CSV2JSON::CSV2JSON (61 samples, 2.28%)</title><rect x="1076.7" y="2021" width="26.9" height="15.0" fill="rgb(211,202,40)" rx="2" ry="2" />
<text  x="1079.67" y="2031.5" >C..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::c_str (7 samples, 0.26%)</title><rect x="811.2" y="1893" width="3.1" height="15.0" fill="rgb(227,12,1)" rx="2" ry="2" />
<text  x="814.22" y="1903.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.15%)</title><rect x="909.6" y="1733" width="1.7" height="15.0" fill="rgb(213,226,40)" rx="2" ry="2" />
<text  x="912.55" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="293" width="0.4" height="15.0" fill="rgb(254,122,13)" rx="2" ry="2" />
<text  x="16.09" y="303.5" ></text>
</g>
<g >
<title>update_load_avg (2 samples, 0.07%)</title><rect x="83.2" y="1845" width="0.9" height="15.0" fill="rgb(229,121,30)" rx="2" ry="2" />
<text  x="86.20" y="1855.5" ></text>
</g>
<g >
<title>fprintf (38 samples, 1.42%)</title><rect x="1086.4" y="2005" width="16.7" height="15.0" fill="rgb(252,68,54)" rx="2" ry="2" />
<text  x="1089.38" y="2015.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="1141.9" y="2037" width="0.5" height="15.0" fill="rgb(233,76,38)" rx="2" ry="2" />
<text  x="1144.94" y="2047.5" ></text>
</g>
<g >
<title>generic_file_read_iter (16 samples, 0.60%)</title><rect x="72.6" y="1893" width="7.1" height="15.0" fill="rgb(205,131,43)" rx="2" ry="2" />
<text  x="75.62" y="1903.5" ></text>
</g>
<g >
<title>page_poisoning_enabled (1 samples, 0.04%)</title><rect x="1137.1" y="1861" width="0.4" height="15.0" fill="rgb(222,104,37)" rx="2" ry="2" />
<text  x="1140.09" y="1871.5" ></text>
</g>
<g >
<title>__do_page_fault (49 samples, 1.83%)</title><rect x="1164.9" y="2005" width="21.6" height="15.0" fill="rgb(231,37,43)" rx="2" ry="2" />
<text  x="1167.87" y="2015.5" >_..</text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="549" width="0.4" height="15.0" fill="rgb(236,203,2)" rx="2" ry="2" />
<text  x="16.09" y="559.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="405" width="0.4" height="15.0" fill="rgb(222,49,0)" rx="2" ry="2" />
<text  x="16.09" y="415.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.0 (4 samples, 0.15%)</title><rect x="77.5" y="1781" width="1.7" height="15.0" fill="rgb(231,16,20)" rx="2" ry="2" />
<text  x="80.47" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="1621" width="0.4" height="15.0" fill="rgb(221,201,2)" rx="2" ry="2" />
<text  x="16.09" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (10 samples, 0.37%)</title><rect x="13.1" y="2037" width="4.4" height="15.0" fill="rgb(233,17,5)" rx="2" ry="2" />
<text  x="16.09" y="2047.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (3 samples, 0.11%)</title><rect x="736.7" y="1861" width="1.3" height="15.0" fill="rgb(234,165,26)" rx="2" ry="2" />
<text  x="739.70" y="1871.5" ></text>
</g>
<g >
<title>new_sync_read (16 samples, 0.60%)</title><rect x="72.6" y="1925" width="7.1" height="15.0" fill="rgb(231,31,34)" rx="2" ry="2" />
<text  x="75.62" y="1935.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::destroy&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (4 samples, 0.15%)</title><rect x="937.3" y="1861" width="1.8" height="15.0" fill="rgb(231,89,26)" rx="2" ry="2" />
<text  x="940.33" y="1871.5" ></text>
</g>
<g >
<title>_IO_do_write@@GLIBC_2.2.5 (2 samples, 0.07%)</title><rect x="1071.8" y="2053" width="0.9" height="15.0" fill="rgb(218,44,10)" rx="2" ry="2" />
<text  x="1074.82" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="1045" width="0.4" height="15.0" fill="rgb(217,102,2)" rx="2" ry="2" />
<text  x="16.09" y="1055.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.15%)</title><rect x="1188.2" y="2053" width="1.8" height="15.0" fill="rgb(236,189,3)" rx="2" ry="2" />
<text  x="1191.24" y="2063.5" ></text>
</g>
<g >
<title>__vma_adjust (2 samples, 0.07%)</title><rect x="1115.5" y="1941" width="0.9" height="15.0" fill="rgb(246,154,17)" rx="2" ry="2" />
<text  x="1118.48" y="1951.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void  (1,359 samples, 50.78%)</title><rect x="369.8" y="1941" width="599.3" height="15.0" fill="rgb(212,172,40)" rx="2" ry="2" />
<text  x="372.82" y="1951.5" >std::__invoke&lt;void </text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.15%)</title><rect x="77.5" y="1749" width="1.7" height="15.0" fill="rgb(210,3,52)" rx="2" ry="2" />
<text  x="80.47" y="1759.5" ></text>
</g>
<g >
<title>memset_erms (1 samples, 0.04%)</title><rect x="32.9" y="1813" width="0.5" height="15.0" fill="rgb(218,193,54)" rx="2" ry="2" />
<text  x="35.93" y="1823.5" ></text>
</g>
<g >
<title>__lock_page (6 samples, 0.22%)</title><rect x="1074.0" y="1829" width="2.7" height="15.0" fill="rgb(248,0,37)" rx="2" ry="2" />
<text  x="1077.03" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="1349" width="0.4" height="15.0" fill="rgb(221,179,41)" rx="2" ry="2" />
<text  x="16.09" y="1359.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="1509" width="0.4" height="15.0" fill="rgb(252,223,41)" rx="2" ry="2" />
<text  x="16.09" y="1519.5" ></text>
</g>
<g >
<title>free_pgtables (1 samples, 0.04%)</title><rect x="1144.1" y="1941" width="0.5" height="15.0" fill="rgb(237,229,12)" rx="2" ry="2" />
<text  x="1147.14" y="1951.5" ></text>
</g>
<g >
<title>ext4_inode_csum_set (3 samples, 0.11%)</title><rect x="55.4" y="1749" width="1.3" height="15.0" fill="rgb(254,173,20)" rx="2" ry="2" />
<text  x="58.42" y="1759.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.04%)</title><rect x="786.1" y="1765" width="0.4" height="15.0" fill="rgb(253,190,45)" rx="2" ry="2" />
<text  x="789.08" y="1775.5" ></text>
</g>
<g >
<title>mem_cgroup_uncharge_list (3 samples, 0.11%)</title><rect x="1149.4" y="1829" width="1.4" height="15.0" fill="rgb(221,27,7)" rx="2" ry="2" />
<text  x="1152.43" y="1839.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (15 samples, 0.56%)</title><rect x="1144.1" y="2053" width="6.7" height="15.0" fill="rgb(254,182,38)" rx="2" ry="2" />
<text  x="1147.14" y="2063.5" ></text>
</g>
<g >
<title>__clone (4 samples, 0.15%)</title><rect x="70.0" y="2037" width="1.7" height="15.0" fill="rgb(211,183,54)" rx="2" ry="2" />
<text  x="72.97" y="2047.5" ></text>
</g>
<g >
<title>ext4_da_write_end (31 samples, 1.16%)</title><rect x="51.4" y="1861" width="13.7" height="15.0" fill="rgb(237,185,34)" rx="2" ry="2" />
<text  x="54.45" y="1871.5" ></text>
</g>
<g >
<title>__memchr_avx2 (8 samples, 0.30%)</title><rect x="363.2" y="2005" width="3.5" height="15.0" fill="rgb(235,159,44)" rx="2" ry="2" />
<text  x="366.21" y="2015.5" ></text>
</g>
<g >
<title>std::deque&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::push_back (12 samples, 0.45%)</title><rect x="1079.8" y="1973" width="5.3" height="15.0" fill="rgb(232,99,13)" rx="2" ry="2" />
<text  x="1082.76" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="1733" width="0.4" height="15.0" fill="rgb(211,116,13)" rx="2" ry="2" />
<text  x="16.09" y="1743.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.04%)</title><rect x="1117.2" y="1909" width="0.5" height="15.0" fill="rgb(233,139,16)" rx="2" ry="2" />
<text  x="1120.24" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="309" width="0.4" height="15.0" fill="rgb(243,94,47)" rx="2" ry="2" />
<text  x="16.09" y="319.5" ></text>
</g>
<g >
<title>perf (4 samples, 0.15%)</title><rect x="1188.2" y="2069" width="1.8" height="15.0" fill="rgb(225,97,5)" rx="2" ry="2" />
<text  x="1191.24" y="2079.5" ></text>
</g>
<g >
<title>x86_pmu_enable (1 samples, 0.04%)</title><rect x="13.1" y="69" width="0.4" height="15.0" fill="rgb(253,96,32)" rx="2" ry="2" />
<text  x="16.09" y="79.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="981" width="0.4" height="15.0" fill="rgb(211,127,22)" rx="2" ry="2" />
<text  x="16.09" y="991.5" ></text>
</g>
<g >
<title>__x64_sys_futex (11 samples, 0.41%)</title><rect x="327.5" y="1989" width="4.8" height="15.0" fill="rgb(208,224,37)" rx="2" ry="2" />
<text  x="330.49" y="1999.5" ></text>
</g>
<g >
<title>free_unref_page_commit (3 samples, 0.11%)</title><rect x="1148.1" y="1813" width="1.3" height="15.0" fill="rgb(252,103,0)" rx="2" ry="2" />
<text  x="1151.11" y="1823.5" ></text>
</g>
<g >
<title>__mprotect (40 samples, 1.49%)</title><rect x="1105.3" y="2053" width="17.7" height="15.0" fill="rgb(206,149,49)" rx="2" ry="2" />
<text  x="1108.34" y="2063.5" ></text>
</g>
<g >
<title>do_page_fault (23 samples, 0.86%)</title><rect x="1131.8" y="2021" width="10.1" height="15.0" fill="rgb(246,8,51)" rx="2" ry="2" />
<text  x="1134.79" y="2031.5" ></text>
</g>
<g >
<title>perf_iterate_sb (3 samples, 0.11%)</title><rect x="1113.3" y="1941" width="1.3" height="15.0" fill="rgb(205,77,0)" rx="2" ry="2" />
<text  x="1116.27" y="1951.5" ></text>
</g>
<g >
<title>page_poisoning_enabled (1 samples, 0.04%)</title><rect x="1136.6" y="1877" width="0.5" height="15.0" fill="rgb(230,16,7)" rx="2" ry="2" />
<text  x="1139.64" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="1717" width="0.4" height="15.0" fill="rgb(221,109,49)" rx="2" ry="2" />
<text  x="16.09" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="13.1" y="1013" width="0.4" height="15.0" fill="rgb(241,108,35)" rx="2" ry="2" />
<text  x="16.09" y="1023.5" ></text>
</g>
<g >
<title>vm_munmap (1 samples, 0.04%)</title><rect x="332.3" y="1925" width="0.5" height="15.0" fill="rgb(242,69,48)" rx="2" ry="2" />
<text  x="335.34" y="1935.5" ></text>
</g>
<g >
<title>trigger_load_balance (1 samples, 0.04%)</title><rect x="786.1" y="1749" width="0.4" height="15.0" fill="rgb(246,170,38)" rx="2" ry="2" />
<text  x="789.08" y="1759.5" ></text>
</g>
<g >
<title>std::operator-&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;&amp;, std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*&gt; (1 samples, 0.04%)</title><rect x="1084.2" y="1909" width="0.4" height="15.0" fill="rgb(241,143,8)" rx="2" ry="2" />
<text  x="1087.17" y="1919.5" ></text>
</g>
<g >
<title>page_fault (2 samples, 0.07%)</title><rect x="79.7" y="2021" width="0.9" height="15.0" fill="rgb(221,58,12)" rx="2" ry="2" />
<text  x="82.67" y="2031.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (10 samples, 0.37%)</title><rect x="1134.0" y="1909" width="4.4" height="15.0" fill="rgb(210,32,21)" rx="2" ry="2" />
<text  x="1137.00" y="1919.5" ></text>
</g>
<g >
<title>alloc_pages_current (1 samples, 0.04%)</title><rect x="35.1" y="1685" width="0.5" height="15.0" fill="rgb(212,79,51)" rx="2" ry="2" />
<text  x="38.13" y="1695.5" ></text>
</g>
</g>
</svg>
