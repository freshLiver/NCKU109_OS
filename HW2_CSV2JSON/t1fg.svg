<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="566" onload="init(evt)" viewBox="0 0 1200 566" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="566.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="549" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="549" > </text>
<g id="frames">
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.05%)</title><rect x="303.2" y="469" width="0.6" height="15.0" fill="rgb(220,195,12)" rx="2" ry="2" />
<text  x="306.21" y="479.5" ></text>
</g>
<g >
<title>alloc_buffer_head (3 samples, 0.14%)</title><rect x="35.9" y="229" width="1.6" height="15.0" fill="rgb(237,129,54)" rx="2" ry="2" />
<text  x="38.86" y="239.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (2 samples, 0.09%)</title><rect x="23.2" y="453" width="1.1" height="15.0" fill="rgb(228,88,53)" rx="2" ry="2" />
<text  x="26.20" y="463.5" ></text>
</g>
<g >
<title>_pthread_cleanup_pop_restore (1 samples, 0.05%)</title><rect x="1093.2" y="421" width="0.5" height="15.0" fill="rgb(226,69,29)" rx="2" ry="2" />
<text  x="1096.18" y="431.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (1 samples, 0.05%)</title><rect x="28.2" y="357" width="0.5" height="15.0" fill="rgb(210,73,13)" rx="2" ry="2" />
<text  x="31.15" y="367.5" ></text>
</g>
<g >
<title>node_dirty_ok (1 samples, 0.05%)</title><rect x="48.5" y="181" width="0.6" height="15.0" fill="rgb(223,198,8)" rx="2" ry="2" />
<text  x="51.51" y="191.5" ></text>
</g>
<g >
<title>do_user_addr_fault (2 samples, 0.09%)</title><rect x="1117.9" y="389" width="1.1" height="15.0" fill="rgb(222,33,19)" rx="2" ry="2" />
<text  x="1120.93" y="399.5" ></text>
</g>
<g >
<title>__mod_zone_page_state (1 samples, 0.05%)</title><rect x="1173.5" y="277" width="0.5" height="15.0" fill="rgb(232,196,38)" rx="2" ry="2" />
<text  x="1176.50" y="287.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (3 samples, 0.14%)</title><rect x="35.9" y="213" width="1.6" height="15.0" fill="rgb(242,119,25)" rx="2" ry="2" />
<text  x="38.86" y="223.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (2 samples, 0.09%)</title><rect x="469.9" y="421" width="1.1" height="15.0" fill="rgb(253,123,30)" rx="2" ry="2" />
<text  x="472.90" y="431.5" ></text>
</g>
<g >
<title>ext4_alloc_da_blocks (13 samples, 0.61%)</title><rect x="453.4" y="357" width="7.1" height="15.0" fill="rgb(231,30,15)" rx="2" ry="2" />
<text  x="456.39" y="367.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (4 samples, 0.19%)</title><rect x="60.6" y="197" width="2.2" height="15.0" fill="rgb(212,73,12)" rx="2" ry="2" />
<text  x="63.61" y="207.5" ></text>
</g>
<g >
<title>_raw_read_lock (2 samples, 0.09%)</title><rect x="39.2" y="229" width="1.1" height="15.0" fill="rgb(223,82,41)" rx="2" ry="2" />
<text  x="42.16" y="239.5" ></text>
</g>
<g >
<title>free_unref_page_list (2 samples, 0.09%)</title><rect x="1175.7" y="261" width="1.1" height="15.0" fill="rgb(206,143,24)" rx="2" ry="2" />
<text  x="1178.70" y="271.5" ></text>
</g>
<g >
<title>__pagevec_release (1 samples, 0.05%)</title><rect x="453.4" y="245" width="0.5" height="15.0" fill="rgb(212,100,53)" rx="2" ry="2" />
<text  x="456.39" y="255.5" ></text>
</g>
<g >
<title>handle_mm_fault (2 samples, 0.09%)</title><rect x="1117.9" y="373" width="1.1" height="15.0" fill="rgb(211,201,10)" rx="2" ry="2" />
<text  x="1120.93" y="383.5" ></text>
</g>
<g >
<title>sprintf (2 samples, 0.09%)</title><rect x="935.8" y="421" width="1.1" height="15.0" fill="rgb(218,125,31)" rx="2" ry="2" />
<text  x="938.85" y="431.5" ></text>
</g>
<g >
<title>std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair (1 samples, 0.05%)</title><rect x="1113.5" y="437" width="0.6" height="15.0" fill="rgb(245,6,7)" rx="2" ry="2" />
<text  x="1116.53" y="447.5" ></text>
</g>
<g >
<title>alloc_pages_current (13 samples, 0.61%)</title><rect x="117.3" y="229" width="7.1" height="15.0" fill="rgb(250,227,12)" rx="2" ry="2" />
<text  x="120.27" y="239.5" ></text>
</g>
<g >
<title>ctx_resched (4 samples, 0.19%)</title><rect x="1187.8" y="341" width="2.2" height="15.0" fill="rgb(207,41,1)" rx="2" ry="2" />
<text  x="1190.80" y="351.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (10 samples, 0.47%)</title><rect x="45.2" y="213" width="5.5" height="15.0" fill="rgb(242,115,24)" rx="2" ry="2" />
<text  x="48.21" y="223.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (1 samples, 0.05%)</title><rect x="1118.5" y="325" width="0.5" height="15.0" fill="rgb(216,193,9)" rx="2" ry="2" />
<text  x="1121.48" y="335.5" ></text>
</g>
<g >
<title>ext4_inode_csum.isra.0 (4 samples, 0.19%)</title><rect x="67.2" y="165" width="2.2" height="15.0" fill="rgb(248,95,28)" rx="2" ry="2" />
<text  x="70.21" y="175.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (4 samples, 0.19%)</title><rect x="1165.2" y="341" width="2.2" height="15.0" fill="rgb(223,208,44)" rx="2" ry="2" />
<text  x="1168.24" y="351.5" ></text>
</g>
<g >
<title>alloc_pages_current (11 samples, 0.51%)</title><rect x="44.7" y="229" width="6.0" height="15.0" fill="rgb(206,189,19)" rx="2" ry="2" />
<text  x="47.66" y="239.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.05%)</title><rect x="881.9" y="293" width="0.6" height="15.0" fill="rgb(239,10,36)" rx="2" ry="2" />
<text  x="884.93" y="303.5" ></text>
</g>
<g >
<title>generic_write_end (26 samples, 1.21%)</title><rect x="63.4" y="277" width="14.3" height="15.0" fill="rgb(233,113,44)" rx="2" ry="2" />
<text  x="66.36" y="287.5" ></text>
</g>
<g >
<title>set_next_task_idle (1 samples, 0.05%)</title><rect x="116.7" y="229" width="0.6" height="15.0" fill="rgb(252,199,49)" rx="2" ry="2" />
<text  x="119.72" y="239.5" ></text>
</g>
<g >
<title>_int_malloc (94 samples, 4.38%)</title><rect x="1120.1" y="485" width="51.7" height="15.0" fill="rgb(217,121,53)" rx="2" ry="2" />
<text  x="1123.14" y="495.5" >_int_..</text>
</g>
<g >
<title>____fput (13 samples, 0.61%)</title><rect x="453.4" y="405" width="7.1" height="15.0" fill="rgb(252,213,4)" rx="2" ry="2" />
<text  x="456.39" y="415.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (24 samples, 1.12%)</title><rect x="103.5" y="181" width="13.2" height="15.0" fill="rgb(247,101,41)" rx="2" ry="2" />
<text  x="106.52" y="191.5" ></text>
</g>
<g >
<title>rmqueue (3 samples, 0.14%)</title><rect x="49.1" y="181" width="1.6" height="15.0" fill="rgb(245,75,7)" rx="2" ry="2" />
<text  x="52.06" y="191.5" ></text>
</g>
<g >
<title>clear_page_erms (9 samples, 0.42%)</title><rect x="1154.2" y="309" width="5.0" height="15.0" fill="rgb(237,167,15)" rx="2" ry="2" />
<text  x="1157.24" y="319.5" ></text>
</g>
<g >
<title>pagecache_get_page (9 samples, 0.42%)</title><rect x="131.0" y="293" width="5.0" height="15.0" fill="rgb(252,159,8)" rx="2" ry="2" />
<text  x="134.03" y="303.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.05%)</title><rect x="881.9" y="373" width="0.6" height="15.0" fill="rgb(215,195,43)" rx="2" ry="2" />
<text  x="884.93" y="383.5" ></text>
</g>
<g >
<title>add_to_page_cache_lru (22 samples, 1.03%)</title><rect x="50.7" y="245" width="12.1" height="15.0" fill="rgb(219,95,37)" rx="2" ry="2" />
<text  x="53.71" y="255.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.05%)</title><rect x="498.0" y="341" width="0.5" height="15.0" fill="rgb(221,226,3)" rx="2" ry="2" />
<text  x="500.95" y="351.5" ></text>
</g>
<g >
<title>memcg_kmem_get_cache (2 samples, 0.09%)</title><rect x="36.4" y="197" width="1.1" height="15.0" fill="rgb(217,217,14)" rx="2" ry="2" />
<text  x="39.41" y="207.5" ></text>
</g>
<g >
<title>get_page_from_freelist (14 samples, 0.65%)</title><rect x="1153.7" y="325" width="7.7" height="15.0" fill="rgb(245,68,54)" rx="2" ry="2" />
<text  x="1156.69" y="335.5" ></text>
</g>
<g >
<title>_raw_read_lock (1 samples, 0.05%)</title><rect x="31.5" y="245" width="0.5" height="15.0" fill="rgb(220,137,33)" rx="2" ry="2" />
<text  x="34.45" y="255.5" ></text>
</g>
<g >
<title>ext4_es_can_be_merged (1 samples, 0.05%)</title><rect x="42.5" y="197" width="0.5" height="15.0" fill="rgb(226,155,1)" rx="2" ry="2" />
<text  x="45.46" y="207.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (16 samples, 0.75%)</title><rect x="64.5" y="245" width="8.8" height="15.0" fill="rgb(239,135,48)" rx="2" ry="2" />
<text  x="67.46" y="255.5" ></text>
</g>
<g >
<title>blk_mq_complete_request (1 samples, 0.05%)</title><rect x="1165.8" y="213" width="0.5" height="15.0" fill="rgb(243,166,7)" rx="2" ry="2" />
<text  x="1168.79" y="223.5" ></text>
</g>
<g >
<title>__fput (13 samples, 0.61%)</title><rect x="453.4" y="389" width="7.1" height="15.0" fill="rgb(238,182,5)" rx="2" ry="2" />
<text  x="456.39" y="399.5" ></text>
</g>
<g >
<title>pmd_devmap_trans_unstable (1 samples, 0.05%)</title><rect x="1168.0" y="389" width="0.5" height="15.0" fill="rgb(222,76,4)" rx="2" ry="2" />
<text  x="1171.00" y="399.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (2 samples, 0.09%)</title><rect x="1070.6" y="437" width="1.1" height="15.0" fill="rgb(208,48,48)" rx="2" ry="2" />
<text  x="1073.62" y="447.5" ></text>
</g>
<g >
<title>nvme_map_data (2 samples, 0.09%)</title><rect x="125.0" y="101" width="1.1" height="15.0" fill="rgb(242,138,17)" rx="2" ry="2" />
<text  x="127.97" y="111.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.09%)</title><rect x="305.4" y="469" width="1.1" height="15.0" fill="rgb(224,2,9)" rx="2" ry="2" />
<text  x="308.41" y="479.5" ></text>
</g>
<g >
<title>search_binary_handler (4 samples, 0.19%)</title><rect x="1187.8" y="405" width="2.2" height="15.0" fill="rgb(205,76,31)" rx="2" ry="2" />
<text  x="1190.80" y="415.5" ></text>
</g>
<g >
<title>__x64_sys_read (88 samples, 4.10%)</title><rect x="89.2" y="421" width="48.4" height="15.0" fill="rgb(240,190,24)" rx="2" ry="2" />
<text  x="92.22" y="431.5" >__x6..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.61%)</title><rect x="453.4" y="469" width="7.1" height="15.0" fill="rgb(220,180,5)" rx="2" ry="2" />
<text  x="456.39" y="479.5" ></text>
</g>
<g >
<title>[C2J] (1 samples, 0.05%)</title><rect x="465.5" y="421" width="0.5" height="15.0" fill="rgb(209,208,51)" rx="2" ry="2" />
<text  x="468.50" y="431.5" ></text>
</g>
<g >
<title>std::forward&lt;unsigned int&amp;&gt; (1 samples, 0.05%)</title><rect x="474.3" y="405" width="0.5" height="15.0" fill="rgb(237,77,13)" rx="2" ry="2" />
<text  x="477.30" y="415.5" ></text>
</g>
<g >
<title>std::deque&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::pop_front (5 samples, 0.23%)</title><rect x="1059.1" y="405" width="2.7" height="15.0" fill="rgb(216,104,18)" rx="2" ry="2" />
<text  x="1062.07" y="415.5" ></text>
</g>
<g >
<title>std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair (4 samples, 0.19%)</title><rect x="491.4" y="341" width="2.2" height="15.0" fill="rgb(206,208,16)" rx="2" ry="2" />
<text  x="494.35" y="351.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;&amp;, std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*&gt;::_M_set_node (3 samples, 0.14%)</title><rect x="496.9" y="357" width="1.6" height="15.0" fill="rgb(230,49,27)" rx="2" ry="2" />
<text  x="499.85" y="367.5" ></text>
</g>
<g >
<title>up_write (1 samples, 0.05%)</title><rect x="84.3" y="341" width="0.5" height="15.0" fill="rgb(215,37,10)" rx="2" ry="2" />
<text  x="87.27" y="351.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (6 samples, 0.28%)</title><rect x="54.6" y="197" width="3.3" height="15.0" fill="rgb(209,53,52)" rx="2" ry="2" />
<text  x="57.56" y="207.5" ></text>
</g>
<g >
<title>error_exit (1 samples, 0.05%)</title><rect x="1139.9" y="469" width="0.6" height="15.0" fill="rgb(230,56,18)" rx="2" ry="2" />
<text  x="1142.94" y="479.5" ></text>
</g>
<g >
<title>__vfprintf_internal (100 samples, 4.66%)</title><rect x="242.1" y="453" width="55.1" height="15.0" fill="rgb(227,16,26)" rx="2" ry="2" />
<text  x="245.15" y="463.5" >__vfp..</text>
</g>
<g >
<title>wbt_wait (1 samples, 0.05%)</title><rect x="456.7" y="133" width="0.5" height="15.0" fill="rgb(240,84,14)" rx="2" ry="2" />
<text  x="459.69" y="143.5" ></text>
</g>
<g >
<title>deactivate_task (1 samples, 0.05%)</title><rect x="456.7" y="53" width="0.5" height="15.0" fill="rgb(228,41,25)" rx="2" ry="2" />
<text  x="459.69" y="63.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (56 samples, 2.61%)</title><rect x="306.5" y="469" width="30.8" height="15.0" fill="rgb(208,18,28)" rx="2" ry="2" />
<text  x="309.51" y="479.5" >st..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::destroy&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (3 samples, 0.14%)</title><rect x="1060.2" y="389" width="1.6" height="15.0" fill="rgb(208,160,29)" rx="2" ry="2" />
<text  x="1063.17" y="399.5" ></text>
</g>
<g >
<title>__do_page_fault (2 samples, 0.09%)</title><rect x="1117.9" y="405" width="1.1" height="15.0" fill="rgb(232,158,11)" rx="2" ry="2" />
<text  x="1120.93" y="415.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.05%)</title><rect x="303.2" y="325" width="0.6" height="15.0" fill="rgb(216,144,38)" rx="2" ry="2" />
<text  x="306.21" y="335.5" ></text>
</g>
<g >
<title>do_page_fault (42 samples, 1.96%)</title><rect x="1147.1" y="453" width="23.1" height="15.0" fill="rgb(228,223,38)" rx="2" ry="2" />
<text  x="1150.09" y="463.5" >d..</text>
</g>
<g >
<title>std::deque&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::emplace_back&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (1 samples, 0.05%)</title><rect x="476.5" y="405" width="0.5" height="15.0" fill="rgb(233,167,44)" rx="2" ry="2" />
<text  x="479.50" y="415.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.05%)</title><rect x="40.8" y="229" width="0.6" height="15.0" fill="rgb(208,74,19)" rx="2" ry="2" />
<text  x="43.81" y="239.5" ></text>
</g>
<g >
<title>fprintf (42 samples, 1.96%)</title><rect x="1071.7" y="437" width="23.1" height="15.0" fill="rgb(208,155,8)" rx="2" ry="2" />
<text  x="1074.72" y="447.5" >f..</text>
</g>
<g >
<title>perf_pmu_enable.part.0 (4 samples, 0.19%)</title><rect x="458.3" y="165" width="2.2" height="15.0" fill="rgb(238,168,20)" rx="2" ry="2" />
<text  x="461.34" y="175.5" ></text>
</g>
<g >
<title>__strchrnul_avx2 (4 samples, 0.19%)</title><rect x="1075.0" y="421" width="2.2" height="15.0" fill="rgb(251,124,46)" rx="2" ry="2" />
<text  x="1078.03" y="431.5" ></text>
</g>
<g >
<title>do_anonymous_page (2 samples, 0.09%)</title><rect x="1117.9" y="341" width="1.1" height="15.0" fill="rgb(234,8,24)" rx="2" ry="2" />
<text  x="1120.93" y="351.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.05%)</title><rect x="65.6" y="197" width="0.5" height="15.0" fill="rgb(225,179,51)" rx="2" ry="2" />
<text  x="68.56" y="207.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.05%)</title><rect x="1165.8" y="245" width="0.5" height="15.0" fill="rgb(215,156,53)" rx="2" ry="2" />
<text  x="1168.79" y="255.5" ></text>
</g>
<g >
<title>account_page_dirtied (1 samples, 0.05%)</title><rect x="76.6" y="197" width="0.5" height="15.0" fill="rgb(207,221,30)" rx="2" ry="2" />
<text  x="79.56" y="207.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.05%)</title><rect x="102.4" y="165" width="0.6" height="15.0" fill="rgb(215,53,39)" rx="2" ry="2" />
<text  x="105.42" y="175.5" ></text>
</g>
<g >
<title>free_unref_page_commit (2 samples, 0.09%)</title><rect x="1174.6" y="261" width="1.1" height="15.0" fill="rgb(232,208,2)" rx="2" ry="2" />
<text  x="1177.60" y="271.5" ></text>
</g>
<g >
<title>std::operator-&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;&amp;, std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*&gt; (1 samples, 0.05%)</title><rect x="499.6" y="341" width="0.6" height="15.0" fill="rgb(210,52,10)" rx="2" ry="2" />
<text  x="502.60" y="351.5" ></text>
</g>
<g >
<title>__memchr_avx2 (24 samples, 1.12%)</title><rect x="345.0" y="437" width="13.2" height="15.0" fill="rgb(251,206,0)" rx="2" ry="2" />
<text  x="348.02" y="447.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.05%)</title><rect x="452.3" y="453" width="0.5" height="15.0" fill="rgb(241,74,8)" rx="2" ry="2" />
<text  x="455.29" y="463.5" ></text>
</g>
<g >
<title>nvme_irq (1 samples, 0.05%)</title><rect x="1162.5" y="213" width="0.5" height="15.0" fill="rgb(222,175,5)" rx="2" ry="2" />
<text  x="1165.49" y="223.5" ></text>
</g>
<g >
<title>unmap_page_range (10 samples, 0.47%)</title><rect x="1171.8" y="341" width="5.5" height="15.0" fill="rgb(208,225,52)" rx="2" ry="2" />
<text  x="1174.85" y="351.5" ></text>
</g>
<g >
<title>__blk_mq_sched_bio_merge (1 samples, 0.05%)</title><rect x="128.8" y="149" width="0.6" height="15.0" fill="rgb(224,92,15)" rx="2" ry="2" />
<text  x="131.83" y="159.5" ></text>
</g>
<g >
<title>__libc_start_main (1,198 samples, 55.85%)</title><rect x="460.5" y="485" width="659.1" height="15.0" fill="rgb(223,212,47)" rx="2" ry="2" />
<text  x="463.55" y="495.5" >__libc_start_main</text>
</g>
<g >
<title>pagevec_lru_move_fn (1 samples, 0.05%)</title><rect x="127.7" y="149" width="0.6" height="15.0" fill="rgb(232,145,12)" rx="2" ry="2" />
<text  x="130.72" y="159.5" ></text>
</g>
<g >
<title>do_syscall_64 (13 samples, 0.61%)</title><rect x="453.4" y="453" width="7.1" height="15.0" fill="rgb(253,221,30)" rx="2" ry="2" />
<text  x="456.39" y="463.5" ></text>
</g>
<g >
<title>do_syscall_64 (110 samples, 5.13%)</title><rect x="26.5" y="437" width="60.5" height="15.0" fill="rgb(216,125,12)" rx="2" ry="2" />
<text  x="29.50" y="447.5" >do_sys..</text>
</g>
<g >
<title>_pthread_cleanup_push_defer (2 samples, 0.09%)</title><rect x="1093.7" y="421" width="1.1" height="15.0" fill="rgb(251,33,4)" rx="2" ry="2" />
<text  x="1096.73" y="431.5" ></text>
</g>
<g >
<title>[C2J] (10 samples, 0.47%)</title><rect x="1062.9" y="437" width="5.5" height="15.0" fill="rgb(223,125,23)" rx="2" ry="2" />
<text  x="1065.92" y="447.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (8 samples, 0.37%)</title><rect x="1172.9" y="309" width="4.4" height="15.0" fill="rgb(242,204,2)" rx="2" ry="2" />
<text  x="1175.95" y="319.5" ></text>
</g>
<g >
<title>__vsprintf_internal (226 samples, 10.54%)</title><rect x="172.8" y="469" width="124.4" height="15.0" fill="rgb(213,167,33)" rx="2" ry="2" />
<text  x="175.83" y="479.5" >__vsprintf_inte..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (4 samples, 0.19%)</title><rect x="488.1" y="341" width="2.2" height="15.0" fill="rgb(248,218,14)" rx="2" ry="2" />
<text  x="491.05" y="351.5" ></text>
</g>
<g >
<title>page_remove_rmap (1 samples, 0.05%)</title><rect x="1171.8" y="325" width="0.6" height="15.0" fill="rgb(220,24,54)" rx="2" ry="2" />
<text  x="1174.85" y="335.5" ></text>
</g>
<g >
<title>_IO_default_xsputn (35 samples, 1.63%)</title><rect x="176.1" y="453" width="19.3" height="15.0" fill="rgb(226,71,6)" rx="2" ry="2" />
<text  x="179.14" y="463.5" ></text>
</g>
<g >
<title>sysmalloc (6 samples, 0.28%)</title><rect x="1183.4" y="485" width="3.3" height="15.0" fill="rgb(209,121,30)" rx="2" ry="2" />
<text  x="1186.40" y="495.5" ></text>
</g>
<g >
<title>submit_bio (1 samples, 0.05%)</title><rect x="456.7" y="197" width="0.5" height="15.0" fill="rgb(209,224,29)" rx="2" ry="2" />
<text  x="459.69" y="207.5" ></text>
</g>
<g >
<title>unmap_single_vma (10 samples, 0.47%)</title><rect x="1171.8" y="357" width="5.5" height="15.0" fill="rgb(206,5,2)" rx="2" ry="2" />
<text  x="1174.85" y="367.5" ></text>
</g>
<g >
<title>trigger_load_balance (1 samples, 0.05%)</title><rect x="881.9" y="277" width="0.6" height="15.0" fill="rgb(213,158,48)" rx="2" ry="2" />
<text  x="884.93" y="287.5" ></text>
</g>
<g >
<title>do_user_addr_fault (39 samples, 1.82%)</title><rect x="1147.6" y="421" width="21.5" height="15.0" fill="rgb(245,118,53)" rx="2" ry="2" />
<text  x="1150.64" y="431.5" >d..</text>
</g>
<g >
<title>std::getline&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (6 samples, 0.28%)</title><rect x="1108.6" y="437" width="3.3" height="15.0" fill="rgb(228,198,12)" rx="2" ry="2" />
<text  x="1111.58" y="447.5" ></text>
</g>
<g >
<title>load_elf_binary (1 samples, 0.05%)</title><rect x="303.2" y="389" width="0.6" height="15.0" fill="rgb(250,188,25)" rx="2" ry="2" />
<text  x="306.21" y="399.5" ></text>
</g>
<g >
<title>mempool_kmalloc (1 samples, 0.05%)</title><rect x="125.5" y="69" width="0.6" height="15.0" fill="rgb(235,141,12)" rx="2" ry="2" />
<text  x="128.52" y="79.5" ></text>
</g>
<g >
<title>_int_free (11 samples, 0.51%)</title><rect x="297.2" y="469" width="6.0" height="15.0" fill="rgb(251,151,10)" rx="2" ry="2" />
<text  x="300.16" y="479.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.05%)</title><rect x="40.8" y="213" width="0.6" height="15.0" fill="rgb(234,39,33)" rx="2" ry="2" />
<text  x="43.81" y="223.5" ></text>
</g>
<g >
<title>__handle_mm_fault (2 samples, 0.09%)</title><rect x="1117.9" y="357" width="1.1" height="15.0" fill="rgb(225,194,45)" rx="2" ry="2" />
<text  x="1120.93" y="367.5" ></text>
</g>
<g >
<title>add_to_page_cache_lru (3 samples, 0.14%)</title><rect x="126.6" y="197" width="1.7" height="15.0" fill="rgb(223,147,36)" rx="2" ry="2" />
<text  x="129.62" y="207.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (1 samples, 0.05%)</title><rect x="1165.2" y="325" width="0.6" height="15.0" fill="rgb(232,145,6)" rx="2" ry="2" />
<text  x="1168.24" y="335.5" ></text>
</g>
<g >
<title>page_fault (3 samples, 0.14%)</title><rect x="1117.4" y="437" width="1.6" height="15.0" fill="rgb(229,218,53)" rx="2" ry="2" />
<text  x="1120.38" y="447.5" ></text>
</g>
<g >
<title>__do_execve_file.isra.0 (4 samples, 0.19%)</title><rect x="1187.8" y="421" width="2.2" height="15.0" fill="rgb(205,33,8)" rx="2" ry="2" />
<text  x="1190.80" y="431.5" ></text>
</g>
<g >
<title>vfs_write (108 samples, 5.03%)</title><rect x="27.6" y="389" width="59.4" height="15.0" fill="rgb(242,98,31)" rx="2" ry="2" />
<text  x="30.60" y="399.5" >vfs_wr..</text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::operator bool (1 samples, 0.05%)</title><rect x="1108.0" y="437" width="0.6" height="15.0" fill="rgb(209,201,1)" rx="2" ry="2" />
<text  x="1111.03" y="447.5" ></text>
</g>
<g >
<title>generic_file_read_iter (83 samples, 3.87%)</title><rect x="90.3" y="325" width="45.7" height="15.0" fill="rgb(252,105,43)" rx="2" ry="2" />
<text  x="93.32" y="335.5" >gene..</text>
</g>
<g >
<title>schedule (26 samples, 1.21%)</title><rect x="103.0" y="277" width="14.3" height="15.0" fill="rgb(247,216,37)" rx="2" ry="2" />
<text  x="105.97" y="287.5" ></text>
</g>
<g >
<title>blk_rq_map_sg (1 samples, 0.05%)</title><rect x="125.0" y="85" width="0.5" height="15.0" fill="rgb(205,101,17)" rx="2" ry="2" />
<text  x="127.97" y="95.5" ></text>
</g>
<g >
<title>__es_insert_extent (1 samples, 0.05%)</title><rect x="42.5" y="213" width="0.5" height="15.0" fill="rgb(207,132,45)" rx="2" ry="2" />
<text  x="45.46" y="223.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.05%)</title><rect x="16.1" y="453" width="0.5" height="15.0" fill="rgb(236,22,4)" rx="2" ry="2" />
<text  x="19.05" y="463.5" ></text>
</g>
<g >
<title>malloc (11 samples, 0.51%)</title><rect x="1177.3" y="485" width="6.1" height="15.0" fill="rgb(227,218,3)" rx="2" ry="2" />
<text  x="1180.35" y="495.5" ></text>
</g>
<g >
<title>do_exit (10 samples, 0.47%)</title><rect x="1171.8" y="421" width="5.5" height="15.0" fill="rgb(234,0,42)" rx="2" ry="2" />
<text  x="1174.85" y="431.5" ></text>
</g>
<g >
<title>account_page_dirtied (1 samples, 0.05%)</title><rect x="77.1" y="213" width="0.6" height="15.0" fill="rgb(246,3,26)" rx="2" ry="2" />
<text  x="80.11" y="223.5" ></text>
</g>
<g >
<title>nvme_complete_rq (1 samples, 0.05%)</title><rect x="1165.8" y="181" width="0.5" height="15.0" fill="rgb(244,18,27)" rx="2" ry="2" />
<text  x="1168.79" y="191.5" ></text>
</g>
<g >
<title>__blk_mq_try_issue_directly (4 samples, 0.19%)</title><rect x="124.4" y="133" width="2.2" height="15.0" fill="rgb(228,45,41)" rx="2" ry="2" />
<text  x="127.42" y="143.5" ></text>
</g>
<g >
<title>map_id_up (1 samples, 0.05%)</title><rect x="69.4" y="165" width="0.6" height="15.0" fill="rgb(239,183,32)" rx="2" ry="2" />
<text  x="72.41" y="175.5" ></text>
</g>
<g >
<title>unlink_chunk.isra.0 (1 samples, 0.05%)</title><rect x="365.4" y="469" width="0.5" height="15.0" fill="rgb(206,47,17)" rx="2" ry="2" />
<text  x="368.38" y="479.5" ></text>
</g>
<g >
<title>block_write_end (8 samples, 0.37%)</title><rect x="73.3" y="261" width="4.4" height="15.0" fill="rgb(209,171,3)" rx="2" ry="2" />
<text  x="76.26" y="271.5" ></text>
</g>
<g >
<title>std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair (1 samples, 0.05%)</title><rect x="494.1" y="357" width="0.6" height="15.0" fill="rgb(233,177,13)" rx="2" ry="2" />
<text  x="497.10" y="367.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.05%)</title><rect x="135.4" y="197" width="0.6" height="15.0" fill="rgb(248,176,22)" rx="2" ry="2" />
<text  x="138.43" y="207.5" ></text>
</g>
<g >
<title>mpage_submit_page (7 samples, 0.33%)</title><rect x="453.9" y="245" width="3.9" height="15.0" fill="rgb(229,74,17)" rx="2" ry="2" />
<text  x="456.94" y="255.5" ></text>
</g>
<g >
<title>mpage_prepare_extent_to_map (5 samples, 0.23%)</title><rect x="457.8" y="277" width="2.7" height="15.0" fill="rgb(212,67,25)" rx="2" ry="2" />
<text  x="460.79" y="287.5" ></text>
</g>
<g >
<title>__find_get_block (1 samples, 0.05%)</title><rect x="72.2" y="165" width="0.5" height="15.0" fill="rgb(215,59,28)" rx="2" ry="2" />
<text  x="75.16" y="175.5" ></text>
</g>
<g >
<title>nvme_irq (1 samples, 0.05%)</title><rect x="1165.8" y="229" width="0.5" height="15.0" fill="rgb(242,175,23)" rx="2" ry="2" />
<text  x="1168.79" y="239.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (100 samples, 4.66%)</title><rect x="29.3" y="341" width="55.0" height="15.0" fill="rgb(249,66,37)" rx="2" ry="2" />
<text  x="32.25" y="351.5" >ext4_..</text>
</g>
<g >
<title>__getblk_gfp (1 samples, 0.05%)</title><rect x="72.2" y="181" width="0.5" height="15.0" fill="rgb(233,1,46)" rx="2" ry="2" />
<text  x="75.16" y="191.5" ></text>
</g>
<g >
<title>io_schedule (5 samples, 0.23%)</title><rect x="457.8" y="245" width="2.7" height="15.0" fill="rgb(239,160,17)" rx="2" ry="2" />
<text  x="460.79" y="255.5" ></text>
</g>
<g >
<title>__brk (1 samples, 0.05%)</title><rect x="87.6" y="469" width="0.5" height="15.0" fill="rgb(230,89,37)" rx="2" ry="2" />
<text  x="90.57" y="479.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.05%)</title><rect x="1119.6" y="485" width="0.5" height="15.0" fill="rgb(237,95,40)" rx="2" ry="2" />
<text  x="1122.59" y="495.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::underflow (1 samples, 0.05%)</title><rect x="361.5" y="437" width="0.6" height="15.0" fill="rgb(214,176,23)" rx="2" ry="2" />
<text  x="364.52" y="447.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (5 samples, 0.23%)</title><rect x="1164.7" y="357" width="2.7" height="15.0" fill="rgb(221,41,25)" rx="2" ry="2" />
<text  x="1167.69" y="367.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (4 samples, 0.19%)</title><rect x="458.3" y="181" width="2.2" height="15.0" fill="rgb(252,9,41)" rx="2" ry="2" />
<text  x="461.34" y="191.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.05%)</title><rect x="1165.8" y="325" width="0.5" height="15.0" fill="rgb(252,14,21)" rx="2" ry="2" />
<text  x="1168.79" y="335.5" ></text>
</g>
<g >
<title>grab_cache_page_write_begin (33 samples, 1.54%)</title><rect x="44.7" y="277" width="18.1" height="15.0" fill="rgb(214,149,43)" rx="2" ry="2" />
<text  x="47.66" y="287.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.09%)</title><rect x="16.6" y="469" width="1.1" height="15.0" fill="rgb(224,154,21)" rx="2" ry="2" />
<text  x="19.60" y="479.5" ></text>
</g>
<g >
<title>xas_load (2 samples, 0.09%)</title><rect x="75.5" y="181" width="1.1" height="15.0" fill="rgb(235,135,23)" rx="2" ry="2" />
<text  x="78.46" y="191.5" ></text>
</g>
<g >
<title>_IO_default_xsputn (2 samples, 0.09%)</title><rect x="16.6" y="453" width="1.1" height="15.0" fill="rgb(234,177,3)" rx="2" ry="2" />
<text  x="19.60" y="463.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.05%)</title><rect x="135.4" y="165" width="0.6" height="15.0" fill="rgb(250,72,53)" rx="2" ry="2" />
<text  x="138.43" y="175.5" ></text>
</g>
<g >
<title>vfs_read (87 samples, 4.06%)</title><rect x="89.8" y="389" width="47.8" height="15.0" fill="rgb(241,125,48)" rx="2" ry="2" />
<text  x="92.77" y="399.5" >vfs_..</text>
</g>
<g >
<title>ksoftirqd_running (1 samples, 0.05%)</title><rect x="16.1" y="421" width="0.5" height="15.0" fill="rgb(244,107,9)" rx="2" ry="2" />
<text  x="19.05" y="431.5" ></text>
</g>
<g >
<title>std::forward&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (2 samples, 0.09%)</title><rect x="490.3" y="341" width="1.1" height="15.0" fill="rgb(233,120,49)" rx="2" ry="2" />
<text  x="493.25" y="351.5" ></text>
</g>
<g >
<title>ext4_mpage_readpages (6 samples, 0.28%)</title><rect x="126.6" y="213" width="3.3" height="15.0" fill="rgb(220,69,28)" rx="2" ry="2" />
<text  x="129.62" y="223.5" ></text>
</g>
<g >
<title>crc32c_pcl_intel_update (3 samples, 0.14%)</title><rect x="67.8" y="133" width="1.6" height="15.0" fill="rgb(239,161,22)" rx="2" ry="2" />
<text  x="70.76" y="143.5" ></text>
</g>
<g >
<title>__filemap_fdatawrite_range (13 samples, 0.61%)</title><rect x="453.4" y="325" width="7.1" height="15.0" fill="rgb(214,166,35)" rx="2" ry="2" />
<text  x="456.39" y="335.5" ></text>
</g>
<g >
<title>ext4_mark_iloc_dirty (8 samples, 0.37%)</title><rect x="65.6" y="213" width="4.4" height="15.0" fill="rgb(252,215,23)" rx="2" ry="2" />
<text  x="68.56" y="223.5" ></text>
</g>
<g >
<title>try_charge (2 samples, 0.09%)</title><rect x="1166.3" y="325" width="1.1" height="15.0" fill="rgb(253,165,38)" rx="2" ry="2" />
<text  x="1169.34" y="335.5" ></text>
</g>
<g >
<title>___slab_alloc (1 samples, 0.05%)</title><rect x="35.9" y="181" width="0.5" height="15.0" fill="rgb(236,87,39)" rx="2" ry="2" />
<text  x="38.86" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (1 samples, 0.05%)</title><rect x="342.8" y="469" width="0.6" height="15.0" fill="rgb(212,133,28)" rx="2" ry="2" />
<text  x="345.82" y="479.5" ></text>
</g>
<g >
<title>io_schedule (1 samples, 0.05%)</title><rect x="456.7" y="101" width="0.5" height="15.0" fill="rgb(207,172,44)" rx="2" ry="2" />
<text  x="459.69" y="111.5" ></text>
</g>
<g >
<title>filemap_flush (13 samples, 0.61%)</title><rect x="453.4" y="341" width="7.1" height="15.0" fill="rgb(216,43,25)" rx="2" ry="2" />
<text  x="456.39" y="351.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.05%)</title><rect x="881.9" y="405" width="0.6" height="15.0" fill="rgb(223,71,25)" rx="2" ry="2" />
<text  x="884.93" y="415.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.05%)</title><rect x="1117.9" y="293" width="0.6" height="15.0" fill="rgb(223,139,52)" rx="2" ry="2" />
<text  x="1120.93" y="303.5" ></text>
</g>
<g >
<title>ext4_claim_free_clusters (2 samples, 0.09%)</title><rect x="41.4" y="213" width="1.1" height="15.0" fill="rgb(242,168,52)" rx="2" ry="2" />
<text  x="44.36" y="223.5" ></text>
</g>
<g >
<title>nvme_pci_complete_rq (1 samples, 0.05%)</title><rect x="135.4" y="133" width="0.6" height="15.0" fill="rgb(230,158,13)" rx="2" ry="2" />
<text  x="138.43" y="143.5" ></text>
</g>
<g >
<title>page_cache_async_readahead (25 samples, 1.17%)</title><rect x="117.3" y="293" width="13.7" height="15.0" fill="rgb(211,95,53)" rx="2" ry="2" />
<text  x="120.27" y="303.5" ></text>
</g>
<g >
<title>ext4_nonda_switch (1 samples, 0.05%)</title><rect x="44.1" y="277" width="0.6" height="15.0" fill="rgb(253,11,1)" rx="2" ry="2" />
<text  x="47.11" y="287.5" ></text>
</g>
<g >
<title>pick_next_task_idle (1 samples, 0.05%)</title><rect x="116.7" y="245" width="0.6" height="15.0" fill="rgb(220,168,17)" rx="2" ry="2" />
<text  x="119.72" y="255.5" ></text>
</g>
<g >
<title>CSV2JSON::List2Cell (1 samples, 0.05%)</title><rect x="461.1" y="437" width="0.5" height="15.0" fill="rgb(217,206,18)" rx="2" ry="2" />
<text  x="464.10" y="447.5" ></text>
</g>
<g >
<title>security_file_permission (3 samples, 0.14%)</title><rect x="85.4" y="357" width="1.6" height="15.0" fill="rgb(249,91,0)" rx="2" ry="2" />
<text  x="88.37" y="367.5" ></text>
</g>
<g >
<title>perf_event_task_tick (1 samples, 0.05%)</title><rect x="452.3" y="341" width="0.5" height="15.0" fill="rgb(226,201,50)" rx="2" ry="2" />
<text  x="455.29" y="351.5" ></text>
</g>
<g >
<title>alloc_pages_vma (1 samples, 0.05%)</title><rect x="1117.9" y="325" width="0.6" height="15.0" fill="rgb(232,87,24)" rx="2" ry="2" />
<text  x="1120.93" y="335.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.05%)</title><rect x="1061.3" y="357" width="0.5" height="15.0" fill="rgb(245,183,34)" rx="2" ry="2" />
<text  x="1064.27" y="367.5" ></text>
</g>
<g >
<title>C2J (2,141 samples, 99.81%)</title><rect x="10.0" y="501" width="1177.8" height="15.0" fill="rgb(219,18,5)" rx="2" ry="2" />
<text  x="13.00" y="511.5" >C2J</text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.05%)</title><rect x="102.4" y="213" width="0.6" height="15.0" fill="rgb(221,70,15)" rx="2" ry="2" />
<text  x="105.42" y="223.5" ></text>
</g>
<g >
<title>add_transaction_credits (1 samples, 0.05%)</title><rect x="34.2" y="229" width="0.6" height="15.0" fill="rgb(215,97,12)" rx="2" ry="2" />
<text  x="37.21" y="239.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (1 samples, 0.05%)</title><rect x="102.4" y="85" width="0.6" height="15.0" fill="rgb(227,9,10)" rx="2" ry="2" />
<text  x="105.42" y="95.5" ></text>
</g>
<g >
<title>_IO_file_xsputn@@GLIBC_2.2.5 (4 samples, 0.19%)</title><rect x="17.7" y="469" width="2.2" height="15.0" fill="rgb(224,168,8)" rx="2" ry="2" />
<text  x="20.70" y="479.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (58 samples, 2.70%)</title><rect x="30.9" y="293" width="31.9" height="15.0" fill="rgb(214,148,16)" rx="2" ry="2" />
<text  x="33.90" y="303.5" >ex..</text>
</g>
<g >
<title>__xa_set_mark (2 samples, 0.09%)</title><rect x="75.5" y="197" width="1.1" height="15.0" fill="rgb(231,114,38)" rx="2" ry="2" />
<text  x="78.46" y="207.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.05%)</title><rect x="16.1" y="437" width="0.5" height="15.0" fill="rgb(228,228,54)" rx="2" ry="2" />
<text  x="19.05" y="447.5" ></text>
</g>
<g >
<title>mem_cgroup_throttle_swaprate (1 samples, 0.05%)</title><rect x="1118.5" y="309" width="0.5" height="15.0" fill="rgb(224,18,40)" rx="2" ry="2" />
<text  x="1121.48" y="319.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (3 samples, 0.14%)</title><rect x="1068.4" y="437" width="1.7" height="15.0" fill="rgb(208,143,26)" rx="2" ry="2" />
<text  x="1071.42" y="447.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;&amp;, std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.05%)</title><rect x="499.6" y="325" width="0.6" height="15.0" fill="rgb(208,149,25)" rx="2" ry="2" />
<text  x="502.60" y="335.5" ></text>
</g>
<g >
<title>blk_mq_flush_plug_list (4 samples, 0.19%)</title><rect x="124.4" y="197" width="2.2" height="15.0" fill="rgb(245,50,17)" rx="2" ry="2" />
<text  x="127.42" y="207.5" ></text>
</g>
<g >
<title>__ext4_journal_get_write_access (1 samples, 0.05%)</title><rect x="72.7" y="197" width="0.6" height="15.0" fill="rgb(224,109,33)" rx="2" ry="2" />
<text  x="75.71" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (8 samples, 0.37%)</title><rect x="1115.2" y="453" width="4.4" height="15.0" fill="rgb(239,180,18)" rx="2" ry="2" />
<text  x="1118.18" y="463.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.05%)</title><rect x="135.4" y="213" width="0.6" height="15.0" fill="rgb(243,3,35)" rx="2" ry="2" />
<text  x="138.43" y="223.5" ></text>
</g>
<g >
<title>CSV2JSON::ReadCSV (71 samples, 3.31%)</title><rect x="461.6" y="437" width="39.1" height="15.0" fill="rgb(248,89,8)" rx="2" ry="2" />
<text  x="464.65" y="447.5" >CSV..</text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.05%)</title><rect x="102.4" y="261" width="0.6" height="15.0" fill="rgb(209,92,17)" rx="2" ry="2" />
<text  x="105.42" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (2 samples, 0.09%)</title><rect x="468.2" y="421" width="1.1" height="15.0" fill="rgb(248,79,35)" rx="2" ry="2" />
<text  x="471.25" y="431.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.05%)</title><rect x="1165.8" y="261" width="0.5" height="15.0" fill="rgb(243,82,45)" rx="2" ry="2" />
<text  x="1168.79" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (10 samples, 0.47%)</title><rect x="337.3" y="469" width="5.5" height="15.0" fill="rgb(212,152,3)" rx="2" ry="2" />
<text  x="340.32" y="479.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.05%)</title><rect x="135.4" y="245" width="0.6" height="15.0" fill="rgb(234,36,26)" rx="2" ry="2" />
<text  x="138.43" y="255.5" ></text>
</g>
<g >
<title>ksys_read (88 samples, 4.10%)</title><rect x="89.2" y="405" width="48.4" height="15.0" fill="rgb(205,175,27)" rx="2" ry="2" />
<text  x="92.22" y="415.5" >ksys..</text>
</g>
<g >
<title>do_page_fault (2 samples, 0.09%)</title><rect x="1117.9" y="421" width="1.1" height="15.0" fill="rgb(249,207,38)" rx="2" ry="2" />
<text  x="1120.93" y="431.5" ></text>
</g>
<g >
<title>CSV2JSON::CSV2JSON (1,190 samples, 55.48%)</title><rect x="460.5" y="453" width="654.7" height="15.0" fill="rgb(225,83,18)" rx="2" ry="2" />
<text  x="463.55" y="463.5" >CSV2JSON::CSV2JSON</text>
</g>
<g >
<title>page_remove_rmap (1 samples, 0.05%)</title><rect x="1172.4" y="309" width="0.5" height="15.0" fill="rgb(209,44,36)" rx="2" ry="2" />
<text  x="1175.40" y="319.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.05%)</title><rect x="89.2" y="389" width="0.6" height="15.0" fill="rgb(229,190,35)" rx="2" ry="2" />
<text  x="92.22" y="399.5" ></text>
</g>
<g >
<title>do_anonymous_page (1 samples, 0.05%)</title><rect x="1186.1" y="373" width="0.6" height="15.0" fill="rgb(231,93,37)" rx="2" ry="2" />
<text  x="1189.15" y="383.5" ></text>
</g>
<g >
<title>__slab_alloc (1 samples, 0.05%)</title><rect x="35.9" y="197" width="0.5" height="15.0" fill="rgb(251,167,14)" rx="2" ry="2" />
<text  x="38.86" y="207.5" ></text>
</g>
<g >
<title>malloc (3 samples, 0.14%)</title><rect x="303.8" y="469" width="1.6" height="15.0" fill="rgb(218,0,46)" rx="2" ry="2" />
<text  x="306.76" y="479.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.0 (1 samples, 0.05%)</title><rect x="102.4" y="117" width="0.6" height="15.0" fill="rgb(248,85,0)" rx="2" ry="2" />
<text  x="105.42" y="127.5" ></text>
</g>
<g >
<title>__do_page_fault (42 samples, 1.96%)</title><rect x="1147.1" y="437" width="23.1" height="15.0" fill="rgb(231,79,6)" rx="2" ry="2" />
<text  x="1150.09" y="447.5" >_..</text>
</g>
<g >
<title>__x64_sys_exit_group (10 samples, 0.47%)</title><rect x="1171.8" y="453" width="5.5" height="15.0" fill="rgb(235,119,49)" rx="2" ry="2" />
<text  x="1174.85" y="463.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.05%)</title><rect x="456.7" y="85" width="0.5" height="15.0" fill="rgb(233,44,32)" rx="2" ry="2" />
<text  x="459.69" y="95.5" ></text>
</g>
<g >
<title>lru_cache_add (4 samples, 0.19%)</title><rect x="60.6" y="229" width="2.2" height="15.0" fill="rgb(221,5,7)" rx="2" ry="2" />
<text  x="63.61" y="239.5" ></text>
</g>
<g >
<title>workingset_update_node (1 samples, 0.05%)</title><rect x="59.5" y="213" width="0.6" height="15.0" fill="rgb(241,116,0)" rx="2" ry="2" />
<text  x="62.51" y="223.5" ></text>
</g>
<g >
<title>release_pages (6 samples, 0.28%)</title><rect x="1174.0" y="277" width="3.3" height="15.0" fill="rgb(254,219,25)" rx="2" ry="2" />
<text  x="1177.05" y="287.5" ></text>
</g>
<g >
<title>unlock_page (1 samples, 0.05%)</title><rect x="77.7" y="277" width="0.5" height="15.0" fill="rgb(210,162,28)" rx="2" ry="2" />
<text  x="80.66" y="287.5" ></text>
</g>
<g >
<title>copy_page_to_iter (21 samples, 0.98%)</title><rect x="91.4" y="293" width="11.6" height="15.0" fill="rgb(238,47,11)" rx="2" ry="2" />
<text  x="94.42" y="303.5" ></text>
</g>
<g >
<title>__mempcpy_avx_unaligned_erms (1 samples, 0.05%)</title><rect x="167.9" y="469" width="0.5" height="15.0" fill="rgb(254,125,45)" rx="2" ry="2" />
<text  x="170.88" y="479.5" ></text>
</g>
<g >
<title>new_sync_read (84 samples, 3.92%)</title><rect x="89.8" y="357" width="46.2" height="15.0" fill="rgb(232,175,43)" rx="2" ry="2" />
<text  x="92.77" y="367.5" >new_..</text>
</g>
<g >
<title>blk_mq_make_request (1 samples, 0.05%)</title><rect x="128.8" y="165" width="0.6" height="15.0" fill="rgb(253,63,33)" rx="2" ry="2" />
<text  x="131.83" y="175.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.05%)</title><rect x="1161.9" y="341" width="0.6" height="15.0" fill="rgb(216,103,20)" rx="2" ry="2" />
<text  x="1164.94" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.05%)</title><rect x="943.5" y="421" width="0.6" height="15.0" fill="rgb(209,99,17)" rx="2" ry="2" />
<text  x="946.55" y="431.5" ></text>
</g>
<g >
<title>ext4_es_lookup_extent (2 samples, 0.09%)</title><rect x="43.0" y="229" width="1.1" height="15.0" fill="rgb(246,141,32)" rx="2" ry="2" />
<text  x="46.01" y="239.5" ></text>
</g>
<g >
<title>crypto_shash_update (3 samples, 0.14%)</title><rect x="67.8" y="149" width="1.6" height="15.0" fill="rgb(251,110,0)" rx="2" ry="2" />
<text  x="70.76" y="159.5" ></text>
</g>
<g >
<title>ext4_has_free_clusters (2 samples, 0.09%)</title><rect x="41.4" y="197" width="1.1" height="15.0" fill="rgb(233,47,15)" rx="2" ry="2" />
<text  x="44.36" y="207.5" ></text>
</g>
<g >
<title>perf_event_exec (4 samples, 0.19%)</title><rect x="1187.8" y="357" width="2.2" height="15.0" fill="rgb(214,180,7)" rx="2" ry="2" />
<text  x="1190.80" y="367.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.05%)</title><rect x="303.2" y="341" width="0.6" height="15.0" fill="rgb(220,169,33)" rx="2" ry="2" />
<text  x="306.21" y="351.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (2 samples, 0.09%)</title><rect x="343.9" y="437" width="1.1" height="15.0" fill="rgb(221,194,8)" rx="2" ry="2" />
<text  x="346.92" y="447.5" ></text>
</g>
<g >
<title>generic_file_buffered_read (83 samples, 3.87%)</title><rect x="90.3" y="309" width="45.7" height="15.0" fill="rgb(231,144,32)" rx="2" ry="2" />
<text  x="93.32" y="319.5" >gene..</text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.05%)</title><rect x="40.8" y="149" width="0.6" height="15.0" fill="rgb(231,154,47)" rx="2" ry="2" />
<text  x="43.81" y="159.5" ></text>
</g>
<g >
<title>std::deque&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::emplace_back&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (37 samples, 1.72%)</title><rect x="480.3" y="389" width="20.4" height="15.0" fill="rgb(246,129,3)" rx="2" ry="2" />
<text  x="483.35" y="399.5" ></text>
</g>
<g >
<title>security_vm_enough_memory_mm (1 samples, 0.05%)</title><rect x="87.6" y="389" width="0.5" height="15.0" fill="rgb(254,103,23)" rx="2" ry="2" />
<text  x="90.57" y="399.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (1 samples, 0.05%)</title><rect x="87.0" y="453" width="0.6" height="15.0" fill="rgb(253,198,48)" rx="2" ry="2" />
<text  x="90.02" y="463.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.05%)</title><rect x="881.9" y="357" width="0.6" height="15.0" fill="rgb(224,117,41)" rx="2" ry="2" />
<text  x="884.93" y="367.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.05%)</title><rect x="40.3" y="229" width="0.5" height="15.0" fill="rgb(242,0,39)" rx="2" ry="2" />
<text  x="43.26" y="239.5" ></text>
</g>
<g >
<title>__schedule (5 samples, 0.23%)</title><rect x="457.8" y="213" width="2.7" height="15.0" fill="rgb(234,32,0)" rx="2" ry="2" />
<text  x="460.79" y="223.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.05%)</title><rect x="102.4" y="181" width="0.6" height="15.0" fill="rgb(226,166,31)" rx="2" ry="2" />
<text  x="105.42" y="191.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (16 samples, 0.75%)</title><rect x="1152.6" y="341" width="8.8" height="15.0" fill="rgb(242,196,35)" rx="2" ry="2" />
<text  x="1155.59" y="351.5" ></text>
</g>
<g >
<title>sync_regs (3 samples, 0.14%)</title><rect x="1170.2" y="469" width="1.6" height="15.0" fill="rgb(221,221,44)" rx="2" ry="2" />
<text  x="1173.20" y="479.5" ></text>
</g>
<g >
<title>blk_finish_plug (4 samples, 0.19%)</title><rect x="124.4" y="229" width="2.2" height="15.0" fill="rgb(207,98,44)" rx="2" ry="2" />
<text  x="127.42" y="239.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_allocate_node (4 samples, 0.19%)</title><rect x="494.7" y="357" width="2.2" height="15.0" fill="rgb(226,55,24)" rx="2" ry="2" />
<text  x="497.65" y="367.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.05%)</title><rect x="102.4" y="149" width="0.6" height="15.0" fill="rgb(214,117,6)" rx="2" ry="2" />
<text  x="105.42" y="159.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.05%)</title><rect x="74.9" y="197" width="0.6" height="15.0" fill="rgb(230,189,23)" rx="2" ry="2" />
<text  x="77.91" y="207.5" ></text>
</g>
<g >
<title>clear_page_erms (6 samples, 0.28%)</title><rect x="120.6" y="181" width="3.3" height="15.0" fill="rgb(238,172,45)" rx="2" ry="2" />
<text  x="123.57" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (12 samples, 0.56%)</title><rect x="1101.4" y="437" width="6.6" height="15.0" fill="rgb(252,123,6)" rx="2" ry="2" />
<text  x="1104.43" y="447.5" ></text>
</g>
<g >
<title>rw_verify_area (4 samples, 0.19%)</title><rect x="84.8" y="373" width="2.2" height="15.0" fill="rgb(225,20,41)" rx="2" ry="2" />
<text  x="87.82" y="383.5" ></text>
</g>
<g >
<title>switch_fpu_return (1 samples, 0.05%)</title><rect x="138.2" y="437" width="0.5" height="15.0" fill="rgb(230,170,36)" rx="2" ry="2" />
<text  x="141.18" y="447.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (11 samples, 0.51%)</title><rect x="10.6" y="469" width="6.0" height="15.0" fill="rgb(239,155,5)" rx="2" ry="2" />
<text  x="13.55" y="479.5" ></text>
</g>
<g >
<title>__test_set_page_writeback (1 samples, 0.05%)</title><rect x="456.1" y="213" width="0.6" height="15.0" fill="rgb(229,28,36)" rx="2" ry="2" />
<text  x="459.14" y="223.5" ></text>
</g>
<g >
<title>__add_to_page_cache_locked (17 samples, 0.79%)</title><rect x="51.3" y="229" width="9.3" height="15.0" fill="rgb(241,212,50)" rx="2" ry="2" />
<text  x="54.26" y="239.5" ></text>
</g>
<g >
<title>finish_task_switch (24 samples, 1.12%)</title><rect x="103.5" y="245" width="13.2" height="15.0" fill="rgb(235,217,4)" rx="2" ry="2" />
<text  x="106.52" y="255.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.05%)</title><rect x="40.8" y="181" width="0.6" height="15.0" fill="rgb(220,21,54)" rx="2" ry="2" />
<text  x="43.81" y="191.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.05%)</title><rect x="91.4" y="245" width="0.6" height="15.0" fill="rgb(249,112,27)" rx="2" ry="2" />
<text  x="94.42" y="255.5" ></text>
</g>
<g >
<title>allocate_slab (1 samples, 0.05%)</title><rect x="35.9" y="149" width="0.5" height="15.0" fill="rgb(243,44,46)" rx="2" ry="2" />
<text  x="38.86" y="159.5" ></text>
</g>
<g >
<title>__lock_page (5 samples, 0.23%)</title><rect x="457.8" y="261" width="2.7" height="15.0" fill="rgb(211,188,47)" rx="2" ry="2" />
<text  x="460.79" y="271.5" ></text>
</g>
<g >
<title>native_write_msr (4 samples, 0.19%)</title><rect x="1187.8" y="277" width="2.2" height="15.0" fill="rgb(249,51,46)" rx="2" ry="2" />
<text  x="1190.80" y="287.5" ></text>
</g>
<g >
<title>page_poisoning_enabled (1 samples, 0.05%)</title><rect x="1159.2" y="309" width="0.5" height="15.0" fill="rgb(219,15,35)" rx="2" ry="2" />
<text  x="1162.19" y="319.5" ></text>
</g>
<g >
<title>std::istream::sentry::sentry (3 samples, 0.14%)</title><rect x="1111.9" y="437" width="1.6" height="15.0" fill="rgb(219,204,39)" rx="2" ry="2" />
<text  x="1114.88" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (14 samples, 0.65%)</title><rect x="485.9" y="357" width="7.7" height="15.0" fill="rgb(229,138,33)" rx="2" ry="2" />
<text  x="488.85" y="367.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (3 samples, 0.14%)</title><rect x="925.4" y="421" width="1.6" height="15.0" fill="rgb(206,53,40)" rx="2" ry="2" />
<text  x="928.39" y="431.5" ></text>
</g>
<g >
<title>nvme_pci_complete_rq (1 samples, 0.05%)</title><rect x="1165.8" y="197" width="0.5" height="15.0" fill="rgb(218,127,42)" rx="2" ry="2" />
<text  x="1168.79" y="207.5" ></text>
</g>
<g >
<title>std::forward&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (1 samples, 0.05%)</title><rect x="493.6" y="357" width="0.5" height="15.0" fill="rgb(237,62,53)" rx="2" ry="2" />
<text  x="496.55" y="367.5" ></text>
</g>
<g >
<title>ext4_es_insert_delayed_block (1 samples, 0.05%)</title><rect x="42.5" y="229" width="0.5" height="15.0" fill="rgb(209,197,45)" rx="2" ry="2" />
<text  x="45.46" y="239.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (19 samples, 0.89%)</title><rect x="484.2" y="373" width="10.5" height="15.0" fill="rgb(228,30,48)" rx="2" ry="2" />
<text  x="487.20" y="383.5" ></text>
</g>
<g >
<title>__vfs_write (103 samples, 4.80%)</title><rect x="28.2" y="373" width="56.6" height="15.0" fill="rgb(230,64,25)" rx="2" ry="2" />
<text  x="31.15" y="383.5" >__vfs_..</text>
</g>
<g >
<title>blk_mq_start_request (1 samples, 0.05%)</title><rect x="124.4" y="101" width="0.6" height="15.0" fill="rgb(206,218,43)" rx="2" ry="2" />
<text  x="127.42" y="111.5" ></text>
</g>
<g >
<title>wbt_issue (1 samples, 0.05%)</title><rect x="124.4" y="85" width="0.6" height="15.0" fill="rgb(241,21,49)" rx="2" ry="2" />
<text  x="127.42" y="95.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.05%)</title><rect x="1186.1" y="437" width="0.6" height="15.0" fill="rgb(245,192,24)" rx="2" ry="2" />
<text  x="1189.15" y="447.5" ></text>
</g>
<g >
<title>std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair&lt;unsigned int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, true&gt; (4 samples, 0.19%)</title><rect x="472.6" y="421" width="2.2" height="15.0" fill="rgb(238,165,28)" rx="2" ry="2" />
<text  x="475.65" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::allocate (2 samples, 0.09%)</title><rect x="495.8" y="325" width="1.1" height="15.0" fill="rgb(244,123,7)" rx="2" ry="2" />
<text  x="498.75" y="335.5" ></text>
</g>
<g >
<title>xas_clear_mark (1 samples, 0.05%)</title><rect x="457.2" y="213" width="0.6" height="15.0" fill="rgb(211,224,28)" rx="2" ry="2" />
<text  x="460.24" y="223.5" ></text>
</g>
<g >
<title>mem_cgroup_charge_statistics (1 samples, 0.05%)</title><rect x="53.5" y="197" width="0.5" height="15.0" fill="rgb(207,72,25)" rx="2" ry="2" />
<text  x="56.46" y="207.5" ></text>
</g>
<g >
<title>xas_load (1 samples, 0.05%)</title><rect x="135.4" y="261" width="0.6" height="15.0" fill="rgb(237,134,36)" rx="2" ry="2" />
<text  x="138.43" y="271.5" ></text>
</g>
<g >
<title>trigger_load_balance (1 samples, 0.05%)</title><rect x="40.8" y="101" width="0.6" height="15.0" fill="rgb(213,45,22)" rx="2" ry="2" />
<text  x="43.81" y="111.5" ></text>
</g>
<g >
<title>get_page_from_freelist (8 samples, 0.37%)</title><rect x="120.0" y="197" width="4.4" height="15.0" fill="rgb(254,112,36)" rx="2" ry="2" />
<text  x="123.02" y="207.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.05%)</title><rect x="40.8" y="133" width="0.6" height="15.0" fill="rgb(239,4,49)" rx="2" ry="2" />
<text  x="43.81" y="143.5" ></text>
</g>
<g >
<title>nvme_irq (1 samples, 0.05%)</title><rect x="135.4" y="149" width="0.6" height="15.0" fill="rgb(246,125,11)" rx="2" ry="2" />
<text  x="138.43" y="159.5" ></text>
</g>
<g >
<title>std::forward&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (1 samples, 0.05%)</title><rect x="500.2" y="373" width="0.5" height="15.0" fill="rgb(207,140,23)" rx="2" ry="2" />
<text  x="503.15" y="383.5" ></text>
</g>
<g >
<title>std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair (3 samples, 0.14%)</title><rect x="1053.0" y="421" width="1.7" height="15.0" fill="rgb(245,212,49)" rx="2" ry="2" />
<text  x="1056.02" y="431.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.05%)</title><rect x="1072.3" y="421" width="0.5" height="15.0" fill="rgb(208,106,15)" rx="2" ry="2" />
<text  x="1075.28" y="431.5" ></text>
</g>
<g >
<title>do_syscall_64 (10 samples, 0.47%)</title><rect x="1171.8" y="469" width="5.5" height="15.0" fill="rgb(240,209,8)" rx="2" ry="2" />
<text  x="1174.85" y="479.5" ></text>
</g>
<g >
<title>__do_execve_file.isra.0 (1 samples, 0.05%)</title><rect x="303.2" y="421" width="0.6" height="15.0" fill="rgb(227,224,25)" rx="2" ry="2" />
<text  x="306.21" y="431.5" ></text>
</g>
<g >
<title>try_charge (3 samples, 0.14%)</title><rect x="57.9" y="197" width="1.6" height="15.0" fill="rgb(231,120,42)" rx="2" ry="2" />
<text  x="60.86" y="207.5" ></text>
</g>
<g >
<title>_IO_file_xsputn@@GLIBC_2.2.5 (4 samples, 0.19%)</title><rect x="1072.8" y="421" width="2.2" height="15.0" fill="rgb(220,87,54)" rx="2" ry="2" />
<text  x="1075.83" y="431.5" ></text>
</g>
<g >
<title>std::deque&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::front (5 samples, 0.23%)</title><rect x="1056.3" y="405" width="2.8" height="15.0" fill="rgb(235,29,9)" rx="2" ry="2" />
<text  x="1059.32" y="415.5" ></text>
</g>
<g >
<title>ext4_journal_check_start (1 samples, 0.05%)</title><rect x="65.0" y="213" width="0.6" height="15.0" fill="rgb(241,131,8)" rx="2" ry="2" />
<text  x="68.01" y="223.5" ></text>
</g>
<g >
<title>from_kuid (1 samples, 0.05%)</title><rect x="69.4" y="181" width="0.6" height="15.0" fill="rgb(244,93,24)" rx="2" ry="2" />
<text  x="72.41" y="191.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (1 samples, 0.05%)</title><rect x="1060.7" y="357" width="0.6" height="15.0" fill="rgb(242,1,0)" rx="2" ry="2" />
<text  x="1063.72" y="367.5" ></text>
</g>
<g >
<title>ext4_do_update_inode (7 samples, 0.33%)</title><rect x="66.1" y="197" width="3.9" height="15.0" fill="rgb(220,222,28)" rx="2" ry="2" />
<text  x="69.11" y="207.5" ></text>
</g>
<g >
<title>release_pages (1 samples, 0.05%)</title><rect x="1164.1" y="309" width="0.6" height="15.0" fill="rgb(248,139,34)" rx="2" ry="2" />
<text  x="1167.14" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (1 samples, 0.05%)</title><rect x="361.0" y="437" width="0.5" height="15.0" fill="rgb(223,111,45)" rx="2" ry="2" />
<text  x="363.97" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator[] (91 samples, 4.24%)</title><rect x="982.1" y="421" width="50.0" height="15.0" fill="rgb(234,155,15)" rx="2" ry="2" />
<text  x="985.06" y="431.5" >std::..</text>
</g>
<g >
<title>mpage_map_and_submit_buffers (8 samples, 0.37%)</title><rect x="453.4" y="261" width="4.4" height="15.0" fill="rgb(235,164,29)" rx="2" ry="2" />
<text  x="456.39" y="271.5" ></text>
</g>
<g >
<title>x2apic_send_IPI (1 samples, 0.05%)</title><rect x="881.9" y="245" width="0.6" height="15.0" fill="rgb(232,1,32)" rx="2" ry="2" />
<text  x="884.93" y="255.5" ></text>
</g>
<g >
<title>__close_nocancel (13 samples, 0.61%)</title><rect x="453.4" y="485" width="7.1" height="15.0" fill="rgb(241,173,7)" rx="2" ry="2" />
<text  x="456.39" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::substr (30 samples, 1.40%)</title><rect x="1032.1" y="421" width="16.5" height="15.0" fill="rgb(252,64,43)" rx="2" ry="2" />
<text  x="1035.12" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::destroy&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (3 samples, 0.14%)</title><rect x="1060.2" y="373" width="1.6" height="15.0" fill="rgb(242,190,0)" rx="2" ry="2" />
<text  x="1063.17" y="383.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (1 samples, 0.05%)</title><rect x="303.2" y="373" width="0.6" height="15.0" fill="rgb(251,38,14)" rx="2" ry="2" />
<text  x="306.21" y="383.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (91 samples, 4.24%)</title><rect x="88.7" y="453" width="50.0" height="15.0" fill="rgb(251,168,17)" rx="2" ry="2" />
<text  x="91.67" y="463.5" >entry..</text>
</g>
<g >
<title>crc32c_pcl_intel_update (1 samples, 0.05%)</title><rect x="67.2" y="149" width="0.6" height="15.0" fill="rgb(251,85,21)" rx="2" ry="2" />
<text  x="70.21" y="159.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.05%)</title><rect x="102.4" y="197" width="0.6" height="15.0" fill="rgb(210,172,2)" rx="2" ry="2" />
<text  x="105.42" y="207.5" ></text>
</g>
<g >
<title>mpage_end_io (1 samples, 0.05%)</title><rect x="1162.5" y="101" width="0.5" height="15.0" fill="rgb(227,25,53)" rx="2" ry="2" />
<text  x="1165.49" y="111.5" ></text>
</g>
<g >
<title>nvme_setup_cmd (1 samples, 0.05%)</title><rect x="126.1" y="117" width="0.5" height="15.0" fill="rgb(239,147,46)" rx="2" ry="2" />
<text  x="129.07" y="127.5" ></text>
</g>
<g >
<title>nvme_complete_rq (1 samples, 0.05%)</title><rect x="1162.5" y="165" width="0.5" height="15.0" fill="rgb(222,110,27)" rx="2" ry="2" />
<text  x="1165.49" y="175.5" ></text>
</g>
<g >
<title>xas_create (1 samples, 0.05%)</title><rect x="60.1" y="197" width="0.5" height="15.0" fill="rgb(219,85,17)" rx="2" ry="2" />
<text  x="63.06" y="207.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.05%)</title><rect x="1186.1" y="389" width="0.6" height="15.0" fill="rgb(209,134,32)" rx="2" ry="2" />
<text  x="1189.15" y="399.5" ></text>
</g>
<g >
<title>memset_erms (2 samples, 0.09%)</title><rect x="32.0" y="245" width="1.1" height="15.0" fill="rgb(207,176,33)" rx="2" ry="2" />
<text  x="35.00" y="255.5" ></text>
</g>
<g >
<title>iov_iter_copy_from_user_atomic (6 samples, 0.28%)</title><rect x="78.2" y="293" width="3.3" height="15.0" fill="rgb(217,124,18)" rx="2" ry="2" />
<text  x="81.21" y="303.5" ></text>
</g>
<g >
<title>bio_alloc_bioset (1 samples, 0.05%)</title><rect x="128.3" y="197" width="0.5" height="15.0" fill="rgb(227,26,48)" rx="2" ry="2" />
<text  x="131.28" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (1 samples, 0.05%)</title><rect x="499.1" y="341" width="0.5" height="15.0" fill="rgb(240,115,11)" rx="2" ry="2" />
<text  x="502.05" y="351.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (6 samples, 0.28%)</title><rect x="78.2" y="277" width="3.3" height="15.0" fill="rgb(243,157,45)" rx="2" ry="2" />
<text  x="81.21" y="287.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.05%)</title><rect x="87.6" y="453" width="0.5" height="15.0" fill="rgb(246,124,45)" rx="2" ry="2" />
<text  x="90.57" y="463.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.05%)</title><rect x="87.6" y="437" width="0.5" height="15.0" fill="rgb(254,134,36)" rx="2" ry="2" />
<text  x="90.57" y="447.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.05%)</title><rect x="91.4" y="277" width="0.6" height="15.0" fill="rgb(208,140,9)" rx="2" ry="2" />
<text  x="94.42" y="287.5" ></text>
</g>
<g >
<title>__x64_sys_brk (1 samples, 0.05%)</title><rect x="87.6" y="421" width="0.5" height="15.0" fill="rgb(244,4,27)" rx="2" ry="2" />
<text  x="90.57" y="431.5" ></text>
</g>
<g >
<title>read_pages (10 samples, 0.47%)</title><rect x="124.4" y="245" width="5.5" height="15.0" fill="rgb(240,144,46)" rx="2" ry="2" />
<text  x="127.42" y="255.5" ></text>
</g>
<g >
<title>perf_event_task_tick (1 samples, 0.05%)</title><rect x="102.4" y="133" width="0.6" height="15.0" fill="rgb(244,188,26)" rx="2" ry="2" />
<text  x="105.42" y="143.5" ></text>
</g>
<g >
<title>__block_commit_write.isra.0 (8 samples, 0.37%)</title><rect x="73.3" y="245" width="4.4" height="15.0" fill="rgb(217,0,29)" rx="2" ry="2" />
<text  x="76.26" y="255.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.05%)</title><rect x="1117.9" y="309" width="0.6" height="15.0" fill="rgb(221,127,32)" rx="2" ry="2" />
<text  x="1120.93" y="319.5" ></text>
</g>
<g >
<title>ext4_reserve_inode_write (6 samples, 0.28%)</title><rect x="70.0" y="213" width="3.3" height="15.0" fill="rgb(244,162,18)" rx="2" ry="2" />
<text  x="72.96" y="223.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.05%)</title><rect x="1165.8" y="293" width="0.5" height="15.0" fill="rgb(230,170,29)" rx="2" ry="2" />
<text  x="1168.79" y="303.5" ></text>
</g>
<g >
<title>psi_task_change (1 samples, 0.05%)</title><rect x="103.0" y="229" width="0.5" height="15.0" fill="rgb(224,44,33)" rx="2" ry="2" />
<text  x="105.97" y="239.5" ></text>
</g>
<g >
<title>do_anonymous_page (29 samples, 1.35%)</title><rect x="1151.5" y="373" width="15.9" height="15.0" fill="rgb(207,29,38)" rx="2" ry="2" />
<text  x="1154.49" y="383.5" ></text>
</g>
<g >
<title>__count_memcg_events (1 samples, 0.05%)</title><rect x="1149.3" y="389" width="0.5" height="15.0" fill="rgb(227,13,21)" rx="2" ry="2" />
<text  x="1152.29" y="399.5" ></text>
</g>
<g >
<title>__do_page_cache_readahead (25 samples, 1.17%)</title><rect x="117.3" y="261" width="13.7" height="15.0" fill="rgb(209,50,41)" rx="2" ry="2" />
<text  x="120.27" y="271.5" ></text>
</g>
<g >
<title>__x64_sys_write (2 samples, 0.09%)</title><rect x="25.4" y="437" width="1.1" height="15.0" fill="rgb(236,175,46)" rx="2" ry="2" />
<text  x="28.40" y="447.5" ></text>
</g>
<g >
<title>load_elf_binary (4 samples, 0.19%)</title><rect x="1187.8" y="389" width="2.2" height="15.0" fill="rgb(232,200,28)" rx="2" ry="2" />
<text  x="1190.80" y="399.5" ></text>
</g>
<g >
<title>free_unref_page_commit (2 samples, 0.09%)</title><rect x="1175.7" y="245" width="1.1" height="15.0" fill="rgb(223,16,46)" rx="2" ry="2" />
<text  x="1178.70" y="255.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.05%)</title><rect x="1186.1" y="357" width="0.6" height="15.0" fill="rgb(234,138,14)" rx="2" ry="2" />
<text  x="1189.15" y="367.5" ></text>
</g>
<g >
<title>CSV2JSON::ThreadingParseDatas (1,020 samples, 47.55%)</title><rect x="500.7" y="437" width="561.1" height="15.0" fill="rgb(225,156,15)" rx="2" ry="2" />
<text  x="503.70" y="447.5" >CSV2JSON::ThreadingParseDatas</text>
</g>
<g >
<title>bvec_alloc (1 samples, 0.05%)</title><rect x="128.3" y="181" width="0.5" height="15.0" fill="rgb(214,87,12)" rx="2" ry="2" />
<text  x="131.28" y="191.5" ></text>
</g>
<g >
<title>std::deque&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_push_back_aux&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (10 samples, 0.47%)</title><rect x="494.7" y="373" width="5.5" height="15.0" fill="rgb(240,181,9)" rx="2" ry="2" />
<text  x="497.65" y="383.5" ></text>
</g>
<g >
<title>nvme_queue_rq (3 samples, 0.14%)</title><rect x="124.4" y="117" width="1.7" height="15.0" fill="rgb(241,79,0)" rx="2" ry="2" />
<text  x="127.42" y="127.5" ></text>
</g>
<g >
<title>sync_regs (1 samples, 0.05%)</title><rect x="1119.0" y="437" width="0.6" height="15.0" fill="rgb(239,127,8)" rx="2" ry="2" />
<text  x="1122.03" y="447.5" ></text>
</g>
<g >
<title>switch_fpu_return (1 samples, 0.05%)</title><rect x="137.6" y="421" width="0.6" height="15.0" fill="rgb(228,76,15)" rx="2" ry="2" />
<text  x="140.63" y="431.5" ></text>
</g>
<g >
<title>std::move&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;&amp;&gt; (2 samples, 0.09%)</title><rect x="471.5" y="421" width="1.1" height="15.0" fill="rgb(249,100,33)" rx="2" ry="2" />
<text  x="474.55" y="431.5" ></text>
</g>
<g >
<title>ext4_inode_csum_set (4 samples, 0.19%)</title><rect x="67.2" y="181" width="2.2" height="15.0" fill="rgb(240,145,37)" rx="2" ry="2" />
<text  x="70.21" y="191.5" ></text>
</g>
<g >
<title>__strlen_avx2 (17 samples, 0.79%)</title><rect x="1077.2" y="421" width="9.4" height="15.0" fill="rgb(248,227,0)" rx="2" ry="2" />
<text  x="1080.23" y="431.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.19%)</title><rect x="458.3" y="149" width="2.2" height="15.0" fill="rgb(241,192,16)" rx="2" ry="2" />
<text  x="461.34" y="159.5" ></text>
</g>
<g >
<title>__libc_read (97 samples, 4.52%)</title><rect x="88.1" y="469" width="53.4" height="15.0" fill="rgb(240,140,6)" rx="2" ry="2" />
<text  x="91.12" y="479.5" >__lib..</text>
</g>
<g >
<title>__GI___libc_write (117 samples, 5.45%)</title><rect x="23.2" y="469" width="64.4" height="15.0" fill="rgb(252,153,30)" rx="2" ry="2" />
<text  x="26.20" y="479.5" >__GI___..</text>
</g>
<g >
<title>psi_task_change (1 samples, 0.05%)</title><rect x="456.7" y="37" width="0.5" height="15.0" fill="rgb(223,178,42)" rx="2" ry="2" />
<text  x="459.69" y="47.5" ></text>
</g>
<g >
<title>ext4_bio_write_page (4 samples, 0.19%)</title><rect x="455.6" y="229" width="2.2" height="15.0" fill="rgb(215,150,5)" rx="2" ry="2" />
<text  x="458.59" y="239.5" ></text>
</g>
<g >
<title>blk_mq_request_issue_directly (4 samples, 0.19%)</title><rect x="124.4" y="149" width="2.2" height="15.0" fill="rgb(213,113,44)" rx="2" ry="2" />
<text  x="127.42" y="159.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.05%)</title><rect x="135.4" y="181" width="0.6" height="15.0" fill="rgb(220,89,36)" rx="2" ry="2" />
<text  x="138.43" y="191.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.05%)</title><rect x="452.3" y="389" width="0.5" height="15.0" fill="rgb(235,105,19)" rx="2" ry="2" />
<text  x="455.29" y="399.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.05%)</title><rect x="881.9" y="309" width="0.6" height="15.0" fill="rgb(243,13,24)" rx="2" ry="2" />
<text  x="884.93" y="319.5" ></text>
</g>
<g >
<title>pagecache_get_page (33 samples, 1.54%)</title><rect x="44.7" y="261" width="18.1" height="15.0" fill="rgb(242,90,54)" rx="2" ry="2" />
<text  x="47.66" y="271.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.05%)</title><rect x="1186.1" y="421" width="0.6" height="15.0" fill="rgb(234,17,21)" rx="2" ry="2" />
<text  x="1189.15" y="431.5" ></text>
</g>
<g >
<title>_IO_str_init_static_internal (3 samples, 0.14%)</title><rect x="21.6" y="469" width="1.6" height="15.0" fill="rgb(209,197,22)" rx="2" ry="2" />
<text  x="24.55" y="479.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (1 samples, 0.05%)</title><rect x="126.6" y="165" width="0.6" height="15.0" fill="rgb(228,131,42)" rx="2" ry="2" />
<text  x="129.62" y="175.5" ></text>
</g>
<g >
<title>generic_make_request (2 samples, 0.09%)</title><rect x="128.8" y="181" width="1.1" height="15.0" fill="rgb(247,94,50)" rx="2" ry="2" />
<text  x="131.83" y="191.5" ></text>
</g>
<g >
<title>__strchrnul_avx2 (54 samples, 2.52%)</title><rect x="195.4" y="453" width="29.7" height="15.0" fill="rgb(229,224,17)" rx="2" ry="2" />
<text  x="198.39" y="463.5" >__..</text>
</g>
<g >
<title>free_unref_page_list (1 samples, 0.05%)</title><rect x="1164.1" y="293" width="0.6" height="15.0" fill="rgb(246,106,13)" rx="2" ry="2" />
<text  x="1167.14" y="303.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.05%)</title><rect x="135.4" y="229" width="0.6" height="15.0" fill="rgb(223,168,1)" rx="2" ry="2" />
<text  x="138.43" y="239.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.05%)</title><rect x="10.0" y="485" width="0.6" height="15.0" fill="rgb(252,43,10)" rx="2" ry="2" />
<text  x="13.00" y="495.5" ></text>
</g>
<g >
<title>native_write_msr (1 samples, 0.05%)</title><rect x="102.4" y="69" width="0.6" height="15.0" fill="rgb(254,112,36)" rx="2" ry="2" />
<text  x="105.42" y="79.5" ></text>
</g>
<g >
<title>x86_pmu_enable (1 samples, 0.05%)</title><rect x="102.4" y="101" width="0.6" height="15.0" fill="rgb(210,50,53)" rx="2" ry="2" />
<text  x="105.42" y="111.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (4 samples, 0.19%)</title><rect x="466.0" y="421" width="2.2" height="15.0" fill="rgb(232,115,1)" rx="2" ry="2" />
<text  x="469.05" y="431.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (1 samples, 0.05%)</title><rect x="473.7" y="405" width="0.6" height="15.0" fill="rgb(214,220,39)" rx="2" ry="2" />
<text  x="476.75" y="415.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.05%)</title><rect x="881.9" y="325" width="0.6" height="15.0" fill="rgb(215,109,39)" rx="2" ry="2" />
<text  x="884.93" y="335.5" ></text>
</g>
<g >
<title>mem_cgroup_commit_charge (1 samples, 0.05%)</title><rect x="127.2" y="165" width="0.5" height="15.0" fill="rgb(222,52,22)" rx="2" ry="2" />
<text  x="130.17" y="175.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::c_str (2 samples, 0.09%)</title><rect x="1100.3" y="437" width="1.1" height="15.0" fill="rgb(235,41,51)" rx="2" ry="2" />
<text  x="1103.33" y="447.5" ></text>
</g>
<g >
<title>blk_mq_complete_request (1 samples, 0.05%)</title><rect x="1162.5" y="197" width="0.5" height="15.0" fill="rgb(247,189,7)" rx="2" ry="2" />
<text  x="1165.49" y="207.5" ></text>
</g>
<g >
<title>PageHuge (1 samples, 0.05%)</title><rect x="131.0" y="277" width="0.6" height="15.0" fill="rgb(232,209,22)" rx="2" ry="2" />
<text  x="134.03" y="287.5" ></text>
</g>
<g >
<title>main (1,198 samples, 55.85%)</title><rect x="460.5" y="469" width="659.1" height="15.0" fill="rgb(238,151,52)" rx="2" ry="2" />
<text  x="463.55" y="479.5" >main</text>
</g>
<g >
<title>std::queue&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::deque&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::push (1 samples, 0.05%)</title><rect x="1114.6" y="437" width="0.6" height="15.0" fill="rgb(245,192,6)" rx="2" ry="2" />
<text  x="1117.63" y="447.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.05%)</title><rect x="303.2" y="293" width="0.6" height="15.0" fill="rgb(230,112,5)" rx="2" ry="2" />
<text  x="306.21" y="303.5" ></text>
</g>
<g >
<title>ext4_block_write_begin (17 samples, 0.79%)</title><rect x="34.8" y="277" width="9.3" height="15.0" fill="rgb(244,32,29)" rx="2" ry="2" />
<text  x="37.76" y="287.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.05%)</title><rect x="881.9" y="341" width="0.6" height="15.0" fill="rgb(233,44,50)" rx="2" ry="2" />
<text  x="884.93" y="351.5" ></text>
</g>
<g >
<title>nvme_pci_complete_rq (1 samples, 0.05%)</title><rect x="1162.5" y="181" width="0.5" height="15.0" fill="rgb(245,142,40)" rx="2" ry="2" />
<text  x="1165.49" y="191.5" ></text>
</g>
<g >
<title>__lru_cache_add (4 samples, 0.19%)</title><rect x="1162.5" y="341" width="2.2" height="15.0" fill="rgb(249,118,43)" rx="2" ry="2" />
<text  x="1165.49" y="351.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.05%)</title><rect x="1060.2" y="357" width="0.5" height="15.0" fill="rgb(247,99,53)" rx="2" ry="2" />
<text  x="1063.17" y="367.5" ></text>
</g>
<g >
<title>blk_mq_sched_insert_requests (4 samples, 0.19%)</title><rect x="124.4" y="181" width="2.2" height="15.0" fill="rgb(229,71,28)" rx="2" ry="2" />
<text  x="127.42" y="191.5" ></text>
</g>
<g >
<title>_IO_old_init (1 samples, 0.05%)</title><rect x="21.0" y="469" width="0.6" height="15.0" fill="rgb(231,113,53)" rx="2" ry="2" />
<text  x="24.00" y="479.5" ></text>
</g>
<g >
<title>native_write_msr (24 samples, 1.12%)</title><rect x="103.5" y="165" width="13.2" height="15.0" fill="rgb(250,68,53)" rx="2" ry="2" />
<text  x="106.52" y="175.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::length (30 samples, 1.40%)</title><rect x="949.0" y="421" width="16.6" height="15.0" fill="rgb(220,214,6)" rx="2" ry="2" />
<text  x="952.05" y="431.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.05%)</title><rect x="452.3" y="469" width="0.5" height="15.0" fill="rgb(213,99,50)" rx="2" ry="2" />
<text  x="455.29" y="479.5" ></text>
</g>
<g >
<title>ext4_io_submit (1 samples, 0.05%)</title><rect x="456.7" y="213" width="0.5" height="15.0" fill="rgb(228,52,15)" rx="2" ry="2" />
<text  x="459.69" y="223.5" ></text>
</g>
<g >
<title>ext4_da_write_end (28 samples, 1.31%)</title><rect x="62.8" y="293" width="15.4" height="15.0" fill="rgb(235,188,8)" rx="2" ry="2" />
<text  x="65.81" y="303.5" ></text>
</g>
<g >
<title>generic_perform_write (97 samples, 4.52%)</title><rect x="30.4" y="309" width="53.3" height="15.0" fill="rgb(253,194,45)" rx="2" ry="2" />
<text  x="33.35" y="319.5" >gener..</text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::~basic_filebuf (38 samples, 1.77%)</title><rect x="343.9" y="469" width="20.9" height="15.0" fill="rgb(239,150,31)" rx="2" ry="2" />
<text  x="346.92" y="479.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.05%)</title><rect x="1162.5" y="229" width="0.5" height="15.0" fill="rgb(233,19,33)" rx="2" ry="2" />
<text  x="1165.49" y="239.5" ></text>
</g>
<g >
<title>std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair (1 samples, 0.05%)</title><rect x="499.1" y="325" width="0.5" height="15.0" fill="rgb(206,78,47)" rx="2" ry="2" />
<text  x="502.05" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.05%)</title><rect x="343.4" y="469" width="0.5" height="15.0" fill="rgb(252,175,23)" rx="2" ry="2" />
<text  x="346.37" y="479.5" ></text>
</g>
<g >
<title>__vfs_read (84 samples, 3.92%)</title><rect x="89.8" y="373" width="46.2" height="15.0" fill="rgb(207,49,34)" rx="2" ry="2" />
<text  x="92.77" y="383.5" >__vf..</text>
</g>
<g >
<title>mark_buffer_dirty (6 samples, 0.28%)</title><rect x="74.4" y="229" width="3.3" height="15.0" fill="rgb(233,59,45)" rx="2" ry="2" />
<text  x="77.36" y="239.5" ></text>
</g>
<g >
<title>std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::~pair (2 samples, 0.09%)</title><rect x="1054.7" y="421" width="1.1" height="15.0" fill="rgb(254,110,20)" rx="2" ry="2" />
<text  x="1057.67" y="431.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.19%)</title><rect x="1187.8" y="485" width="2.2" height="15.0" fill="rgb(208,52,2)" rx="2" ry="2" />
<text  x="1190.80" y="495.5" ></text>
</g>
<g >
<title>create_empty_buffers (4 samples, 0.19%)</title><rect x="35.3" y="261" width="2.2" height="15.0" fill="rgb(242,16,8)" rx="2" ry="2" />
<text  x="38.31" y="271.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.05%)</title><rect x="303.2" y="309" width="0.6" height="15.0" fill="rgb(215,89,0)" rx="2" ry="2" />
<text  x="306.21" y="319.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (6 samples, 0.28%)</title><rect x="172.8" y="453" width="3.3" height="15.0" fill="rgb(213,131,29)" rx="2" ry="2" />
<text  x="175.83" y="463.5" ></text>
</g>
<g >
<title>error_entry (1 samples, 0.05%)</title><rect x="1139.4" y="469" width="0.5" height="15.0" fill="rgb(252,166,12)" rx="2" ry="2" />
<text  x="1142.39" y="479.5" ></text>
</g>
<g >
<title>std::deque&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::pop_front (1 samples, 0.05%)</title><rect x="1052.5" y="421" width="0.5" height="15.0" fill="rgb(211,140,47)" rx="2" ry="2" />
<text  x="1055.47" y="431.5" ></text>
</g>
<g >
<title>[unknown] (38 samples, 1.77%)</title><rect x="343.9" y="453" width="20.9" height="15.0" fill="rgb(228,43,45)" rx="2" ry="2" />
<text  x="346.92" y="463.5" ></text>
</g>
<g >
<title>page_fault (4 samples, 0.19%)</title><rect x="1184.5" y="469" width="2.2" height="15.0" fill="rgb(239,138,30)" rx="2" ry="2" />
<text  x="1187.50" y="479.5" ></text>
</g>
<g >
<title>ext4_da_get_block_prep (12 samples, 0.56%)</title><rect x="37.5" y="261" width="6.6" height="15.0" fill="rgb(225,10,10)" rx="2" ry="2" />
<text  x="40.51" y="271.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.05%)</title><rect x="1186.1" y="453" width="0.6" height="15.0" fill="rgb(226,80,32)" rx="2" ry="2" />
<text  x="1189.15" y="463.5" ></text>
</g>
<g >
<title>submit_bio (2 samples, 0.09%)</title><rect x="128.8" y="197" width="1.1" height="15.0" fill="rgb(218,168,48)" rx="2" ry="2" />
<text  x="131.83" y="207.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.05%)</title><rect x="1162.5" y="309" width="0.5" height="15.0" fill="rgb(207,203,37)" rx="2" ry="2" />
<text  x="1165.49" y="319.5" ></text>
</g>
<g >
<title>blk_mq_end_request (1 samples, 0.05%)</title><rect x="1165.8" y="165" width="0.5" height="15.0" fill="rgb(254,32,20)" rx="2" ry="2" />
<text  x="1168.79" y="175.5" ></text>
</g>
<g >
<title>memset_erms (1 samples, 0.05%)</title><rect x="128.3" y="165" width="0.5" height="15.0" fill="rgb(230,63,46)" rx="2" ry="2" />
<text  x="131.28" y="175.5" ></text>
</g>
<g >
<title>common_file_perm (2 samples, 0.09%)</title><rect x="85.9" y="325" width="1.1" height="15.0" fill="rgb(211,111,3)" rx="2" ry="2" />
<text  x="88.92" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (30 samples, 1.40%)</title><rect x="965.6" y="421" width="16.5" height="15.0" fill="rgb(211,1,15)" rx="2" ry="2" />
<text  x="968.55" y="431.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.0 (24 samples, 1.12%)</title><rect x="103.5" y="213" width="13.2" height="15.0" fill="rgb(225,193,42)" rx="2" ry="2" />
<text  x="106.52" y="223.5" ></text>
</g>
<g >
<title>__page_cache_alloc (13 samples, 0.61%)</title><rect x="117.3" y="245" width="7.1" height="15.0" fill="rgb(254,88,3)" rx="2" ry="2" />
<text  x="120.27" y="255.5" ></text>
</g>
<g >
<title>ext4_mark_inode_dirty (14 samples, 0.65%)</title><rect x="65.6" y="229" width="7.7" height="15.0" fill="rgb(210,171,35)" rx="2" ry="2" />
<text  x="68.56" y="239.5" ></text>
</g>
<g >
<title>xa_load (2 samples, 0.09%)</title><rect x="129.9" y="245" width="1.1" height="15.0" fill="rgb(243,34,17)" rx="2" ry="2" />
<text  x="132.93" y="255.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (48 samples, 2.24%)</title><rect x="141.5" y="469" width="26.4" height="15.0" fill="rgb(222,39,54)" rx="2" ry="2" />
<text  x="144.48" y="479.5" >_..</text>
</g>
<g >
<title>std::deque&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::size (1 samples, 0.05%)</title><rect x="499.6" y="357" width="0.6" height="15.0" fill="rgb(223,43,43)" rx="2" ry="2" />
<text  x="502.60" y="367.5" ></text>
</g>
<g >
<title>blk_mq_try_issue_list_directly (4 samples, 0.19%)</title><rect x="124.4" y="165" width="2.2" height="15.0" fill="rgb(226,147,33)" rx="2" ry="2" />
<text  x="127.42" y="175.5" ></text>
</g>
<g >
<title>rw_verify_area (3 samples, 0.14%)</title><rect x="136.0" y="373" width="1.6" height="15.0" fill="rgb(240,182,1)" rx="2" ry="2" />
<text  x="138.98" y="383.5" ></text>
</g>
<g >
<title>free_unref_page_list (1 samples, 0.05%)</title><rect x="453.4" y="229" width="0.5" height="15.0" fill="rgb(254,155,25)" rx="2" ry="2" />
<text  x="456.39" y="239.5" ></text>
</g>
<g >
<title>all (2,145 samples, 100%)</title><rect x="10.0" y="517" width="1180.0" height="15.0" fill="rgb(210,199,48)" rx="2" ry="2" />
<text  x="13.00" y="527.5" ></text>
</g>
<g >
<title>ksys_write (108 samples, 5.03%)</title><rect x="27.6" y="405" width="59.4" height="15.0" fill="rgb(245,98,52)" rx="2" ry="2" />
<text  x="30.60" y="415.5" >ksys_w..</text>
</g>
<g >
<title>x86_pmu_enable (24 samples, 1.12%)</title><rect x="103.5" y="197" width="13.2" height="15.0" fill="rgb(228,141,1)" rx="2" ry="2" />
<text  x="106.52" y="207.5" ></text>
</g>
<g >
<title>io_schedule (26 samples, 1.21%)</title><rect x="103.0" y="293" width="14.3" height="15.0" fill="rgb(212,55,54)" rx="2" ry="2" />
<text  x="105.97" y="303.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.05%)</title><rect x="495.2" y="341" width="0.6" height="15.0" fill="rgb(254,205,19)" rx="2" ry="2" />
<text  x="498.20" y="351.5" ></text>
</g>
<g >
<title>zap_pte_range.isra.0 (9 samples, 0.42%)</title><rect x="1172.4" y="325" width="4.9" height="15.0" fill="rgb(214,82,54)" rx="2" ry="2" />
<text  x="1175.40" y="335.5" ></text>
</g>
<g >
<title>mem_cgroup_page_lruvec (1 samples, 0.05%)</title><rect x="1176.8" y="261" width="0.5" height="15.0" fill="rgb(210,145,34)" rx="2" ry="2" />
<text  x="1179.80" y="271.5" ></text>
</g>
<g >
<title>page_poisoning_enabled (1 samples, 0.05%)</title><rect x="123.9" y="181" width="0.5" height="15.0" fill="rgb(216,28,38)" rx="2" ry="2" />
<text  x="126.87" y="191.5" ></text>
</g>
<g >
<title>__handle_mm_fault (33 samples, 1.54%)</title><rect x="1149.8" y="389" width="18.2" height="15.0" fill="rgb(224,50,19)" rx="2" ry="2" />
<text  x="1152.84" y="399.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (13 samples, 0.61%)</title><rect x="453.4" y="437" width="7.1" height="15.0" fill="rgb(245,133,32)" rx="2" ry="2" />
<text  x="456.39" y="447.5" ></text>
</g>
<g >
<title>xas_store (1 samples, 0.05%)</title><rect x="60.1" y="213" width="0.5" height="15.0" fill="rgb(227,173,18)" rx="2" ry="2" />
<text  x="63.06" y="223.5" ></text>
</g>
<g >
<title>ktime_get_update_offsets_now (1 samples, 0.05%)</title><rect x="91.4" y="229" width="0.6" height="15.0" fill="rgb(237,69,42)" rx="2" ry="2" />
<text  x="94.42" y="239.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (20 samples, 0.93%)</title><rect x="92.0" y="277" width="11.0" height="15.0" fill="rgb(252,36,43)" rx="2" ry="2" />
<text  x="94.97" y="287.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (13 samples, 0.61%)</title><rect x="117.3" y="213" width="7.1" height="15.0" fill="rgb(221,35,27)" rx="2" ry="2" />
<text  x="120.27" y="223.5" ></text>
</g>
<g >
<title>__pagevec_lru_add_fn (2 samples, 0.09%)</title><rect x="1163.0" y="309" width="1.1" height="15.0" fill="rgb(234,148,53)" rx="2" ry="2" />
<text  x="1166.04" y="319.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (1 samples, 0.05%)</title><rect x="76.6" y="181" width="0.5" height="15.0" fill="rgb(241,107,27)" rx="2" ry="2" />
<text  x="79.56" y="191.5" ></text>
</g>
<g >
<title>unlock_page (1 samples, 0.05%)</title><rect x="1162.5" y="85" width="0.5" height="15.0" fill="rgb(220,80,30)" rx="2" ry="2" />
<text  x="1165.49" y="95.5" ></text>
</g>
<g >
<title>alloc_page_buffers (3 samples, 0.14%)</title><rect x="35.9" y="245" width="1.6" height="15.0" fill="rgb(214,148,31)" rx="2" ry="2" />
<text  x="38.86" y="255.5" ></text>
</g>
<g >
<title>__mod_zone_page_state (1 samples, 0.05%)</title><rect x="1175.7" y="229" width="0.5" height="15.0" fill="rgb(244,123,2)" rx="2" ry="2" />
<text  x="1178.70" y="239.5" ></text>
</g>
<g >
<title>jbd2__journal_start (6 samples, 0.28%)</title><rect x="31.5" y="261" width="3.3" height="15.0" fill="rgb(240,130,5)" rx="2" ry="2" />
<text  x="34.45" y="271.5" ></text>
</g>
<g >
<title>__pagevec_lru_add_fn (4 samples, 0.19%)</title><rect x="60.6" y="181" width="2.2" height="15.0" fill="rgb(211,115,47)" rx="2" ry="2" />
<text  x="63.61" y="191.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.05%)</title><rect x="65.0" y="197" width="0.6" height="15.0" fill="rgb(212,62,13)" rx="2" ry="2" />
<text  x="68.01" y="207.5" ></text>
</g>
<g >
<title>do_brk_flags (1 samples, 0.05%)</title><rect x="87.6" y="405" width="0.5" height="15.0" fill="rgb(243,127,50)" rx="2" ry="2" />
<text  x="90.57" y="415.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.05%)</title><rect x="1162.5" y="277" width="0.5" height="15.0" fill="rgb(241,88,2)" rx="2" ry="2" />
<text  x="1165.49" y="287.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.05%)</title><rect x="303.2" y="277" width="0.6" height="15.0" fill="rgb(210,211,19)" rx="2" ry="2" />
<text  x="306.21" y="287.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (10 samples, 0.47%)</title><rect x="54.0" y="213" width="5.5" height="15.0" fill="rgb(244,130,4)" rx="2" ry="2" />
<text  x="57.01" y="223.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (114 samples, 5.31%)</title><rect x="24.3" y="453" width="62.7" height="15.0" fill="rgb(227,35,17)" rx="2" ry="2" />
<text  x="27.30" y="463.5" >entry_..</text>
</g>
<g >
<title>_IO_no_init (2 samples, 0.09%)</title><rect x="19.9" y="469" width="1.1" height="15.0" fill="rgb(215,198,40)" rx="2" ry="2" />
<text  x="22.90" y="479.5" ></text>
</g>
<g >
<title>bio_endio (1 samples, 0.05%)</title><rect x="1162.5" y="117" width="0.5" height="15.0" fill="rgb(207,0,43)" rx="2" ry="2" />
<text  x="1165.49" y="127.5" ></text>
</g>
<g >
<title>get_page_from_freelist (10 samples, 0.47%)</title><rect x="45.2" y="197" width="5.5" height="15.0" fill="rgb(249,170,10)" rx="2" ry="2" />
<text  x="48.21" y="207.5" ></text>
</g>
<g >
<title>ktime_get (1 samples, 0.05%)</title><rect x="1165.8" y="149" width="0.5" height="15.0" fill="rgb(237,57,54)" rx="2" ry="2" />
<text  x="1168.79" y="159.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.05%)</title><rect x="64.5" y="213" width="0.5" height="15.0" fill="rgb(250,60,47)" rx="2" ry="2" />
<text  x="67.46" y="223.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.05%)</title><rect x="1162.5" y="261" width="0.5" height="15.0" fill="rgb(210,191,21)" rx="2" ry="2" />
<text  x="1165.49" y="271.5" ></text>
</g>
<g >
<title>iov_iter_fault_in_readable (4 samples, 0.19%)</title><rect x="81.5" y="293" width="2.2" height="15.0" fill="rgb(211,162,37)" rx="2" ry="2" />
<text  x="84.52" y="303.5" ></text>
</g>
<g >
<title>blk_update_request (1 samples, 0.05%)</title><rect x="1162.5" y="133" width="0.5" height="15.0" fill="rgb(206,70,15)" rx="2" ry="2" />
<text  x="1165.49" y="143.5" ></text>
</g>
<g >
<title>ext4_readpages (6 samples, 0.28%)</title><rect x="126.6" y="229" width="3.3" height="15.0" fill="rgb(223,93,53)" rx="2" ry="2" />
<text  x="129.62" y="239.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::allocate (2 samples, 0.09%)</title><rect x="495.8" y="341" width="1.1" height="15.0" fill="rgb(225,11,51)" rx="2" ry="2" />
<text  x="498.75" y="351.5" ></text>
</g>
<g >
<title>__update_idle_core (1 samples, 0.05%)</title><rect x="116.7" y="213" width="0.6" height="15.0" fill="rgb(208,98,27)" rx="2" ry="2" />
<text  x="119.72" y="223.5" ></text>
</g>
<g >
<title>std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::~pair (2 samples, 0.09%)</title><rect x="474.8" y="421" width="1.1" height="15.0" fill="rgb(230,185,5)" rx="2" ry="2" />
<text  x="477.85" y="431.5" ></text>
</g>
<g >
<title>clear_page_dirty_for_io (3 samples, 0.14%)</title><rect x="453.9" y="229" width="1.7" height="15.0" fill="rgb(213,172,17)" rx="2" ry="2" />
<text  x="456.94" y="239.5" ></text>
</g>
<g >
<title>do_writepages (13 samples, 0.61%)</title><rect x="453.4" y="309" width="7.1" height="15.0" fill="rgb(227,102,47)" rx="2" ry="2" />
<text  x="456.39" y="319.5" ></text>
</g>
<g >
<title>_raw_spin_lock (2 samples, 0.09%)</title><rect x="1150.4" y="373" width="1.1" height="15.0" fill="rgb(245,188,1)" rx="2" ry="2" />
<text  x="1153.39" y="383.5" ></text>
</g>
<g >
<title>find_get_entry (8 samples, 0.37%)</title><rect x="131.6" y="277" width="4.4" height="15.0" fill="rgb(210,78,51)" rx="2" ry="2" />
<text  x="134.58" y="287.5" ></text>
</g>
<g >
<title>generic_make_request_checks (1 samples, 0.05%)</title><rect x="129.4" y="165" width="0.5" height="15.0" fill="rgb(221,62,5)" rx="2" ry="2" />
<text  x="132.38" y="175.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (24 samples, 1.12%)</title><rect x="103.5" y="229" width="13.2" height="15.0" fill="rgb(211,91,46)" rx="2" ry="2" />
<text  x="106.52" y="239.5" ></text>
</g>
<g >
<title>std::queue&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::deque&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::push (45 samples, 2.10%)</title><rect x="475.9" y="421" width="24.8" height="15.0" fill="rgb(252,55,32)" rx="2" ry="2" />
<text  x="478.95" y="431.5" >s..</text>
</g>
<g >
<title>xas_load (2 samples, 0.09%)</title><rect x="129.9" y="229" width="1.1" height="15.0" fill="rgb(240,185,8)" rx="2" ry="2" />
<text  x="132.93" y="239.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.05%)</title><rect x="303.2" y="357" width="0.6" height="15.0" fill="rgb(250,228,44)" rx="2" ry="2" />
<text  x="306.21" y="367.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.05%)</title><rect x="1165.8" y="277" width="0.5" height="15.0" fill="rgb(218,164,27)" rx="2" ry="2" />
<text  x="1168.79" y="287.5" ></text>
</g>
<g >
<title>ext4_da_map_blocks.constprop.0 (12 samples, 0.56%)</title><rect x="37.5" y="245" width="6.6" height="15.0" fill="rgb(207,219,16)" rx="2" ry="2" />
<text  x="40.51" y="255.5" ></text>
</g>
<g >
<title>clear_page_erms (1 samples, 0.05%)</title><rect x="1117.9" y="277" width="0.6" height="15.0" fill="rgb(207,186,38)" rx="2" ry="2" />
<text  x="1120.93" y="287.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.05%)</title><rect x="91.4" y="261" width="0.6" height="15.0" fill="rgb(206,70,51)" rx="2" ry="2" />
<text  x="94.42" y="271.5" ></text>
</g>
<g >
<title>new_slab (1 samples, 0.05%)</title><rect x="35.9" y="165" width="0.5" height="15.0" fill="rgb(249,175,9)" rx="2" ry="2" />
<text  x="38.86" y="175.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.05%)</title><rect x="1161.4" y="341" width="0.5" height="15.0" fill="rgb(206,48,49)" rx="2" ry="2" />
<text  x="1164.39" y="351.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (8 samples, 0.37%)</title><rect x="1172.9" y="293" width="4.4" height="15.0" fill="rgb(210,195,5)" rx="2" ry="2" />
<text  x="1175.95" y="303.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (1 samples, 0.05%)</title><rect x="1176.2" y="229" width="0.6" height="15.0" fill="rgb(239,99,54)" rx="2" ry="2" />
<text  x="1179.25" y="239.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.05%)</title><rect x="1070.1" y="437" width="0.5" height="15.0" fill="rgb(231,217,13)" rx="2" ry="2" />
<text  x="1073.07" y="447.5" ></text>
</g>
<g >
<title>alloc_pages_vma (18 samples, 0.84%)</title><rect x="1152.6" y="357" width="9.9" height="15.0" fill="rgb(250,152,21)" rx="2" ry="2" />
<text  x="1155.59" y="367.5" ></text>
</g>
<g >
<title>handle_mm_fault (37 samples, 1.72%)</title><rect x="1148.2" y="405" width="20.3" height="15.0" fill="rgb(208,116,4)" rx="2" ry="2" />
<text  x="1151.19" y="415.5" ></text>
</g>
<g >
<title>lru_cache_add_active_or_unevictable (4 samples, 0.19%)</title><rect x="1162.5" y="357" width="2.2" height="15.0" fill="rgb(227,190,19)" rx="2" ry="2" />
<text  x="1165.49" y="367.5" ></text>
</g>
<g >
<title>page_fault (54 samples, 2.52%)</title><rect x="1140.5" y="469" width="29.7" height="15.0" fill="rgb(217,131,51)" rx="2" ry="2" />
<text  x="1143.49" y="479.5" >pa..</text>
</g>
<g >
<title>unmap_vmas (10 samples, 0.47%)</title><rect x="1171.8" y="373" width="5.5" height="15.0" fill="rgb(222,197,45)" rx="2" ry="2" />
<text  x="1174.85" y="383.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.05%)</title><rect x="1162.5" y="245" width="0.5" height="15.0" fill="rgb(210,16,16)" rx="2" ry="2" />
<text  x="1165.49" y="255.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.19%)</title><rect x="458.3" y="133" width="2.2" height="15.0" fill="rgb(245,178,2)" rx="2" ry="2" />
<text  x="461.34" y="143.5" ></text>
</g>
<g >
<title>__strlen_avx2 (8 samples, 0.37%)</title><rect x="168.4" y="469" width="4.4" height="15.0" fill="rgb(211,60,40)" rx="2" ry="2" />
<text  x="171.43" y="479.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.05%)</title><rect x="456.1" y="197" width="0.6" height="15.0" fill="rgb(242,2,32)" rx="2" ry="2" />
<text  x="459.14" y="207.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.05%)</title><rect x="102.4" y="245" width="0.6" height="15.0" fill="rgb(249,75,40)" rx="2" ry="2" />
<text  x="105.42" y="255.5" ></text>
</g>
<g >
<title>page_add_new_anon_rmap (1 samples, 0.05%)</title><rect x="1167.4" y="373" width="0.6" height="15.0" fill="rgb(230,157,0)" rx="2" ry="2" />
<text  x="1170.45" y="383.5" ></text>
</g>
<g >
<title>ext4_release_file (13 samples, 0.61%)</title><rect x="453.4" y="373" width="7.1" height="15.0" fill="rgb(233,24,22)" rx="2" ry="2" />
<text  x="456.39" y="383.5" ></text>
</g>
<g >
<title>__kmalloc (1 samples, 0.05%)</title><rect x="125.5" y="53" width="0.6" height="15.0" fill="rgb(229,55,10)" rx="2" ry="2" />
<text  x="128.52" y="63.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.05%)</title><rect x="452.3" y="405" width="0.5" height="15.0" fill="rgb(230,185,7)" rx="2" ry="2" />
<text  x="455.29" y="415.5" ></text>
</g>
<g >
<title>std::istream::sentry::sentry (1 samples, 0.05%)</title><rect x="364.8" y="469" width="0.6" height="15.0" fill="rgb(213,37,27)" rx="2" ry="2" />
<text  x="367.83" y="479.5" ></text>
</g>
<g >
<title>__add_to_page_cache_locked (2 samples, 0.09%)</title><rect x="126.6" y="181" width="1.1" height="15.0" fill="rgb(217,12,34)" rx="2" ry="2" />
<text  x="129.62" y="191.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (2 samples, 0.09%)</title><rect x="498.5" y="357" width="1.1" height="15.0" fill="rgb(226,227,33)" rx="2" ry="2" />
<text  x="501.50" y="367.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.05%)</title><rect x="1165.8" y="309" width="0.5" height="15.0" fill="rgb(251,19,24)" rx="2" ry="2" />
<text  x="1168.79" y="319.5" ></text>
</g>
<g >
<title>rq_qos_wait (1 samples, 0.05%)</title><rect x="456.7" y="117" width="0.5" height="15.0" fill="rgb(226,196,27)" rx="2" ry="2" />
<text  x="459.69" y="127.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::allocate (1 samples, 0.05%)</title><rect x="494.7" y="341" width="0.5" height="15.0" fill="rgb(230,78,49)" rx="2" ry="2" />
<text  x="497.65" y="351.5" ></text>
</g>
<g >
<title>__x64_sys_execve (4 samples, 0.19%)</title><rect x="1187.8" y="437" width="2.2" height="15.0" fill="rgb(225,62,54)" rx="2" ry="2" />
<text  x="1190.80" y="447.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.05%)</title><rect x="935.3" y="421" width="0.5" height="15.0" fill="rgb(228,128,26)" rx="2" ry="2" />
<text  x="938.30" y="431.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (17 samples, 0.79%)</title><rect x="63.9" y="261" width="9.4" height="15.0" fill="rgb(249,31,36)" rx="2" ry="2" />
<text  x="66.91" y="271.5" ></text>
</g>
<g >
<title>CSV2JSON::List2Cell (2 samples, 0.09%)</title><rect x="515.6" y="421" width="1.1" height="15.0" fill="rgb(246,160,54)" rx="2" ry="2" />
<text  x="518.56" y="431.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;&amp;, std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*&gt;::_Deque_iterator (3 samples, 0.14%)</title><rect x="1057.4" y="373" width="1.7" height="15.0" fill="rgb(252,102,42)" rx="2" ry="2" />
<text  x="1060.42" y="383.5" ></text>
</g>
<g >
<title>__ext4_journal_start_sb (2 samples, 0.09%)</title><rect x="64.5" y="229" width="1.1" height="15.0" fill="rgb(209,204,23)" rx="2" ry="2" />
<text  x="67.46" y="239.5" ></text>
</g>
<g >
<title>start_this_handle (3 samples, 0.14%)</title><rect x="33.1" y="245" width="1.7" height="15.0" fill="rgb(243,225,50)" rx="2" ry="2" />
<text  x="36.10" y="255.5" ></text>
</g>
<g >
<title>__x64_sys_execve (1 samples, 0.05%)</title><rect x="303.2" y="437" width="0.6" height="15.0" fill="rgb(253,0,24)" rx="2" ry="2" />
<text  x="306.21" y="447.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.05%)</title><rect x="1162.5" y="325" width="0.5" height="15.0" fill="rgb(252,47,37)" rx="2" ry="2" />
<text  x="1165.49" y="335.5" ></text>
</g>
<g >
<title>__ext4_journal_start_sb (6 samples, 0.28%)</title><rect x="31.5" y="277" width="3.3" height="15.0" fill="rgb(238,7,6)" rx="2" ry="2" />
<text  x="34.45" y="287.5" ></text>
</g>
<g >
<title>exit_mmap (10 samples, 0.47%)</title><rect x="1171.8" y="389" width="5.5" height="15.0" fill="rgb(227,114,35)" rx="2" ry="2" />
<text  x="1174.85" y="399.5" ></text>
</g>
<g >
<title>[unknown] (646 samples, 30.12%)</title><rect x="10.6" y="485" width="355.3" height="15.0" fill="rgb(232,182,39)" rx="2" ry="2" />
<text  x="13.55" y="495.5" >[unknown]</text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.05%)</title><rect x="102.4" y="229" width="0.6" height="15.0" fill="rgb(218,23,38)" rx="2" ry="2" />
<text  x="105.42" y="239.5" ></text>
</g>
<g >
<title>_IO_default_xsputn (158 samples, 7.37%)</title><rect x="365.9" y="485" width="86.9" height="15.0" fill="rgb(235,139,22)" rx="2" ry="2" />
<text  x="368.93" y="495.5" >_IO_defaul..</text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.19%)</title><rect x="1187.8" y="293" width="2.2" height="15.0" fill="rgb(230,158,24)" rx="2" ry="2" />
<text  x="1190.80" y="303.5" ></text>
</g>
<g >
<title>__x64_sys_read (1 samples, 0.05%)</title><rect x="88.7" y="437" width="0.5" height="15.0" fill="rgb(233,45,14)" rx="2" ry="2" />
<text  x="91.67" y="447.5" ></text>
</g>
<g >
<title>do_group_exit (10 samples, 0.47%)</title><rect x="1171.8" y="437" width="5.5" height="15.0" fill="rgb(213,227,10)" rx="2" ry="2" />
<text  x="1174.85" y="447.5" ></text>
</g>
<g >
<title>__lru_cache_add (1 samples, 0.05%)</title><rect x="127.7" y="165" width="0.6" height="15.0" fill="rgb(222,35,27)" rx="2" ry="2" />
<text  x="130.72" y="175.5" ></text>
</g>
<g >
<title>_IO_setb (1 samples, 0.05%)</title><rect x="452.8" y="485" width="0.6" height="15.0" fill="rgb(248,127,30)" rx="2" ry="2" />
<text  x="455.84" y="495.5" ></text>
</g>
<g >
<title>__rq_qos_throttle (1 samples, 0.05%)</title><rect x="456.7" y="149" width="0.5" height="15.0" fill="rgb(225,197,8)" rx="2" ry="2" />
<text  x="459.69" y="159.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.0 (4 samples, 0.19%)</title><rect x="1187.8" y="325" width="2.2" height="15.0" fill="rgb(231,74,54)" rx="2" ry="2" />
<text  x="1190.80" y="335.5" ></text>
</g>
<g >
<title>blk_mq_end_request (1 samples, 0.05%)</title><rect x="1162.5" y="149" width="0.5" height="15.0" fill="rgb(221,145,24)" rx="2" ry="2" />
<text  x="1165.49" y="159.5" ></text>
</g>
<g >
<title>lru_cache_add (1 samples, 0.05%)</title><rect x="127.7" y="181" width="0.6" height="15.0" fill="rgb(235,178,52)" rx="2" ry="2" />
<text  x="130.72" y="191.5" ></text>
</g>
<g >
<title>blk_flush_plug_list (4 samples, 0.19%)</title><rect x="124.4" y="213" width="2.2" height="15.0" fill="rgb(216,204,20)" rx="2" ry="2" />
<text  x="127.42" y="223.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.19%)</title><rect x="1187.8" y="309" width="2.2" height="15.0" fill="rgb(225,169,5)" rx="2" ry="2" />
<text  x="1190.80" y="319.5" ></text>
</g>
<g >
<title>up_read (2 samples, 0.09%)</title><rect x="1169.1" y="421" width="1.1" height="15.0" fill="rgb(248,180,6)" rx="2" ry="2" />
<text  x="1172.10" y="431.5" ></text>
</g>
<g >
<title>mem_cgroup_from_task (1 samples, 0.05%)</title><rect x="1168.5" y="405" width="0.6" height="15.0" fill="rgb(233,163,16)" rx="2" ry="2" />
<text  x="1171.55" y="415.5" ></text>
</g>
<g >
<title>__generic_file_write_iter (98 samples, 4.57%)</title><rect x="29.8" y="325" width="53.9" height="15.0" fill="rgb(214,226,12)" rx="2" ry="2" />
<text  x="32.80" y="335.5" >__gen..</text>
</g>
<g >
<title>setup_new_exec (4 samples, 0.19%)</title><rect x="1187.8" y="373" width="2.2" height="15.0" fill="rgb(214,28,39)" rx="2" ry="2" />
<text  x="1190.80" y="383.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.05%)</title><rect x="40.8" y="165" width="0.6" height="15.0" fill="rgb(238,70,21)" rx="2" ry="2" />
<text  x="43.81" y="175.5" ></text>
</g>
<g >
<title>do_syscall_64 (4 samples, 0.19%)</title><rect x="1187.8" y="453" width="2.2" height="15.0" fill="rgb(219,150,26)" rx="2" ry="2" />
<text  x="1190.80" y="463.5" ></text>
</g>
<g >
<title>ondemand_readahead (25 samples, 1.17%)</title><rect x="117.3" y="277" width="13.7" height="15.0" fill="rgb(242,221,2)" rx="2" ry="2" />
<text  x="120.27" y="287.5" ></text>
</g>
<g >
<title>std::deque&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::push_back (1 samples, 0.05%)</title><rect x="469.3" y="421" width="0.6" height="15.0" fill="rgb(209,213,35)" rx="2" ry="2" />
<text  x="472.35" y="431.5" ></text>
</g>
<g >
<title>[C2J] (78 samples, 3.64%)</title><rect x="882.5" y="421" width="42.9" height="15.0" fill="rgb(225,40,7)" rx="2" ry="2" />
<text  x="885.48" y="431.5" >[C2J]</text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.05%)</title><rect x="452.3" y="421" width="0.5" height="15.0" fill="rgb(217,175,5)" rx="2" ry="2" />
<text  x="455.29" y="431.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (3 samples, 0.14%)</title><rect x="1163.0" y="325" width="1.7" height="15.0" fill="rgb(242,106,34)" rx="2" ry="2" />
<text  x="1166.04" y="335.5" ></text>
</g>
<g >
<title>ext4_da_write_end (1 samples, 0.05%)</title><rect x="29.8" y="309" width="0.6" height="15.0" fill="rgb(246,79,23)" rx="2" ry="2" />
<text  x="32.80" y="319.5" ></text>
</g>
<g >
<title>finish_task_switch (5 samples, 0.23%)</title><rect x="457.8" y="197" width="2.7" height="15.0" fill="rgb(206,38,8)" rx="2" ry="2" />
<text  x="460.79" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (11 samples, 0.51%)</title><rect x="936.9" y="421" width="6.1" height="15.0" fill="rgb(238,165,27)" rx="2" ry="2" />
<text  x="939.95" y="431.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (12 samples, 0.56%)</title><rect x="927.0" y="421" width="6.6" height="15.0" fill="rgb(212,51,34)" rx="2" ry="2" />
<text  x="930.04" y="431.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (5 samples, 0.23%)</title><rect x="358.2" y="437" width="2.8" height="15.0" fill="rgb(205,218,42)" rx="2" ry="2" />
<text  x="361.22" y="447.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.05%)</title><rect x="40.8" y="197" width="0.6" height="15.0" fill="rgb(254,49,39)" rx="2" ry="2" />
<text  x="43.81" y="207.5" ></text>
</g>
<g >
<title>std::queue&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::deque&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::front (1 samples, 0.05%)</title><rect x="1114.1" y="437" width="0.5" height="15.0" fill="rgb(249,109,38)" rx="2" ry="2" />
<text  x="1117.08" y="447.5" ></text>
</g>
<g >
<title>unlink_chunk.isra.0 (2 samples, 0.09%)</title><rect x="1186.7" y="485" width="1.1" height="15.0" fill="rgb(229,117,23)" rx="2" ry="2" />
<text  x="1189.70" y="495.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (2 samples, 0.09%)</title><rect x="496.9" y="325" width="1.1" height="15.0" fill="rgb(207,90,33)" rx="2" ry="2" />
<text  x="499.85" y="335.5" ></text>
</g>
<g >
<title>down_write_trylock (1 samples, 0.05%)</title><rect x="83.7" y="325" width="0.6" height="15.0" fill="rgb(227,132,37)" rx="2" ry="2" />
<text  x="86.72" y="335.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.05%)</title><rect x="1186.1" y="405" width="0.6" height="15.0" fill="rgb(228,101,32)" rx="2" ry="2" />
<text  x="1189.15" y="415.5" ></text>
</g>
<g >
<title>rmqueue (3 samples, 0.14%)</title><rect x="1159.7" y="309" width="1.7" height="15.0" fill="rgb(248,207,54)" rx="2" ry="2" />
<text  x="1162.74" y="319.5" ></text>
</g>
<g >
<title>release_pages (1 samples, 0.05%)</title><rect x="127.7" y="133" width="0.6" height="15.0" fill="rgb(242,73,52)" rx="2" ry="2" />
<text  x="130.72" y="143.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.05%)</title><rect x="943.0" y="421" width="0.5" height="15.0" fill="rgb(237,16,14)" rx="2" ry="2" />
<text  x="946.00" y="431.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.47%)</title><rect x="1171.8" y="485" width="5.5" height="15.0" fill="rgb(219,140,49)" rx="2" ry="2" />
<text  x="1174.85" y="495.5" ></text>
</g>
<g >
<title>mmput (10 samples, 0.47%)</title><rect x="1171.8" y="405" width="5.5" height="15.0" fill="rgb(254,112,30)" rx="2" ry="2" />
<text  x="1174.85" y="415.5" ></text>
</g>
<g >
<title>apparmor_file_permission (1 samples, 0.05%)</title><rect x="84.8" y="357" width="0.6" height="15.0" fill="rgb(249,143,23)" rx="2" ry="2" />
<text  x="87.82" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::c_str (9 samples, 0.42%)</title><rect x="944.1" y="421" width="4.9" height="15.0" fill="rgb(215,55,11)" rx="2" ry="2" />
<text  x="947.10" y="431.5" ></text>
</g>
<g >
<title>security_file_permission (2 samples, 0.09%)</title><rect x="136.5" y="357" width="1.1" height="15.0" fill="rgb(231,61,1)" rx="2" ry="2" />
<text  x="139.53" y="367.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.05%)</title><rect x="881.9" y="389" width="0.6" height="15.0" fill="rgb(243,102,17)" rx="2" ry="2" />
<text  x="884.93" y="399.5" ></text>
</g>
<g >
<title>blk_mq_make_request (1 samples, 0.05%)</title><rect x="456.7" y="165" width="0.5" height="15.0" fill="rgb(206,88,32)" rx="2" ry="2" />
<text  x="459.69" y="175.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (1 samples, 0.05%)</title><rect x="1164.7" y="341" width="0.5" height="15.0" fill="rgb(230,211,32)" rx="2" ry="2" />
<text  x="1167.69" y="351.5" ></text>
</g>
<g >
<title>std::getline&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (5 samples, 0.23%)</title><rect x="362.1" y="437" width="2.7" height="15.0" fill="rgb(234,132,49)" rx="2" ry="2" />
<text  x="365.07" y="447.5" ></text>
</g>
<g >
<title>mem_cgroup_commit_charge (1 samples, 0.05%)</title><rect x="53.5" y="213" width="0.5" height="15.0" fill="rgb(250,205,46)" rx="2" ry="2" />
<text  x="56.46" y="223.5" ></text>
</g>
<g >
<title>__page_cache_alloc (11 samples, 0.51%)</title><rect x="44.7" y="245" width="6.0" height="15.0" fill="rgb(233,99,16)" rx="2" ry="2" />
<text  x="47.66" y="255.5" ></text>
</g>
<g >
<title>new_sync_write (102 samples, 4.76%)</title><rect x="28.7" y="357" width="56.1" height="15.0" fill="rgb(229,168,31)" rx="2" ry="2" />
<text  x="31.70" y="367.5" >new_s..</text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.05%)</title><rect x="499.6" y="309" width="0.6" height="15.0" fill="rgb(221,115,27)" rx="2" ry="2" />
<text  x="502.60" y="319.5" ></text>
</g>
<g >
<title>mpage_map_and_submit_extent (8 samples, 0.37%)</title><rect x="453.4" y="277" width="4.4" height="15.0" fill="rgb(206,73,36)" rx="2" ry="2" />
<text  x="456.39" y="287.5" ></text>
</g>
<g >
<title>__set_page_dirty (4 samples, 0.19%)</title><rect x="74.9" y="213" width="2.2" height="15.0" fill="rgb(248,109,32)" rx="2" ry="2" />
<text  x="77.91" y="223.5" ></text>
</g>
<g >
<title>__vsprintf_internal (3 samples, 0.14%)</title><rect x="933.6" y="421" width="1.7" height="15.0" fill="rgb(241,62,25)" rx="2" ry="2" />
<text  x="936.65" y="431.5" ></text>
</g>
<g >
<title>CSV2JSON::WriteJSON (2 samples, 0.09%)</title><rect x="1061.8" y="437" width="1.1" height="15.0" fill="rgb(230,75,42)" rx="2" ry="2" />
<text  x="1064.82" y="447.5" ></text>
</g>
<g >
<title>ext4_writepages (13 samples, 0.61%)</title><rect x="453.4" y="293" width="7.1" height="15.0" fill="rgb(234,34,2)" rx="2" ry="2" />
<text  x="456.39" y="303.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.05%)</title><rect x="452.3" y="357" width="0.5" height="15.0" fill="rgb(249,71,9)" rx="2" ry="2" />
<text  x="455.29" y="367.5" ></text>
</g>
<g >
<title>std::deque&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::empty (1 samples, 0.05%)</title><rect x="1055.8" y="405" width="0.5" height="15.0" fill="rgb(220,63,22)" rx="2" ry="2" />
<text  x="1058.77" y="415.5" ></text>
</g>
<g >
<title>std::queue&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::deque&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::front (5 samples, 0.23%)</title><rect x="1056.3" y="421" width="2.8" height="15.0" fill="rgb(211,112,47)" rx="2" ry="2" />
<text  x="1059.32" y="431.5" ></text>
</g>
<g >
<title>native_write_msr (4 samples, 0.19%)</title><rect x="458.3" y="117" width="2.2" height="15.0" fill="rgb(225,119,27)" rx="2" ry="2" />
<text  x="461.34" y="127.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (1 samples, 0.05%)</title><rect x="1138.8" y="469" width="0.6" height="15.0" fill="rgb(217,103,1)" rx="2" ry="2" />
<text  x="1141.84" y="479.5" ></text>
</g>
<g >
<title>search_binary_handler (1 samples, 0.05%)</title><rect x="303.2" y="405" width="0.6" height="15.0" fill="rgb(236,168,40)" rx="2" ry="2" />
<text  x="306.21" y="415.5" ></text>
</g>
<g >
<title>schedule (5 samples, 0.23%)</title><rect x="457.8" y="229" width="2.7" height="15.0" fill="rgb(234,74,14)" rx="2" ry="2" />
<text  x="460.79" y="239.5" ></text>
</g>
<g >
<title>perf (4 samples, 0.19%)</title><rect x="1187.8" y="501" width="2.2" height="15.0" fill="rgb(210,225,50)" rx="2" ry="2" />
<text  x="1190.80" y="511.5" ></text>
</g>
<g >
<title>__strlen_avx2 (31 samples, 1.45%)</title><rect x="225.1" y="453" width="17.0" height="15.0" fill="rgb(224,83,6)" rx="2" ry="2" />
<text  x="228.10" y="463.5" ></text>
</g>
<g >
<title>do_syscall_64 (89 samples, 4.15%)</title><rect x="89.2" y="437" width="49.0" height="15.0" fill="rgb(252,177,28)" rx="2" ry="2" />
<text  x="92.22" y="447.5" >do_s..</text>
</g>
<g >
<title>__ext4_get_inode_loc (5 samples, 0.23%)</title><rect x="70.0" y="197" width="2.7" height="15.0" fill="rgb(224,102,3)" rx="2" ry="2" />
<text  x="72.96" y="207.5" ></text>
</g>
<g >
<title>generic_make_request (1 samples, 0.05%)</title><rect x="456.7" y="181" width="0.5" height="15.0" fill="rgb(209,219,21)" rx="2" ry="2" />
<text  x="459.69" y="191.5" ></text>
</g>
<g >
<title>__x64_sys_write (108 samples, 5.03%)</title><rect x="27.6" y="421" width="59.4" height="15.0" fill="rgb(236,0,11)" rx="2" ry="2" />
<text  x="30.60" y="431.5" >__x64_..</text>
</g>
<g >
<title>__mod_lruvec_state (1 samples, 0.05%)</title><rect x="1174.0" y="261" width="0.6" height="15.0" fill="rgb(227,202,14)" rx="2" ry="2" />
<text  x="1177.05" y="271.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.05%)</title><rect x="1162.5" y="293" width="0.5" height="15.0" fill="rgb(242,116,26)" rx="2" ry="2" />
<text  x="1165.49" y="303.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (83 samples, 3.87%)</title><rect x="90.3" y="341" width="45.7" height="15.0" fill="rgb(243,119,17)" rx="2" ry="2" />
<text  x="93.32" y="351.5" >ext4..</text>
</g>
<g >
<title>std::_Deque_iterator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;&amp;, std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*&gt;::_S_buffer_size (2 samples, 0.09%)</title><rect x="496.9" y="341" width="1.1" height="15.0" fill="rgb(237,139,6)" rx="2" ry="2" />
<text  x="499.85" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (7 samples, 0.33%)</title><rect x="1048.6" y="421" width="3.9" height="15.0" fill="rgb(235,127,34)" rx="2" ry="2" />
<text  x="1051.62" y="431.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.05%)</title><rect x="303.2" y="453" width="0.6" height="15.0" fill="rgb(239,120,24)" rx="2" ry="2" />
<text  x="306.21" y="463.5" ></text>
</g>
<g >
<title>__vfprintf_internal (12 samples, 0.56%)</title><rect x="1086.6" y="421" width="6.6" height="15.0" fill="rgb(233,147,19)" rx="2" ry="2" />
<text  x="1089.58" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (9 samples, 0.42%)</title><rect x="1095.4" y="437" width="4.9" height="15.0" fill="rgb(213,158,43)" rx="2" ry="2" />
<text  x="1098.38" y="447.5" ></text>
</g>
<g >
<title>mempool_alloc (1 samples, 0.05%)</title><rect x="125.5" y="85" width="0.6" height="15.0" fill="rgb(216,139,17)" rx="2" ry="2" />
<text  x="128.52" y="95.5" ></text>
</g>
<g >
<title>down_read_trylock (1 samples, 0.05%)</title><rect x="1147.6" y="405" width="0.6" height="15.0" fill="rgb(246,108,43)" rx="2" ry="2" />
<text  x="1150.64" y="415.5" ></text>
</g>
<g >
<title>CSV2JSON::Split2List (665 samples, 31.00%)</title><rect x="516.7" y="421" width="365.8" height="15.0" fill="rgb(215,165,45)" rx="2" ry="2" />
<text  x="519.66" y="431.5" >CSV2JSON::Split2List</text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.05%)</title><rect x="40.8" y="117" width="0.6" height="15.0" fill="rgb(244,210,23)" rx="2" ry="2" />
<text  x="43.81" y="127.5" ></text>
</g>
<g >
<title>__schedule (26 samples, 1.21%)</title><rect x="103.0" y="261" width="14.3" height="15.0" fill="rgb(249,0,15)" rx="2" ry="2" />
<text  x="105.97" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.05%)</title><rect x="1094.8" y="437" width="0.6" height="15.0" fill="rgb(220,107,32)" rx="2" ry="2" />
<text  x="1097.83" y="447.5" ></text>
</g>
<g >
<title>__lru_cache_add (4 samples, 0.19%)</title><rect x="60.6" y="213" width="2.2" height="15.0" fill="rgb(223,192,51)" rx="2" ry="2" />
<text  x="63.61" y="223.5" ></text>
</g>
<g >
<title>task_work_run (13 samples, 0.61%)</title><rect x="453.4" y="421" width="7.1" height="15.0" fill="rgb(208,105,40)" rx="2" ry="2" />
<text  x="456.39" y="431.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.19%)</title><rect x="1187.8" y="469" width="2.2" height="15.0" fill="rgb(212,56,18)" rx="2" ry="2" />
<text  x="1190.80" y="479.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.05%)</title><rect x="456.7" y="69" width="0.5" height="15.0" fill="rgb(251,48,45)" rx="2" ry="2" />
<text  x="459.69" y="79.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.05%)</title><rect x="452.3" y="373" width="0.5" height="15.0" fill="rgb(251,181,18)" rx="2" ry="2" />
<text  x="455.29" y="383.5" ></text>
</g>
<g >
<title>apparmor_file_permission (2 samples, 0.09%)</title><rect x="85.9" y="341" width="1.1" height="15.0" fill="rgb(240,191,39)" rx="2" ry="2" />
<text  x="88.92" y="351.5" ></text>
</g>
<g >
<title>std::deque&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::begin (4 samples, 0.19%)</title><rect x="1056.9" y="389" width="2.2" height="15.0" fill="rgb(208,22,5)" rx="2" ry="2" />
<text  x="1059.87" y="399.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.05%)</title><rect x="452.3" y="437" width="0.5" height="15.0" fill="rgb(254,95,15)" rx="2" ry="2" />
<text  x="455.29" y="447.5" ></text>
</g>
<g >
<title>std::deque&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::push_back (43 samples, 2.00%)</title><rect x="477.0" y="405" width="23.7" height="15.0" fill="rgb(236,142,29)" rx="2" ry="2" />
<text  x="480.05" y="415.5" >s..</text>
</g>
<g >
<title>std::queue&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::deque&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::pop (5 samples, 0.23%)</title><rect x="1059.1" y="421" width="2.7" height="15.0" fill="rgb(230,85,8)" rx="2" ry="2" />
<text  x="1062.07" y="431.5" ></text>
</g>
<g >
<title>std::forward&lt;unsigned int&amp;&gt; (1 samples, 0.05%)</title><rect x="471.0" y="421" width="0.5" height="15.0" fill="rgb(252,148,32)" rx="2" ry="2" />
<text  x="474.00" y="431.5" ></text>
</g>
<g >
<title>ext4_da_reserve_space (2 samples, 0.09%)</title><rect x="41.4" y="229" width="1.1" height="15.0" fill="rgb(240,162,49)" rx="2" ry="2" />
<text  x="44.36" y="239.5" ></text>
</g>
<g >
<title>std::queue&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::deque&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::empty (1 samples, 0.05%)</title><rect x="1055.8" y="421" width="0.5" height="15.0" fill="rgb(217,71,17)" rx="2" ry="2" />
<text  x="1058.77" y="431.5" ></text>
</g>
<g >
<title>kick_ilb (1 samples, 0.05%)</title><rect x="881.9" y="261" width="0.6" height="15.0" fill="rgb(244,81,13)" rx="2" ry="2" />
<text  x="884.93" y="271.5" ></text>
</g>
<g >
<title>page_fault (5 samples, 0.23%)</title><rect x="138.7" y="453" width="2.8" height="15.0" fill="rgb(221,165,29)" rx="2" ry="2" />
<text  x="141.73" y="463.5" ></text>
</g>
<g >
<title>clear_page_erms (6 samples, 0.28%)</title><rect x="45.2" y="181" width="3.3" height="15.0" fill="rgb(228,75,40)" rx="2" ry="2" />
<text  x="48.21" y="191.5" ></text>
</g>
<g >
<title>deactivate_task (1 samples, 0.05%)</title><rect x="103.0" y="245" width="0.5" height="15.0" fill="rgb(242,64,38)" rx="2" ry="2" />
<text  x="105.97" y="255.5" ></text>
</g>
</g>
</svg>
