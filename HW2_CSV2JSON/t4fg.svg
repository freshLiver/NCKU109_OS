<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="614" onload="init(evt)" viewBox="0 0 1200 614" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="614.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="597" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="597" > </text>
<g id="frames">
<g >
<title>perf (4 samples, 0.18%)</title><rect x="1187.9" y="549" width="2.1" height="15.0" fill="rgb(236,218,38)" rx="2" ry="2" />
<text  x="1190.89" y="559.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.04%)</title><rect x="843.4" y="309" width="0.6" height="15.0" fill="rgb(248,6,18)" rx="2" ry="2" />
<text  x="846.44" y="319.5" ></text>
</g>
<g >
<title>do_user_addr_fault (37 samples, 1.65%)</title><rect x="1166.3" y="469" width="19.5" height="15.0" fill="rgb(221,29,43)" rx="2" ry="2" />
<text  x="1169.26" y="479.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (7 samples, 0.31%)</title><rect x="51.1" y="293" width="3.7" height="15.0" fill="rgb(207,215,39)" rx="2" ry="2" />
<text  x="54.14" y="303.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (1 samples, 0.04%)</title><rect x="63.3" y="485" width="0.5" height="15.0" fill="rgb(229,131,40)" rx="2" ry="2" />
<text  x="66.28" y="495.5" ></text>
</g>
<g >
<title>pagevec_lookup_range (1 samples, 0.04%)</title><rect x="1066.6" y="293" width="0.5" height="15.0" fill="rgb(240,113,44)" rx="2" ry="2" />
<text  x="1069.57" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::destroy&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (4 samples, 0.18%)</title><rect x="943.1" y="325" width="2.1" height="15.0" fill="rgb(232,96,20)" rx="2" ry="2" />
<text  x="946.13" y="335.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.04%)</title><rect x="1099.3" y="469" width="0.5" height="15.0" fill="rgb(250,167,25)" rx="2" ry="2" />
<text  x="1102.27" y="479.5" ></text>
</g>
<g >
<title>ext4_block_write_begin (10 samples, 0.45%)</title><rect x="32.2" y="325" width="5.2" height="15.0" fill="rgb(230,229,33)" rx="2" ry="2" />
<text  x="35.15" y="335.5" ></text>
</g>
<g >
<title>__filemap_fdatawrite_range (2 samples, 0.09%)</title><rect x="1066.6" y="373" width="1.0" height="15.0" fill="rgb(241,123,32)" rx="2" ry="2" />
<text  x="1069.57" y="383.5" ></text>
</g>
<g >
<title>create_elf_tables (1 samples, 0.04%)</title><rect x="319.1" y="421" width="0.5" height="15.0" fill="rgb(231,165,36)" rx="2" ry="2" />
<text  x="322.11" y="431.5" ></text>
</g>
<g >
<title>sprintf (9 samples, 0.40%)</title><rect x="811.3" y="373" width="4.7" height="15.0" fill="rgb(252,74,41)" rx="2" ry="2" />
<text  x="814.26" y="383.5" ></text>
</g>
<g >
<title>__vsprintf_internal (2 samples, 0.09%)</title><rect x="808.1" y="373" width="1.1" height="15.0" fill="rgb(214,206,23)" rx="2" ry="2" />
<text  x="811.10" y="383.5" ></text>
</g>
<g >
<title>up_read (1 samples, 0.04%)</title><rect x="36.9" y="293" width="0.5" height="15.0" fill="rgb(215,131,2)" rx="2" ry="2" />
<text  x="39.90" y="303.5" ></text>
</g>
<g >
<title>_IO_file_xsputn@@GLIBC_2.2.5 (3 samples, 0.13%)</title><rect x="13.2" y="517" width="1.5" height="15.0" fill="rgb(235,46,53)" rx="2" ry="2" />
<text  x="16.16" y="527.5" ></text>
</g>
<g >
<title>rmqueue (1 samples, 0.04%)</title><rect x="1099.3" y="325" width="0.5" height="15.0" fill="rgb(234,213,26)" rx="2" ry="2" />
<text  x="1102.27" y="335.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (1 samples, 0.04%)</title><rect x="29.0" y="293" width="0.5" height="15.0" fill="rgb(246,6,28)" rx="2" ry="2" />
<text  x="31.99" y="303.5" ></text>
</g>
<g >
<title>ext4_da_get_block_prep (7 samples, 0.31%)</title><rect x="33.7" y="309" width="3.7" height="15.0" fill="rgb(247,161,47)" rx="2" ry="2" />
<text  x="36.74" y="319.5" ></text>
</g>
<g >
<title>apparmor_file_permission (1 samples, 0.04%)</title><rect x="61.2" y="405" width="0.5" height="15.0" fill="rgb(236,46,4)" rx="2" ry="2" />
<text  x="64.17" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (3 samples, 0.13%)</title><rect x="351.8" y="517" width="1.6" height="15.0" fill="rgb(252,170,25)" rx="2" ry="2" />
<text  x="354.81" y="527.5" ></text>
</g>
<g >
<title>unmap_page_range (11 samples, 0.49%)</title><rect x="1140.4" y="389" width="5.8" height="15.0" fill="rgb(233,186,41)" rx="2" ry="2" />
<text  x="1143.42" y="399.5" ></text>
</g>
<g >
<title>pagecache_get_page (1 samples, 0.04%)</title><rect x="83.8" y="357" width="0.6" height="15.0" fill="rgb(210,161,25)" rx="2" ry="2" />
<text  x="86.85" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (8 samples, 0.36%)</title><rect x="930.5" y="373" width="4.2" height="15.0" fill="rgb(220,79,23)" rx="2" ry="2" />
<text  x="933.47" y="383.5" ></text>
</g>
<g >
<title>ksys_read (33 samples, 1.48%)</title><rect x="67.0" y="453" width="17.4" height="15.0" fill="rgb(238,193,34)" rx="2" ry="2" />
<text  x="69.97" y="463.5" ></text>
</g>
<g >
<title>__vfprintf_internal (151 samples, 6.75%)</title><rect x="197.8" y="501" width="79.6" height="15.0" fill="rgb(211,229,38)" rx="2" ry="2" />
<text  x="200.79" y="511.5" >__vfprint..</text>
</g>
<g >
<title>[C2J] (10 samples, 0.45%)</title><rect x="947.9" y="389" width="5.3" height="15.0" fill="rgb(246,124,15)" rx="2" ry="2" />
<text  x="950.88" y="399.5" ></text>
</g>
<g >
<title>__lru_cache_add (2 samples, 0.09%)</title><rect x="1135.7" y="389" width="1.0" height="15.0" fill="rgb(252,120,15)" rx="2" ry="2" />
<text  x="1138.67" y="399.5" ></text>
</g>
<g >
<title>CSV2JSON::WriteJSON (2 samples, 0.09%)</title><rect x="1076.6" y="485" width="1.0" height="15.0" fill="rgb(214,116,3)" rx="2" ry="2" />
<text  x="1079.59" y="495.5" ></text>
</g>
<g >
<title>__libc_enable_asynccancel (1 samples, 0.04%)</title><rect x="66.4" y="517" width="0.6" height="15.0" fill="rgb(215,40,3)" rx="2" ry="2" />
<text  x="69.44" y="527.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::~basic_filebuf (10 samples, 0.45%)</title><rect x="353.4" y="517" width="5.3" height="15.0" fill="rgb(235,68,6)" rx="2" ry="2" />
<text  x="356.40" y="527.5" ></text>
</g>
<g >
<title>__find_get_block (1 samples, 0.04%)</title><rect x="53.8" y="213" width="0.5" height="15.0" fill="rgb(234,115,35)" rx="2" ry="2" />
<text  x="56.78" y="223.5" ></text>
</g>
<g >
<title>do_anonymous_page (28 samples, 1.25%)</title><rect x="1170.5" y="421" width="14.8" height="15.0" fill="rgb(250,34,25)" rx="2" ry="2" />
<text  x="1173.48" y="431.5" ></text>
</g>
<g >
<title>ext4_es_insert_delayed_block (1 samples, 0.04%)</title><rect x="36.4" y="277" width="0.5" height="15.0" fill="rgb(232,42,26)" rx="2" ry="2" />
<text  x="39.37" y="287.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.36%)</title><rect x="18.4" y="501" width="4.3" height="15.0" fill="rgb(246,93,40)" rx="2" ry="2" />
<text  x="21.44" y="511.5" ></text>
</g>
<g >
<title>__set_page_dirty (4 samples, 0.18%)</title><rect x="56.4" y="261" width="2.1" height="15.0" fill="rgb(224,107,47)" rx="2" ry="2" />
<text  x="59.42" y="271.5" ></text>
</g>
<g >
<title>grab_cache_page_write_begin (21 samples, 0.94%)</title><rect x="37.4" y="325" width="11.1" height="15.0" fill="rgb(252,63,18)" rx="2" ry="2" />
<text  x="40.43" y="335.5" ></text>
</g>
<g >
<title>mark_page_accessed (1 samples, 0.04%)</title><rect x="82.8" y="341" width="0.5" height="15.0" fill="rgb(253,69,19)" rx="2" ry="2" />
<text  x="85.79" y="351.5" ></text>
</g>
<g >
<title>__mod_memcg_state (1 samples, 0.04%)</title><rect x="1183.1" y="325" width="0.6" height="15.0" fill="rgb(205,93,17)" rx="2" ry="2" />
<text  x="1186.14" y="335.5" ></text>
</g>
<g >
<title>ext4_writepages (2 samples, 0.09%)</title><rect x="1066.6" y="341" width="1.0" height="15.0" fill="rgb(232,1,46)" rx="2" ry="2" />
<text  x="1069.57" y="351.5" ></text>
</g>
<g >
<title>down_read (2 samples, 0.09%)</title><rect x="34.8" y="277" width="1.0" height="15.0" fill="rgb(238,202,43)" rx="2" ry="2" />
<text  x="37.79" y="287.5" ></text>
</g>
<g >
<title>____fput (2 samples, 0.09%)</title><rect x="1066.6" y="453" width="1.0" height="15.0" fill="rgb(242,211,25)" rx="2" ry="2" />
<text  x="1069.57" y="463.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.04%)</title><rect x="51.7" y="261" width="0.5" height="15.0" fill="rgb(245,77,7)" rx="2" ry="2" />
<text  x="54.67" y="271.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="843.4" y="357" width="0.6" height="15.0" fill="rgb(214,37,16)" rx="2" ry="2" />
<text  x="846.44" y="367.5" ></text>
</g>
<g >
<title>truncate_inode_pages_range (8 samples, 0.36%)</title><rect x="18.4" y="325" width="4.3" height="15.0" fill="rgb(216,89,20)" rx="2" ry="2" />
<text  x="21.44" y="335.5" ></text>
</g>
<g >
<title>clear_page_erms (6 samples, 0.27%)</title><rect x="39.0" y="229" width="3.2" height="15.0" fill="rgb(205,61,2)" rx="2" ry="2" />
<text  x="42.01" y="239.5" ></text>
</g>
<g >
<title>_int_free (2 samples, 0.09%)</title><rect x="809.2" y="373" width="1.0" height="15.0" fill="rgb(208,47,29)" rx="2" ry="2" />
<text  x="812.15" y="383.5" ></text>
</g>
<g >
<title>pagevec_lookup_entries (1 samples, 0.04%)</title><rect x="19.5" y="309" width="0.5" height="15.0" fill="rgb(228,5,45)" rx="2" ry="2" />
<text  x="22.49" y="319.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (11 samples, 0.49%)</title><rect x="1140.4" y="501" width="5.8" height="15.0" fill="rgb(213,133,47)" rx="2" ry="2" />
<text  x="1143.42" y="511.5" ></text>
</g>
<g >
<title>generic_perform_write (60 samples, 2.68%)</title><rect x="29.0" y="357" width="31.6" height="15.0" fill="rgb(218,228,41)" rx="2" ry="2" />
<text  x="31.99" y="367.5" >ge..</text>
</g>
<g >
<title>__schedule (4 samples, 0.18%)</title><rect x="30.0" y="229" width="2.2" height="15.0" fill="rgb(252,227,38)" rx="2" ry="2" />
<text  x="33.04" y="239.5" ></text>
</g>
<g >
<title>CSV2JSON::ReadCSV (17 samples, 0.76%)</title><rect x="1067.6" y="485" width="9.0" height="15.0" fill="rgb(253,72,46)" rx="2" ry="2" />
<text  x="1070.62" y="495.5" ></text>
</g>
<g >
<title>get_page_from_freelist (8 samples, 0.36%)</title><rect x="39.0" y="245" width="4.2" height="15.0" fill="rgb(245,61,20)" rx="2" ry="2" />
<text  x="42.01" y="255.5" ></text>
</g>
<g >
<title>enqueue_task_fair (1 samples, 0.04%)</title><rect x="318.1" y="357" width="0.5" height="15.0" fill="rgb(233,118,41)" rx="2" ry="2" />
<text  x="321.06" y="367.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (3 samples, 0.13%)</title><rect x="59.1" y="325" width="1.5" height="15.0" fill="rgb(224,33,52)" rx="2" ry="2" />
<text  x="62.06" y="335.5" ></text>
</g>
<g >
<title>tick_sched_handle (2 samples, 0.09%)</title><rect x="748.0" y="277" width="1.0" height="15.0" fill="rgb(208,67,36)" rx="2" ry="2" />
<text  x="750.96" y="287.5" ></text>
</g>
<g >
<title>CSV2JSON::List2Cell (12 samples, 0.54%)</title><rect x="376.1" y="373" width="6.3" height="15.0" fill="rgb(242,69,18)" rx="2" ry="2" />
<text  x="379.08" y="383.5" ></text>
</g>
<g >
<title>std::deque&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::front (7 samples, 0.31%)</title><rect x="936.8" y="357" width="3.7" height="15.0" fill="rgb(207,85,36)" rx="2" ry="2" />
<text  x="939.80" y="367.5" ></text>
</g>
<g >
<title>sync_regs (2 samples, 0.09%)</title><rect x="1139.4" y="517" width="1.0" height="15.0" fill="rgb(235,182,19)" rx="2" ry="2" />
<text  x="1142.36" y="527.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.04%)</title><rect x="1100.3" y="533" width="0.6" height="15.0" fill="rgb(226,95,32)" rx="2" ry="2" />
<text  x="1103.33" y="543.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;&amp;, std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*&gt;::_M_set_node (1 samples, 0.04%)</title><rect x="1076.1" y="405" width="0.5" height="15.0" fill="rgb(243,81,48)" rx="2" ry="2" />
<text  x="1079.06" y="415.5" ></text>
</g>
<g >
<title>__fput (2 samples, 0.09%)</title><rect x="1066.6" y="437" width="1.0" height="15.0" fill="rgb(248,69,22)" rx="2" ry="2" />
<text  x="1069.57" y="447.5" ></text>
</g>
<g >
<title>change_pte_range (3 samples, 0.13%)</title><rect x="1106.1" y="405" width="1.6" height="15.0" fill="rgb(251,49,30)" rx="2" ry="2" />
<text  x="1109.13" y="415.5" ></text>
</g>
<g >
<title>mem_cgroup_charge_statistics (1 samples, 0.04%)</title><rect x="1183.7" y="389" width="0.5" height="15.0" fill="rgb(230,53,6)" rx="2" ry="2" />
<text  x="1186.67" y="399.5" ></text>
</g>
<g >
<title>page_fault (10 samples, 0.45%)</title><rect x="1115.1" y="517" width="5.3" height="15.0" fill="rgb(244,113,31)" rx="2" ry="2" />
<text  x="1118.10" y="527.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.04%)</title><rect x="1099.3" y="453" width="0.5" height="15.0" fill="rgb(238,157,39)" rx="2" ry="2" />
<text  x="1102.27" y="463.5" ></text>
</g>
<g >
<title>io_schedule (20 samples, 0.89%)</title><rect x="72.2" y="341" width="10.6" height="15.0" fill="rgb(251,39,31)" rx="2" ry="2" />
<text  x="75.24" y="351.5" ></text>
</g>
<g >
<title>__alloc_pages_slowpath (1 samples, 0.04%)</title><rect x="38.5" y="245" width="0.5" height="15.0" fill="rgb(222,127,13)" rx="2" ry="2" />
<text  x="41.48" y="255.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (11 samples, 0.49%)</title><rect x="1140.4" y="357" width="5.8" height="15.0" fill="rgb(224,60,39)" rx="2" ry="2" />
<text  x="1143.42" y="367.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.04%)</title><rect x="1099.3" y="421" width="0.5" height="15.0" fill="rgb(240,200,30)" rx="2" ry="2" />
<text  x="1102.27" y="431.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.49%)</title><rect x="1140.4" y="533" width="5.8" height="15.0" fill="rgb(253,207,10)" rx="2" ry="2" />
<text  x="1143.42" y="543.5" ></text>
</g>
<g >
<title>futex_wait (11 samples, 0.49%)</title><rect x="85.4" y="437" width="5.8" height="15.0" fill="rgb(240,3,18)" rx="2" ry="2" />
<text  x="88.43" y="447.5" ></text>
</g>
<g >
<title>do_filp_open (8 samples, 0.36%)</title><rect x="18.4" y="437" width="4.3" height="15.0" fill="rgb(209,49,31)" rx="2" ry="2" />
<text  x="21.44" y="447.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (1 samples, 0.04%)</title><rect x="82.8" y="309" width="0.5" height="15.0" fill="rgb(218,209,33)" rx="2" ry="2" />
<text  x="85.79" y="319.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.18%)</title><rect x="1187.9" y="357" width="2.1" height="15.0" fill="rgb(238,97,16)" rx="2" ry="2" />
<text  x="1190.89" y="367.5" ></text>
</g>
<g >
<title>do_group_exit (11 samples, 0.49%)</title><rect x="1140.4" y="485" width="5.8" height="15.0" fill="rgb(215,65,44)" rx="2" ry="2" />
<text  x="1143.42" y="495.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.18%)</title><rect x="1187.9" y="341" width="2.1" height="15.0" fill="rgb(205,165,18)" rx="2" ry="2" />
<text  x="1190.89" y="351.5" ></text>
</g>
<g >
<title>try_to_release_page (3 samples, 0.13%)</title><rect x="20.5" y="261" width="1.6" height="15.0" fill="rgb(254,42,22)" rx="2" ry="2" />
<text  x="23.55" y="271.5" ></text>
</g>
<g >
<title>interrupt_entry (1 samples, 0.04%)</title><rect x="63.8" y="501" width="0.5" height="15.0" fill="rgb(228,4,14)" rx="2" ry="2" />
<text  x="66.80" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::substr (25 samples, 1.12%)</title><rect x="917.3" y="373" width="13.2" height="15.0" fill="rgb(249,70,1)" rx="2" ry="2" />
<text  x="920.29" y="383.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (1 samples, 0.04%)</title><rect x="21.6" y="37" width="0.5" height="15.0" fill="rgb(227,11,6)" rx="2" ry="2" />
<text  x="24.60" y="47.5" ></text>
</g>
<g >
<title>unmap_vmas (11 samples, 0.49%)</title><rect x="1140.4" y="421" width="5.8" height="15.0" fill="rgb(214,225,32)" rx="2" ry="2" />
<text  x="1143.42" y="431.5" ></text>
</g>
<g >
<title>new_sync_write (65 samples, 2.91%)</title><rect x="26.9" y="405" width="34.3" height="15.0" fill="rgb(223,4,25)" rx="2" ry="2" />
<text  x="29.88" y="415.5" >ne..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (10 samples, 0.45%)</title><rect x="959.5" y="389" width="5.3" height="15.0" fill="rgb(248,89,29)" rx="2" ry="2" />
<text  x="962.49" y="399.5" ></text>
</g>
<g >
<title>std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::~pair (1 samples, 0.04%)</title><rect x="1071.3" y="469" width="0.5" height="15.0" fill="rgb(205,210,0)" rx="2" ry="2" />
<text  x="1074.31" y="479.5" ></text>
</g>
<g >
<title>generic_write_end (16 samples, 0.72%)</title><rect x="50.1" y="325" width="8.4" height="15.0" fill="rgb(217,187,32)" rx="2" ry="2" />
<text  x="53.09" y="335.5" ></text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.04%)</title><rect x="49.0" y="293" width="0.6" height="15.0" fill="rgb(207,176,43)" rx="2" ry="2" />
<text  x="52.03" y="303.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (8 samples, 0.36%)</title><rect x="86.5" y="357" width="4.2" height="15.0" fill="rgb(217,46,31)" rx="2" ry="2" />
<text  x="89.49" y="367.5" ></text>
</g>
<g >
<title>__pagevec_lru_add_fn (5 samples, 0.22%)</title><rect x="1181.0" y="357" width="2.7" height="15.0" fill="rgb(248,18,3)" rx="2" ry="2" />
<text  x="1184.03" y="367.5" ></text>
</g>
<g >
<title>vma_merge (3 samples, 0.13%)</title><rect x="1111.4" y="437" width="1.6" height="15.0" fill="rgb(218,105,51)" rx="2" ry="2" />
<text  x="1114.40" y="447.5" ></text>
</g>
<g >
<title>xas_load (1 samples, 0.04%)</title><rect x="56.9" y="229" width="0.6" height="15.0" fill="rgb(245,32,34)" rx="2" ry="2" />
<text  x="59.95" y="239.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (1 samples, 0.04%)</title><rect x="33.2" y="261" width="0.5" height="15.0" fill="rgb(242,11,28)" rx="2" ry="2" />
<text  x="36.21" y="271.5" ></text>
</g>
<g >
<title>__lru_cache_add (1 samples, 0.04%)</title><rect x="46.9" y="277" width="0.6" height="15.0" fill="rgb(254,102,36)" rx="2" ry="2" />
<text  x="49.92" y="287.5" ></text>
</g>
<g >
<title>task_tick_fair (1 samples, 0.04%)</title><rect x="748.5" y="229" width="0.5" height="15.0" fill="rgb(241,7,5)" rx="2" ry="2" />
<text  x="751.49" y="239.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.18%)</title><rect x="30.0" y="165" width="2.2" height="15.0" fill="rgb(219,82,10)" rx="2" ry="2" />
<text  x="33.04" y="175.5" ></text>
</g>
<g >
<title>lru_cache_add_active_or_unevictable (5 samples, 0.22%)</title><rect x="1181.0" y="405" width="2.7" height="15.0" fill="rgb(244,200,50)" rx="2" ry="2" />
<text  x="1184.03" y="415.5" ></text>
</g>
<g >
<title>finish_task_switch (4 samples, 0.18%)</title><rect x="30.0" y="213" width="2.2" height="15.0" fill="rgb(219,226,13)" rx="2" ry="2" />
<text  x="33.04" y="223.5" ></text>
</g>
<g >
<title>down_write (1 samples, 0.04%)</title><rect x="1111.9" y="405" width="0.6" height="15.0" fill="rgb(251,22,24)" rx="2" ry="2" />
<text  x="1114.93" y="415.5" ></text>
</g>
<g >
<title>deactivate_task (1 samples, 0.04%)</title><rect x="86.0" y="373" width="0.5" height="15.0" fill="rgb(213,147,22)" rx="2" ry="2" />
<text  x="88.96" y="383.5" ></text>
</g>
<g >
<title>_raw_spin_lock (2 samples, 0.09%)</title><rect x="1169.4" y="421" width="1.1" height="15.0" fill="rgb(250,91,11)" rx="2" ry="2" />
<text  x="1172.43" y="431.5" ></text>
</g>
<g >
<title>unlink_chunk.isra.0 (7 samples, 0.31%)</title><rect x="973.2" y="517" width="3.7" height="15.0" fill="rgb(227,137,6)" rx="2" ry="2" />
<text  x="976.20" y="527.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (4 samples, 0.18%)</title><rect x="355.5" y="485" width="2.1" height="15.0" fill="rgb(217,67,45)" rx="2" ry="2" />
<text  x="358.51" y="495.5" ></text>
</g>
<g >
<title>account_user_time (1 samples, 0.04%)</title><rect x="748.0" y="229" width="0.5" height="15.0" fill="rgb(206,164,13)" rx="2" ry="2" />
<text  x="750.96" y="239.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (3 samples, 0.13%)</title><rect x="1137.3" y="389" width="1.5" height="15.0" fill="rgb(236,55,1)" rx="2" ry="2" />
<text  x="1140.25" y="399.5" ></text>
</g>
<g >
<title>__mod_node_page_state (2 samples, 0.09%)</title><rect x="1172.1" y="405" width="1.0" height="15.0" fill="rgb(232,221,23)" rx="2" ry="2" />
<text  x="1175.07" y="415.5" ></text>
</g>
<g >
<title>ext4_inode_csum_set (3 samples, 0.13%)</title><rect x="52.2" y="229" width="1.6" height="15.0" fill="rgb(227,15,8)" rx="2" ry="2" />
<text  x="55.20" y="239.5" ></text>
</g>
<g >
<title>ttwu_do_activate (2 samples, 0.09%)</title><rect x="317.5" y="389" width="1.1" height="15.0" fill="rgb(240,182,27)" rx="2" ry="2" />
<text  x="320.53" y="399.5" ></text>
</g>
<g >
<title>update_curr (1 samples, 0.04%)</title><rect x="748.5" y="213" width="0.5" height="15.0" fill="rgb(254,212,41)" rx="2" ry="2" />
<text  x="751.49" y="223.5" ></text>
</g>
<g >
<title>ext4_readpages (1 samples, 0.04%)</title><rect x="83.3" y="277" width="0.5" height="15.0" fill="rgb(240,40,29)" rx="2" ry="2" />
<text  x="86.32" y="287.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.0 (4 samples, 0.18%)</title><rect x="1187.9" y="373" width="2.1" height="15.0" fill="rgb(217,33,47)" rx="2" ry="2" />
<text  x="1190.89" y="383.5" ></text>
</g>
<g >
<title>fprintf (35 samples, 1.56%)</title><rect x="1078.2" y="485" width="18.4" height="15.0" fill="rgb(248,7,37)" rx="2" ry="2" />
<text  x="1081.17" y="495.5" ></text>
</g>
<g >
<title>__lru_cache_add (1 samples, 0.04%)</title><rect x="1171.5" y="405" width="0.6" height="15.0" fill="rgb(224,212,29)" rx="2" ry="2" />
<text  x="1174.54" y="415.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (2 samples, 0.09%)</title><rect x="10.0" y="517" width="1.1" height="15.0" fill="rgb(216,126,31)" rx="2" ry="2" />
<text  x="13.00" y="527.5" ></text>
</g>
<g >
<title>task_work_run (2 samples, 0.09%)</title><rect x="1066.6" y="469" width="1.0" height="15.0" fill="rgb(218,139,16)" rx="2" ry="2" />
<text  x="1069.57" y="479.5" ></text>
</g>
<g >
<title>__activate_page (1 samples, 0.04%)</title><rect x="82.8" y="293" width="0.5" height="15.0" fill="rgb(253,182,3)" rx="2" ry="2" />
<text  x="85.79" y="303.5" ></text>
</g>
<g >
<title>__vma_adjust (2 samples, 0.09%)</title><rect x="1111.4" y="421" width="1.1" height="15.0" fill="rgb(215,143,0)" rx="2" ry="2" />
<text  x="1114.40" y="431.5" ></text>
</g>
<g >
<title>do_futex (11 samples, 0.49%)</title><rect x="85.4" y="453" width="5.8" height="15.0" fill="rgb(224,62,37)" rx="2" ry="2" />
<text  x="88.43" y="463.5" ></text>
</g>
<g >
<title>std::istream::sentry::sentry (2 samples, 0.09%)</title><rect x="358.7" y="517" width="1.0" height="15.0" fill="rgb(208,64,32)" rx="2" ry="2" />
<text  x="361.67" y="527.5" ></text>
</g>
<g >
<title>truncate_pagecache (8 samples, 0.36%)</title><rect x="18.4" y="341" width="4.3" height="15.0" fill="rgb(254,80,32)" rx="2" ry="2" />
<text  x="21.44" y="351.5" ></text>
</g>
<g >
<title>alloc_pages_current (11 samples, 0.49%)</title><rect x="37.4" y="277" width="5.8" height="15.0" fill="rgb(248,84,14)" rx="2" ry="2" />
<text  x="40.43" y="287.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (1 samples, 0.04%)</title><rect x="1114.6" y="501" width="0.5" height="15.0" fill="rgb(223,183,21)" rx="2" ry="2" />
<text  x="1117.57" y="511.5" ></text>
</g>
<g >
<title>ext4_releasepage (3 samples, 0.13%)</title><rect x="20.5" y="245" width="1.6" height="15.0" fill="rgb(236,81,21)" rx="2" ry="2" />
<text  x="23.55" y="255.5" ></text>
</g>
<g >
<title>ext4_da_map_blocks.constprop.0 (6 samples, 0.27%)</title><rect x="33.7" y="293" width="3.2" height="15.0" fill="rgb(240,74,9)" rx="2" ry="2" />
<text  x="36.74" y="303.5" ></text>
</g>
<g >
<title>ext4_reserve_inode_write (2 samples, 0.09%)</title><rect x="53.8" y="261" width="1.0" height="15.0" fill="rgb(230,56,35)" rx="2" ry="2" />
<text  x="56.78" y="271.5" ></text>
</g>
<g >
<title>get_futex_key_refs.isra.0 (1 samples, 0.04%)</title><rect x="90.7" y="389" width="0.5" height="15.0" fill="rgb(211,104,0)" rx="2" ry="2" />
<text  x="93.71" y="399.5" ></text>
</g>
<g >
<title>up_read (1 samples, 0.04%)</title><rect x="1185.8" y="469" width="0.5" height="15.0" fill="rgb(254,157,27)" rx="2" ry="2" />
<text  x="1188.78" y="479.5" ></text>
</g>
<g >
<title>alloc_page_buffers (1 samples, 0.04%)</title><rect x="33.2" y="293" width="0.5" height="15.0" fill="rgb(205,145,8)" rx="2" ry="2" />
<text  x="36.21" y="303.5" ></text>
</g>
<g >
<title>put_cpu_partial (1 samples, 0.04%)</title><rect x="21.6" y="149" width="0.5" height="15.0" fill="rgb(238,15,9)" rx="2" ry="2" />
<text  x="24.60" y="159.5" ></text>
</g>
<g >
<title>do_anonymous_page (16 samples, 0.72%)</title><rect x="1130.4" y="421" width="8.4" height="15.0" fill="rgb(240,58,44)" rx="2" ry="2" />
<text  x="1133.39" y="431.5" ></text>
</g>
<g >
<title>futex_wait_setup (1 samples, 0.04%)</title><rect x="90.7" y="421" width="0.5" height="15.0" fill="rgb(236,13,52)" rx="2" ry="2" />
<text  x="93.71" y="431.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (1 samples, 0.04%)</title><rect x="83.3" y="213" width="0.5" height="15.0" fill="rgb(225,78,8)" rx="2" ry="2" />
<text  x="86.32" y="223.5" ></text>
</g>
<g >
<title>[unknown] (1,163 samples, 51.99%)</title><rect x="359.7" y="501" width="613.5" height="15.0" fill="rgb(244,78,22)" rx="2" ry="2" />
<text  x="362.73" y="511.5" >[unknown]</text>
</g>
<g >
<title>__count_memcg_events (1 samples, 0.04%)</title><rect x="1129.9" y="437" width="0.5" height="15.0" fill="rgb(205,169,46)" rx="2" ry="2" />
<text  x="1132.87" y="447.5" ></text>
</g>
<g >
<title>CSV2JSON::Split2List (695 samples, 31.07%)</title><rect x="382.4" y="373" width="366.6" height="15.0" fill="rgb(236,217,9)" rx="2" ry="2" />
<text  x="385.41" y="383.5" >CSV2JSON::Split2List</text>
</g>
<g >
<title>cpuacct_charge (1 samples, 0.04%)</title><rect x="86.0" y="309" width="0.5" height="15.0" fill="rgb(249,145,15)" rx="2" ry="2" />
<text  x="88.96" y="319.5" ></text>
</g>
<g >
<title>kmem_cache_free (2 samples, 0.09%)</title><rect x="21.1" y="181" width="1.0" height="15.0" fill="rgb(228,62,50)" rx="2" ry="2" />
<text  x="24.08" y="191.5" ></text>
</g>
<g >
<title>__libc_disable_asynccancel (2 samples, 0.09%)</title><rect x="65.4" y="517" width="1.0" height="15.0" fill="rgb(243,76,40)" rx="2" ry="2" />
<text  x="68.39" y="527.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (33 samples, 1.48%)</title><rect x="67.0" y="501" width="17.4" height="15.0" fill="rgb(233,30,36)" rx="2" ry="2" />
<text  x="69.97" y="511.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;&amp;, std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*&gt;::operator* (2 samples, 0.09%)</title><rect x="937.9" y="341" width="1.0" height="15.0" fill="rgb(213,146,17)" rx="2" ry="2" />
<text  x="940.86" y="351.5" ></text>
</g>
<g >
<title>__memchr_avx2 (4 samples, 0.18%)</title><rect x="353.4" y="485" width="2.1" height="15.0" fill="rgb(240,49,48)" rx="2" ry="2" />
<text  x="356.40" y="495.5" ></text>
</g>
<g >
<title>std::deque&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::emplace_back&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (8 samples, 0.36%)</title><rect x="1072.4" y="437" width="4.2" height="15.0" fill="rgb(241,133,28)" rx="2" ry="2" />
<text  x="1075.37" y="447.5" ></text>
</g>
<g >
<title>iov_iter_advance (1 samples, 0.04%)</title><rect x="58.5" y="341" width="0.6" height="15.0" fill="rgb(248,94,46)" rx="2" ry="2" />
<text  x="61.53" y="351.5" ></text>
</g>
<g >
<title>__ext4_journal_stop (3 samples, 0.13%)</title><rect x="48.5" y="325" width="1.6" height="15.0" fill="rgb(237,20,42)" rx="2" ry="2" />
<text  x="51.51" y="335.5" ></text>
</g>
<g >
<title>__vfprintf_internal (15 samples, 0.67%)</title><rect x="1088.7" y="469" width="7.9" height="15.0" fill="rgb(225,120,48)" rx="2" ry="2" />
<text  x="1091.72" y="479.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (1 samples, 0.04%)</title><rect x="58.0" y="229" width="0.5" height="15.0" fill="rgb(216,62,25)" rx="2" ry="2" />
<text  x="61.00" y="239.5" ></text>
</g>
<g >
<title>pagecache_get_page (21 samples, 0.94%)</title><rect x="37.4" y="309" width="11.1" height="15.0" fill="rgb(223,139,38)" rx="2" ry="2" />
<text  x="40.43" y="319.5" ></text>
</g>
<g >
<title>try_to_free_buffers (3 samples, 0.13%)</title><rect x="20.5" y="213" width="1.6" height="15.0" fill="rgb(229,206,3)" rx="2" ry="2" />
<text  x="23.55" y="223.5" ></text>
</g>
<g >
<title>do_last (8 samples, 0.36%)</title><rect x="18.4" y="405" width="4.3" height="15.0" fill="rgb(213,31,4)" rx="2" ry="2" />
<text  x="21.44" y="415.5" ></text>
</g>
<g >
<title>rwsem_optimistic_spin (2 samples, 0.09%)</title><rect x="1166.3" y="421" width="1.0" height="15.0" fill="rgb(243,142,40)" rx="2" ry="2" />
<text  x="1169.26" y="431.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.0 (20 samples, 0.89%)</title><rect x="72.2" y="261" width="10.6" height="15.0" fill="rgb(210,133,30)" rx="2" ry="2" />
<text  x="75.24" y="271.5" ></text>
</g>
<g >
<title>filemap_flush (2 samples, 0.09%)</title><rect x="1066.6" y="389" width="1.0" height="15.0" fill="rgb(251,208,48)" rx="2" ry="2" />
<text  x="1069.57" y="399.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="276.9" y="469" width="0.5" height="15.0" fill="rgb(247,203,35)" rx="2" ry="2" />
<text  x="279.91" y="479.5" ></text>
</g>
<g >
<title>__mod_node_page_state (1 samples, 0.04%)</title><rect x="1135.7" y="325" width="0.5" height="15.0" fill="rgb(230,174,0)" rx="2" ry="2" />
<text  x="1138.67" y="335.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.09%)</title><rect x="1066.6" y="517" width="1.0" height="15.0" fill="rgb(209,24,13)" rx="2" ry="2" />
<text  x="1069.57" y="527.5" ></text>
</g>
<g >
<title>__lru_cache_add (2 samples, 0.09%)</title><rect x="47.5" y="261" width="1.0" height="15.0" fill="rgb(226,129,46)" rx="2" ry="2" />
<text  x="50.45" y="271.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.04%)</title><rect x="57.5" y="245" width="0.5" height="15.0" fill="rgb(212,131,54)" rx="2" ry="2" />
<text  x="60.47" y="255.5" ></text>
</g>
<g >
<title>sync_regs (2 samples, 0.09%)</title><rect x="1186.8" y="517" width="1.1" height="15.0" fill="rgb(213,99,18)" rx="2" ry="2" />
<text  x="1189.84" y="527.5" ></text>
</g>
<g >
<title>futex_wake (7 samples, 0.31%)</title><rect x="314.9" y="437" width="3.7" height="15.0" fill="rgb(244,12,6)" rx="2" ry="2" />
<text  x="317.89" y="447.5" ></text>
</g>
<g >
<title>ext4_mark_iloc_dirty (3 samples, 0.13%)</title><rect x="52.2" y="261" width="1.6" height="15.0" fill="rgb(248,119,39)" rx="2" ry="2" />
<text  x="55.20" y="271.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="1163.6" y="517" width="0.6" height="15.0" fill="rgb(244,111,12)" rx="2" ry="2" />
<text  x="1166.63" y="527.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::deallocate (3 samples, 0.13%)</title><rect x="946.3" y="309" width="1.6" height="15.0" fill="rgb(243,129,4)" rx="2" ry="2" />
<text  x="949.30" y="319.5" ></text>
</g>
<g >
<title>malloc (23 samples, 1.03%)</title><rect x="1146.2" y="533" width="12.2" height="15.0" fill="rgb(225,4,1)" rx="2" ry="2" />
<text  x="1149.22" y="543.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (2 samples, 0.09%)</title><rect x="1066.6" y="485" width="1.0" height="15.0" fill="rgb(230,2,43)" rx="2" ry="2" />
<text  x="1069.57" y="495.5" ></text>
</g>
<g >
<title>ext4_alloc_da_blocks (2 samples, 0.09%)</title><rect x="1066.6" y="405" width="1.0" height="15.0" fill="rgb(233,72,35)" rx="2" ry="2" />
<text  x="1069.57" y="415.5" ></text>
</g>
<g >
<title>__free_slab (1 samples, 0.04%)</title><rect x="21.6" y="101" width="0.5" height="15.0" fill="rgb(210,181,28)" rx="2" ry="2" />
<text  x="24.60" y="111.5" ></text>
</g>
<g >
<title>__count_memcg_events (1 samples, 0.04%)</title><rect x="1168.4" y="437" width="0.5" height="15.0" fill="rgb(212,104,6)" rx="2" ry="2" />
<text  x="1171.37" y="447.5" ></text>
</g>
<g >
<title>mem_cgroup_uncharge_list (1 samples, 0.04%)</title><rect x="1145.7" y="309" width="0.5" height="15.0" fill="rgb(221,162,41)" rx="2" ry="2" />
<text  x="1148.69" y="319.5" ></text>
</g>
<g >
<title>truncate_cleanup_page (4 samples, 0.18%)</title><rect x="20.0" y="309" width="2.1" height="15.0" fill="rgb(214,130,32)" rx="2" ry="2" />
<text  x="23.02" y="319.5" ></text>
</g>
<g >
<title>lru_cache_add_active_or_unevictable (2 samples, 0.09%)</title><rect x="1135.7" y="405" width="1.0" height="15.0" fill="rgb(254,31,17)" rx="2" ry="2" />
<text  x="1138.67" y="415.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.0 (8 samples, 0.36%)</title><rect x="86.5" y="341" width="4.2" height="15.0" fill="rgb(207,142,3)" rx="2" ry="2" />
<text  x="89.49" y="351.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (9 samples, 0.40%)</title><rect x="86.0" y="421" width="4.7" height="15.0" fill="rgb(220,118,15)" rx="2" ry="2" />
<text  x="88.96" y="431.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (4 samples, 0.18%)</title><rect x="1073.4" y="421" width="2.1" height="15.0" fill="rgb(236,180,53)" rx="2" ry="2" />
<text  x="1076.42" y="431.5" ></text>
</g>
<g >
<title>activate_page (1 samples, 0.04%)</title><rect x="67.0" y="341" width="0.5" height="15.0" fill="rgb(215,37,26)" rx="2" ry="2" />
<text  x="69.97" y="351.5" ></text>
</g>
<g >
<title>_IO_default_xsputn (169 samples, 7.55%)</title><rect x="976.9" y="533" width="89.1" height="15.0" fill="rgb(231,68,20)" rx="2" ry="2" />
<text  x="979.89" y="543.5" >_IO_defaul..</text>
</g>
<g >
<title>_int_free (1 samples, 0.04%)</title><rect x="943.1" y="309" width="0.6" height="15.0" fill="rgb(226,4,13)" rx="2" ry="2" />
<text  x="946.13" y="319.5" ></text>
</g>
<g >
<title>mark_buffer_dirty (5 samples, 0.22%)</title><rect x="55.9" y="277" width="2.6" height="15.0" fill="rgb(225,184,34)" rx="2" ry="2" />
<text  x="58.89" y="287.5" ></text>
</g>
<g >
<title>rwsem_optimistic_spin (1 samples, 0.04%)</title><rect x="35.3" y="245" width="0.5" height="15.0" fill="rgb(253,1,18)" rx="2" ry="2" />
<text  x="38.32" y="255.5" ></text>
</g>
<g >
<title>change_protection (6 samples, 0.27%)</title><rect x="1104.5" y="437" width="3.2" height="15.0" fill="rgb(230,173,47)" rx="2" ry="2" />
<text  x="1107.55" y="447.5" ></text>
</g>
<g >
<title>ksys_write (71 samples, 3.17%)</title><rect x="24.8" y="453" width="37.4" height="15.0" fill="rgb(211,170,47)" rx="2" ry="2" />
<text  x="27.77" y="463.5" >ksy..</text>
</g>
<g >
<title>__vfs_write (65 samples, 2.91%)</title><rect x="26.9" y="421" width="34.3" height="15.0" fill="rgb(227,188,4)" rx="2" ry="2" />
<text  x="29.88" y="431.5" >__..</text>
</g>
<g >
<title>get_page_from_freelist (10 samples, 0.45%)</title><rect x="1130.4" y="373" width="5.3" height="15.0" fill="rgb(206,12,33)" rx="2" ry="2" />
<text  x="1133.39" y="383.5" ></text>
</g>
<g >
<title>__strchrnul_avx2 (1 samples, 0.04%)</title><rect x="1079.8" y="469" width="0.5" height="15.0" fill="rgb(226,30,11)" rx="2" ry="2" />
<text  x="1082.75" y="479.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (1 samples, 0.04%)</title><rect x="1183.1" y="341" width="0.6" height="15.0" fill="rgb(235,54,20)" rx="2" ry="2" />
<text  x="1186.14" y="351.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.18%)</title><rect x="1187.9" y="517" width="2.1" height="15.0" fill="rgb(213,66,24)" rx="2" ry="2" />
<text  x="1190.89" y="527.5" ></text>
</g>
<g >
<title>[C2J] (85 samples, 3.80%)</title><rect x="749.0" y="373" width="44.9" height="15.0" fill="rgb(233,36,34)" rx="2" ry="2" />
<text  x="752.02" y="383.5" >[C2J]</text>
</g>
<g >
<title>mem_cgroup_commit_charge (1 samples, 0.04%)</title><rect x="1183.7" y="405" width="0.5" height="15.0" fill="rgb(220,191,20)" rx="2" ry="2" />
<text  x="1186.67" y="415.5" ></text>
</g>
<g >
<title>ext4_release_file (2 samples, 0.09%)</title><rect x="1066.6" y="421" width="1.0" height="15.0" fill="rgb(235,157,3)" rx="2" ry="2" />
<text  x="1069.57" y="431.5" ></text>
</g>
<g >
<title>xas_load (1 samples, 0.04%)</title><rect x="22.1" y="293" width="0.6" height="15.0" fill="rgb(234,132,19)" rx="2" ry="2" />
<text  x="25.13" y="303.5" ></text>
</g>
<g >
<title>rwsem_down_read_slowpath (2 samples, 0.09%)</title><rect x="1166.3" y="437" width="1.0" height="15.0" fill="rgb(254,158,54)" rx="2" ry="2" />
<text  x="1169.26" y="447.5" ></text>
</g>
<g >
<title>mprotect_fixup (19 samples, 0.85%)</title><rect x="1104.0" y="453" width="10.0" height="15.0" fill="rgb(249,86,46)" rx="2" ry="2" />
<text  x="1107.02" y="463.5" ></text>
</g>
<g >
<title>__mempcpy_avx_unaligned_erms (2 samples, 0.09%)</title><rect x="121.3" y="517" width="1.1" height="15.0" fill="rgb(253,65,14)" rx="2" ry="2" />
<text  x="124.30" y="527.5" ></text>
</g>
<g >
<title>__block_commit_write.isra.0 (7 samples, 0.31%)</title><rect x="54.8" y="293" width="3.7" height="15.0" fill="rgb(231,16,6)" rx="2" ry="2" />
<text  x="57.84" y="303.5" ></text>
</g>
<g >
<title>perf_event_exec (4 samples, 0.18%)</title><rect x="1187.9" y="405" width="2.1" height="15.0" fill="rgb(215,42,28)" rx="2" ry="2" />
<text  x="1190.89" y="415.5" ></text>
</g>
<g >
<title>get_futex_key (1 samples, 0.04%)</title><rect x="314.9" y="421" width="0.5" height="15.0" fill="rgb(252,23,11)" rx="2" ry="2" />
<text  x="317.89" y="431.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.04%)</title><rect x="319.6" y="517" width="0.6" height="15.0" fill="rgb(243,113,8)" rx="2" ry="2" />
<text  x="322.64" y="527.5" ></text>
</g>
<g >
<title>ksys_write (1 samples, 0.04%)</title><rect x="62.7" y="469" width="0.6" height="15.0" fill="rgb(214,37,25)" rx="2" ry="2" />
<text  x="65.75" y="479.5" ></text>
</g>
<g >
<title>__x64_sys_mprotect (25 samples, 1.12%)</title><rect x="1101.4" y="485" width="13.2" height="15.0" fill="rgb(215,58,39)" rx="2" ry="2" />
<text  x="1104.38" y="495.5" ></text>
</g>
<g >
<title>add_transaction_credits (4 samples, 0.18%)</title><rect x="30.0" y="277" width="2.2" height="15.0" fill="rgb(213,228,5)" rx="2" ry="2" />
<text  x="33.04" y="287.5" ></text>
</g>
<g >
<title>__x64_sys_futex (10 samples, 0.45%)</title><rect x="313.8" y="469" width="5.3" height="15.0" fill="rgb(252,110,35)" rx="2" ry="2" />
<text  x="316.84" y="479.5" ></text>
</g>
<g >
<title>jbd2_journal_stop (2 samples, 0.09%)</title><rect x="48.5" y="309" width="1.1" height="15.0" fill="rgb(237,125,2)" rx="2" ry="2" />
<text  x="51.51" y="319.5" ></text>
</g>
<g >
<title>do_syscall_64 (10 samples, 0.45%)</title><rect x="313.8" y="485" width="5.3" height="15.0" fill="rgb(229,209,14)" rx="2" ry="2" />
<text  x="316.84" y="495.5" ></text>
</g>
<g >
<title>rmqueue (2 samples, 0.09%)</title><rect x="42.2" y="229" width="1.0" height="15.0" fill="rgb(233,189,40)" rx="2" ry="2" />
<text  x="45.18" y="239.5" ></text>
</g>
<g >
<title>do_user_addr_fault (18 samples, 0.80%)</title><rect x="1129.9" y="469" width="9.5" height="15.0" fill="rgb(207,198,51)" rx="2" ry="2" />
<text  x="1132.87" y="479.5" ></text>
</g>
<g >
<title>_IO_file_write@@GLIBC_2.2.5 (1 samples, 0.04%)</title><rect x="12.6" y="517" width="0.6" height="15.0" fill="rgb(252,209,6)" rx="2" ry="2" />
<text  x="15.64" y="527.5" ></text>
</g>
<g >
<title>dequeue_entity (1 samples, 0.04%)</title><rect x="86.0" y="341" width="0.5" height="15.0" fill="rgb(215,61,38)" rx="2" ry="2" />
<text  x="88.96" y="351.5" ></text>
</g>
<g >
<title>update_curr (1 samples, 0.04%)</title><rect x="86.0" y="325" width="0.5" height="15.0" fill="rgb(208,172,12)" rx="2" ry="2" />
<text  x="88.96" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (5 samples, 0.22%)</title><rect x="1097.7" y="501" width="2.6" height="15.0" fill="rgb(243,67,52)" rx="2" ry="2" />
<text  x="1100.69" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.04%)</title><rect x="1070.8" y="469" width="0.5" height="15.0" fill="rgb(208,145,16)" rx="2" ry="2" />
<text  x="1073.79" y="479.5" ></text>
</g>
<g >
<title>handle_mm_fault (18 samples, 0.80%)</title><rect x="1129.9" y="453" width="9.5" height="15.0" fill="rgb(231,140,28)" rx="2" ry="2" />
<text  x="1132.87" y="463.5" ></text>
</g>
<g >
<title>discard_slab (1 samples, 0.04%)</title><rect x="21.6" y="117" width="0.5" height="15.0" fill="rgb(216,112,3)" rx="2" ry="2" />
<text  x="24.60" y="127.5" ></text>
</g>
<g >
<title>do_page_fault (18 samples, 0.80%)</title><rect x="1129.9" y="501" width="9.5" height="15.0" fill="rgb(216,105,37)" rx="2" ry="2" />
<text  x="1132.87" y="511.5" ></text>
</g>
<g >
<title>__vsprintf_internal (284 samples, 12.70%)</title><rect x="127.6" y="517" width="149.8" height="15.0" fill="rgb(205,8,52)" rx="2" ry="2" />
<text  x="130.63" y="527.5" >__vsprintf_internal</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign (4 samples, 0.18%)</title><rect x="957.4" y="389" width="2.1" height="15.0" fill="rgb(254,50,7)" rx="2" ry="2" />
<text  x="960.38" y="399.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (1 samples, 0.04%)</title><rect x="45.3" y="245" width="0.6" height="15.0" fill="rgb(252,214,45)" rx="2" ry="2" />
<text  x="48.34" y="255.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (2 samples, 0.09%)</title><rect x="1135.7" y="373" width="1.0" height="15.0" fill="rgb(228,61,21)" rx="2" ry="2" />
<text  x="1138.67" y="383.5" ></text>
</g>
<g >
<title>hugepage_vma_check (1 samples, 0.04%)</title><rect x="1112.5" y="421" width="0.5" height="15.0" fill="rgb(253,229,17)" rx="2" ry="2" />
<text  x="1115.46" y="431.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (23 samples, 1.03%)</title><rect x="796.0" y="373" width="12.1" height="15.0" fill="rgb(205,123,42)" rx="2" ry="2" />
<text  x="798.96" y="383.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (2 samples, 0.09%)</title><rect x="748.0" y="325" width="1.0" height="15.0" fill="rgb(249,109,26)" rx="2" ry="2" />
<text  x="750.96" y="335.5" ></text>
</g>
<g >
<title>__libc_read (33 samples, 1.48%)</title><rect x="67.0" y="517" width="17.4" height="15.0" fill="rgb(232,70,24)" rx="2" ry="2" />
<text  x="69.97" y="527.5" ></text>
</g>
<g >
<title>do_exit (11 samples, 0.49%)</title><rect x="1140.4" y="469" width="5.8" height="15.0" fill="rgb(214,171,45)" rx="2" ry="2" />
<text  x="1143.42" y="479.5" ></text>
</g>
<g >
<title>__pagevec_release (1 samples, 0.04%)</title><rect x="19.0" y="309" width="0.5" height="15.0" fill="rgb(249,154,33)" rx="2" ry="2" />
<text  x="21.97" y="319.5" ></text>
</g>
<g >
<title>page_fault (19 samples, 0.85%)</title><rect x="1129.3" y="517" width="10.1" height="15.0" fill="rgb(232,92,34)" rx="2" ry="2" />
<text  x="1132.34" y="527.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.04%)</title><rect x="843.4" y="325" width="0.6" height="15.0" fill="rgb(239,92,52)" rx="2" ry="2" />
<text  x="846.44" y="335.5" ></text>
</g>
<g >
<title>update_process_times (2 samples, 0.09%)</title><rect x="748.0" y="261" width="1.0" height="15.0" fill="rgb(241,223,24)" rx="2" ry="2" />
<text  x="750.96" y="271.5" ></text>
</g>
<g >
<title>__strlen_avx2 (10 samples, 0.45%)</title><rect x="122.4" y="517" width="5.2" height="15.0" fill="rgb(241,97,0)" rx="2" ry="2" />
<text  x="125.36" y="527.5" ></text>
</g>
<g >
<title>_int_free (79 samples, 3.53%)</title><rect x="277.4" y="517" width="41.7" height="15.0" fill="rgb(253,96,0)" rx="2" ry="2" />
<text  x="280.44" y="527.5" >_in..</text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (5 samples, 0.22%)</title><rect x="953.7" y="389" width="2.6" height="15.0" fill="rgb(215,1,43)" rx="2" ry="2" />
<text  x="956.68" y="399.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (2 samples, 0.09%)</title><rect x="1184.2" y="405" width="1.1" height="15.0" fill="rgb(233,136,13)" rx="2" ry="2" />
<text  x="1187.20" y="415.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.04%)</title><rect x="32.7" y="309" width="0.5" height="15.0" fill="rgb(209,25,31)" rx="2" ry="2" />
<text  x="35.68" y="319.5" ></text>
</g>
<g >
<title>jbd2_journal_get_write_access (1 samples, 0.04%)</title><rect x="54.3" y="229" width="0.5" height="15.0" fill="rgb(249,116,37)" rx="2" ry="2" />
<text  x="57.31" y="239.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.49%)</title><rect x="85.4" y="501" width="5.8" height="15.0" fill="rgb(217,193,6)" rx="2" ry="2" />
<text  x="88.43" y="511.5" ></text>
</g>
<g >
<title>page_fault (2 samples, 0.09%)</title><rect x="1098.7" y="485" width="1.1" height="15.0" fill="rgb(219,50,7)" rx="2" ry="2" />
<text  x="1101.74" y="495.5" ></text>
</g>
<g >
<title>perf_iterate_ctx (6 samples, 0.27%)</title><rect x="1108.2" y="405" width="3.2" height="15.0" fill="rgb(240,24,43)" rx="2" ry="2" />
<text  x="1111.24" y="415.5" ></text>
</g>
<g >
<title>setup_new_exec (4 samples, 0.18%)</title><rect x="1187.9" y="421" width="2.1" height="15.0" fill="rgb(207,41,1)" rx="2" ry="2" />
<text  x="1190.89" y="431.5" ></text>
</g>
<g >
<title>add_to_page_cache_lru (9 samples, 0.40%)</title><rect x="43.8" y="293" width="4.7" height="15.0" fill="rgb(252,41,24)" rx="2" ry="2" />
<text  x="46.76" y="303.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (2 samples, 0.09%)</title><rect x="47.5" y="245" width="1.0" height="15.0" fill="rgb(237,34,45)" rx="2" ry="2" />
<text  x="50.45" y="255.5" ></text>
</g>
<g >
<title>perf_event_mmap (7 samples, 0.31%)</title><rect x="1107.7" y="437" width="3.7" height="15.0" fill="rgb(243,170,30)" rx="2" ry="2" />
<text  x="1110.71" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (49 samples, 2.19%)</title><rect x="321.2" y="517" width="25.9" height="15.0" fill="rgb(242,164,24)" rx="2" ry="2" />
<text  x="324.22" y="527.5" >s..</text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (57 samples, 2.55%)</title><rect x="91.2" y="517" width="30.1" height="15.0" fill="rgb(240,134,45)" rx="2" ry="2" />
<text  x="94.23" y="527.5" >__..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::c_str (1 samples, 0.04%)</title><rect x="1096.6" y="485" width="0.6" height="15.0" fill="rgb(245,143,23)" rx="2" ry="2" />
<text  x="1099.63" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (2 samples, 0.09%)</title><rect x="820.8" y="373" width="1.0" height="15.0" fill="rgb(211,223,24)" rx="2" ry="2" />
<text  x="823.76" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (3 samples, 0.13%)</title><rect x="943.7" y="309" width="1.5" height="15.0" fill="rgb(210,181,44)" rx="2" ry="2" />
<text  x="946.66" y="319.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (4 samples, 0.18%)</title><rect x="1136.7" y="405" width="2.1" height="15.0" fill="rgb(224,209,18)" rx="2" ry="2" />
<text  x="1139.72" y="415.5" ></text>
</g>
<g >
<title>create_empty_buffers (1 samples, 0.04%)</title><rect x="33.2" y="309" width="0.5" height="15.0" fill="rgb(228,149,40)" rx="2" ry="2" />
<text  x="36.21" y="319.5" ></text>
</g>
<g >
<title>error_entry (1 samples, 0.04%)</title><rect x="1128.8" y="517" width="0.5" height="15.0" fill="rgb(232,32,11)" rx="2" ry="2" />
<text  x="1131.81" y="527.5" ></text>
</g>
<g >
<title>x86_pmu_enable (20 samples, 0.89%)</title><rect x="72.2" y="245" width="10.6" height="15.0" fill="rgb(210,7,28)" rx="2" ry="2" />
<text  x="75.24" y="255.5" ></text>
</g>
<g >
<title>apparmor_file_permission (1 samples, 0.04%)</title><rect x="61.7" y="389" width="0.5" height="15.0" fill="rgb(235,166,28)" rx="2" ry="2" />
<text  x="64.69" y="399.5" ></text>
</g>
<g >
<title>finish_task_switch (20 samples, 0.89%)</title><rect x="72.2" y="293" width="10.6" height="15.0" fill="rgb(243,223,3)" rx="2" ry="2" />
<text  x="75.24" y="303.5" ></text>
</g>
<g >
<title>CSV2JSON::CSV2JSON (57 samples, 2.55%)</title><rect x="1067.6" y="501" width="30.1" height="15.0" fill="rgb(205,6,19)" rx="2" ry="2" />
<text  x="1070.62" y="511.5" >CS..</text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.04%)</title><rect x="1102.4" y="437" width="0.6" height="15.0" fill="rgb(216,153,30)" rx="2" ry="2" />
<text  x="1105.44" y="447.5" ></text>
</g>
<g >
<title>lru_cache_add (2 samples, 0.09%)</title><rect x="47.5" y="277" width="1.0" height="15.0" fill="rgb(222,109,51)" rx="2" ry="2" />
<text  x="50.45" y="287.5" ></text>
</g>
<g >
<title>std::queue&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::deque&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::pop (14 samples, 0.63%)</title><rect x="940.5" y="373" width="7.4" height="15.0" fill="rgb(217,150,42)" rx="2" ry="2" />
<text  x="943.50" y="383.5" ></text>
</g>
<g >
<title>get_task_policy.part.0 (1 samples, 0.04%)</title><rect x="1180.5" y="389" width="0.5" height="15.0" fill="rgb(232,62,47)" rx="2" ry="2" />
<text  x="1183.51" y="399.5" ></text>
</g>
<g >
<title>path_openat (8 samples, 0.36%)</title><rect x="18.4" y="421" width="4.3" height="15.0" fill="rgb(224,220,0)" rx="2" ry="2" />
<text  x="21.44" y="431.5" ></text>
</g>
<g >
<title>alloc_pages_vma (10 samples, 0.45%)</title><rect x="1130.4" y="405" width="5.3" height="15.0" fill="rgb(214,154,50)" rx="2" ry="2" />
<text  x="1133.39" y="415.5" ></text>
</g>
<g >
<title>_get_random_bytes (1 samples, 0.04%)</title><rect x="319.1" y="405" width="0.5" height="15.0" fill="rgb(252,128,45)" rx="2" ry="2" />
<text  x="322.11" y="415.5" ></text>
</g>
<g >
<title>std::deque&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::push_back (9 samples, 0.40%)</title><rect x="1071.8" y="453" width="4.8" height="15.0" fill="rgb(245,180,22)" rx="2" ry="2" />
<text  x="1074.84" y="463.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (5 samples, 0.22%)</title><rect x="1181.0" y="373" width="2.7" height="15.0" fill="rgb(209,86,1)" rx="2" ry="2" />
<text  x="1184.03" y="383.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (9 samples, 0.40%)</title><rect x="50.1" y="309" width="4.7" height="15.0" fill="rgb(252,59,39)" rx="2" ry="2" />
<text  x="53.09" y="319.5" ></text>
</g>
<g >
<title>ext4_mpage_readpages (1 samples, 0.04%)</title><rect x="83.3" y="261" width="0.5" height="15.0" fill="rgb(248,38,16)" rx="2" ry="2" />
<text  x="86.32" y="271.5" ></text>
</g>
<g >
<title>__do_page_fault (39 samples, 1.74%)</title><rect x="1165.7" y="485" width="20.6" height="15.0" fill="rgb(234,171,42)" rx="2" ry="2" />
<text  x="1168.74" y="495.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.18%)</title><rect x="1187.9" y="533" width="2.1" height="15.0" fill="rgb(250,80,12)" rx="2" ry="2" />
<text  x="1190.89" y="543.5" ></text>
</g>
<g >
<title>rwsem_spin_on_owner (1 samples, 0.04%)</title><rect x="35.3" y="229" width="0.5" height="15.0" fill="rgb(248,205,20)" rx="2" ry="2" />
<text  x="38.32" y="239.5" ></text>
</g>
<g >
<title>alloc_pages_vma (15 samples, 0.67%)</title><rect x="1173.1" y="405" width="7.9" height="15.0" fill="rgb(254,190,12)" rx="2" ry="2" />
<text  x="1176.12" y="415.5" ></text>
</g>
<g >
<title>__GI___libc_write (81 samples, 3.62%)</title><rect x="22.7" y="517" width="42.7" height="15.0" fill="rgb(234,181,10)" rx="2" ry="2" />
<text  x="25.66" y="527.5" >__GI..</text>
</g>
<g >
<title>mem_cgroup_try_charge (2 samples, 0.09%)</title><rect x="1184.2" y="389" width="1.1" height="15.0" fill="rgb(229,119,4)" rx="2" ry="2" />
<text  x="1187.20" y="399.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.04%)</title><rect x="35.8" y="261" width="0.6" height="15.0" fill="rgb(245,118,32)" rx="2" ry="2" />
<text  x="38.85" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (9 samples, 0.40%)</title><rect x="347.1" y="517" width="4.7" height="15.0" fill="rgb(243,204,17)" rx="2" ry="2" />
<text  x="350.07" y="527.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (20 samples, 0.89%)</title><rect x="72.2" y="277" width="10.6" height="15.0" fill="rgb(222,131,51)" rx="2" ry="2" />
<text  x="75.24" y="287.5" ></text>
</g>
<g >
<title>crc32c_pcl_intel_update (1 samples, 0.04%)</title><rect x="53.3" y="181" width="0.5" height="15.0" fill="rgb(225,189,34)" rx="2" ry="2" />
<text  x="56.25" y="191.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.04%)</title><rect x="1099.3" y="357" width="0.5" height="15.0" fill="rgb(238,183,0)" rx="2" ry="2" />
<text  x="1102.27" y="367.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (8 samples, 0.36%)</title><rect x="86.5" y="309" width="4.2" height="15.0" fill="rgb(212,127,3)" rx="2" ry="2" />
<text  x="89.49" y="319.5" ></text>
</g>
<g >
<title>__strlen_avx2 (16 samples, 0.72%)</title><rect x="1080.3" y="469" width="8.4" height="15.0" fill="rgb(225,182,3)" rx="2" ry="2" />
<text  x="1083.28" y="479.5" ></text>
</g>
<g >
<title>std::queue&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::deque&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::front (7 samples, 0.31%)</title><rect x="936.8" y="373" width="3.7" height="15.0" fill="rgb(240,189,19)" rx="2" ry="2" />
<text  x="939.80" y="383.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="1099.8" y="485" width="0.5" height="15.0" fill="rgb(243,79,45)" rx="2" ry="2" />
<text  x="1102.80" y="495.5" ></text>
</g>
<g >
<title>__x64_sys_execve (1 samples, 0.04%)</title><rect x="319.1" y="485" width="0.5" height="15.0" fill="rgb(253,202,27)" rx="2" ry="2" />
<text  x="322.11" y="495.5" ></text>
</g>
<g >
<title>_IO_default_xsputn (39 samples, 1.74%)</title><rect x="129.7" y="501" width="20.6" height="15.0" fill="rgb(236,143,51)" rx="2" ry="2" />
<text  x="132.74" y="511.5" ></text>
</g>
<g >
<title>vfs_read (33 samples, 1.48%)</title><rect x="67.0" y="437" width="17.4" height="15.0" fill="rgb(215,57,40)" rx="2" ry="2" />
<text  x="69.97" y="447.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void  (1,163 samples, 51.99%)</title><rect x="359.7" y="437" width="613.5" height="15.0" fill="rgb(234,141,34)" rx="2" ry="2" />
<text  x="362.73" y="447.5" >std::thread::_Invoker&lt;std::tuple&lt;void </text>
</g>
<g >
<title>account_page_dirtied (1 samples, 0.04%)</title><rect x="58.0" y="245" width="0.5" height="15.0" fill="rgb(237,44,50)" rx="2" ry="2" />
<text  x="61.00" y="255.5" ></text>
</g>
<g >
<title>native_write_msr (8 samples, 0.36%)</title><rect x="86.5" y="293" width="4.2" height="15.0" fill="rgb(252,209,9)" rx="2" ry="2" />
<text  x="89.49" y="303.5" ></text>
</g>
<g >
<title>__close_nocancel (2 samples, 0.09%)</title><rect x="1066.6" y="533" width="1.0" height="15.0" fill="rgb(211,45,8)" rx="2" ry="2" />
<text  x="1069.57" y="543.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator (1 samples, 0.04%)</title><rect x="934.7" y="373" width="0.5" height="15.0" fill="rgb(216,77,42)" rx="2" ry="2" />
<text  x="937.69" y="383.5" ></text>
</g>
<g >
<title>new_sync_read (33 samples, 1.48%)</title><rect x="67.0" y="405" width="17.4" height="15.0" fill="rgb(253,194,0)" rx="2" ry="2" />
<text  x="69.97" y="415.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (11 samples, 0.49%)</title><rect x="37.4" y="261" width="5.8" height="15.0" fill="rgb(220,32,18)" rx="2" ry="2" />
<text  x="40.43" y="271.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.09%)</title><rect x="320.2" y="517" width="1.0" height="15.0" fill="rgb(234,138,33)" rx="2" ry="2" />
<text  x="323.17" y="527.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="1186.3" y="517" width="0.5" height="15.0" fill="rgb(206,113,8)" rx="2" ry="2" />
<text  x="1189.31" y="527.5" ></text>
</g>
<g >
<title>do_syscall_64 (74 samples, 3.31%)</title><rect x="24.2" y="485" width="39.1" height="15.0" fill="rgb(205,37,47)" rx="2" ry="2" />
<text  x="27.24" y="495.5" >do_..</text>
</g>
<g >
<title>do_syscall_64 (11 samples, 0.49%)</title><rect x="85.4" y="485" width="5.8" height="15.0" fill="rgb(243,193,49)" rx="2" ry="2" />
<text  x="88.43" y="495.5" ></text>
</g>
<g >
<title>notify_change (8 samples, 0.36%)</title><rect x="18.4" y="373" width="4.3" height="15.0" fill="rgb(243,108,13)" rx="2" ry="2" />
<text  x="21.44" y="383.5" ></text>
</g>
<g >
<title>finish_task_switch (8 samples, 0.36%)</title><rect x="86.5" y="373" width="4.2" height="15.0" fill="rgb(241,2,26)" rx="2" ry="2" />
<text  x="89.49" y="383.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.09%)</title><rect x="1066.6" y="501" width="1.0" height="15.0" fill="rgb(245,202,14)" rx="2" ry="2" />
<text  x="1069.57" y="511.5" ></text>
</g>
<g >
<title>free_unref_page_list (6 samples, 0.27%)</title><rect x="1142.5" y="309" width="3.2" height="15.0" fill="rgb(253,58,21)" rx="2" ry="2" />
<text  x="1145.53" y="319.5" ></text>
</g>
<g >
<title>__xa_set_mark (2 samples, 0.09%)</title><rect x="56.4" y="245" width="1.1" height="15.0" fill="rgb(207,201,34)" rx="2" ry="2" />
<text  x="59.42" y="255.5" ></text>
</g>
<g >
<title>__GI___libc_open (8 samples, 0.36%)</title><rect x="18.4" y="517" width="4.3" height="15.0" fill="rgb(215,95,14)" rx="2" ry="2" />
<text  x="21.44" y="527.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;&amp;, std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.04%)</title><rect x="1076.1" y="389" width="0.5" height="15.0" fill="rgb(225,223,21)" rx="2" ry="2" />
<text  x="1079.06" y="399.5" ></text>
</g>
<g >
<title>native_write_msr (4 samples, 0.18%)</title><rect x="1187.9" y="325" width="2.1" height="15.0" fill="rgb(236,87,48)" rx="2" ry="2" />
<text  x="1190.89" y="335.5" ></text>
</g>
<g >
<title>std::deque&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_pop_front_aux (4 samples, 0.18%)</title><rect x="945.8" y="341" width="2.1" height="15.0" fill="rgb(251,143,5)" rx="2" ry="2" />
<text  x="948.77" y="351.5" ></text>
</g>
<g >
<title>__x64_sys_write (71 samples, 3.17%)</title><rect x="24.8" y="469" width="37.4" height="15.0" fill="rgb(220,157,9)" rx="2" ry="2" />
<text  x="27.77" y="479.5" >__x..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::length (34 samples, 1.52%)</title><rect x="826.0" y="373" width="18.0" height="15.0" fill="rgb(240,91,41)" rx="2" ry="2" />
<text  x="829.03" y="383.5" ></text>
</g>
<g >
<title>dequeue_task_fair (1 samples, 0.04%)</title><rect x="86.0" y="357" width="0.5" height="15.0" fill="rgb(211,59,22)" rx="2" ry="2" />
<text  x="88.96" y="367.5" ></text>
</g>
<g >
<title>search_binary_handler (1 samples, 0.04%)</title><rect x="319.1" y="453" width="0.5" height="15.0" fill="rgb(233,199,25)" rx="2" ry="2" />
<text  x="322.11" y="463.5" ></text>
</g>
<g >
<title>do_truncate (8 samples, 0.36%)</title><rect x="18.4" y="389" width="4.3" height="15.0" fill="rgb(210,2,32)" rx="2" ry="2" />
<text  x="21.44" y="399.5" ></text>
</g>
<g >
<title>may_expand_vm (1 samples, 0.04%)</title><rect x="1103.5" y="453" width="0.5" height="15.0" fill="rgb(241,46,11)" rx="2" ry="2" />
<text  x="1106.49" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (29 samples, 1.30%)</title><rect x="844.0" y="373" width="15.3" height="15.0" fill="rgb(243,198,2)" rx="2" ry="2" />
<text  x="846.97" y="383.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.18%)</title><rect x="30.0" y="149" width="2.2" height="15.0" fill="rgb(234,175,5)" rx="2" ry="2" />
<text  x="33.04" y="159.5" ></text>
</g>
<g >
<title>__free_pages (1 samples, 0.04%)</title><rect x="21.6" y="85" width="0.5" height="15.0" fill="rgb(246,37,40)" rx="2" ry="2" />
<text  x="24.60" y="95.5" ></text>
</g>
<g >
<title>__pagevec_lru_add_fn (2 samples, 0.09%)</title><rect x="47.5" y="229" width="1.0" height="15.0" fill="rgb(251,113,40)" rx="2" ry="2" />
<text  x="50.45" y="239.5" ></text>
</g>
<g >
<title>__page_cache_alloc (12 samples, 0.54%)</title><rect x="37.4" y="293" width="6.4" height="15.0" fill="rgb(218,184,8)" rx="2" ry="2" />
<text  x="40.43" y="303.5" ></text>
</g>
<g >
<title>wake_up_q (6 samples, 0.27%)</title><rect x="315.4" y="421" width="3.2" height="15.0" fill="rgb(228,112,19)" rx="2" ry="2" />
<text  x="318.42" y="431.5" ></text>
</g>
<g >
<title>mmput (11 samples, 0.49%)</title><rect x="1140.4" y="453" width="5.8" height="15.0" fill="rgb(219,8,51)" rx="2" ry="2" />
<text  x="1143.42" y="463.5" ></text>
</g>
<g >
<title>__strchrnul_avx2 (61 samples, 2.73%)</title><rect x="150.3" y="501" width="32.2" height="15.0" fill="rgb(235,90,9)" rx="2" ry="2" />
<text  x="153.31" y="511.5" >__..</text>
</g>
<g >
<title>x86_pmu_enable (8 samples, 0.36%)</title><rect x="86.5" y="325" width="4.2" height="15.0" fill="rgb(225,214,3)" rx="2" ry="2" />
<text  x="89.49" y="335.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.04%)</title><rect x="85.4" y="421" width="0.6" height="15.0" fill="rgb(249,140,10)" rx="2" ry="2" />
<text  x="88.43" y="431.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.04%)</title><rect x="953.2" y="389" width="0.5" height="15.0" fill="rgb(208,68,2)" rx="2" ry="2" />
<text  x="956.16" y="399.5" ></text>
</g>
<g >
<title>exit_mmap (11 samples, 0.49%)</title><rect x="1140.4" y="437" width="5.8" height="15.0" fill="rgb(206,201,19)" rx="2" ry="2" />
<text  x="1143.42" y="447.5" ></text>
</g>
<g >
<title>zap_pte_range.isra.0 (11 samples, 0.49%)</title><rect x="1140.4" y="373" width="5.8" height="15.0" fill="rgb(252,111,44)" rx="2" ry="2" />
<text  x="1143.42" y="383.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (10 samples, 0.45%)</title><rect x="1130.4" y="389" width="5.3" height="15.0" fill="rgb(241,187,7)" rx="2" ry="2" />
<text  x="1133.39" y="399.5" ></text>
</g>
<g >
<title>__vfs_read (33 samples, 1.48%)</title><rect x="67.0" y="421" width="17.4" height="15.0" fill="rgb(222,204,49)" rx="2" ry="2" />
<text  x="69.97" y="431.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.04%)</title><rect x="34.3" y="277" width="0.5" height="15.0" fill="rgb(206,205,29)" rx="2" ry="2" />
<text  x="37.26" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.04%)</title><rect x="1074.0" y="389" width="0.5" height="15.0" fill="rgb(238,52,43)" rx="2" ry="2" />
<text  x="1076.95" y="399.5" ></text>
</g>
<g >
<title>prep_new_page (2 samples, 0.09%)</title><rect x="1134.6" y="357" width="1.1" height="15.0" fill="rgb(216,23,51)" rx="2" ry="2" />
<text  x="1137.61" y="367.5" ></text>
</g>
<g >
<title>activate_task (2 samples, 0.09%)</title><rect x="317.5" y="373" width="1.1" height="15.0" fill="rgb(217,103,1)" rx="2" ry="2" />
<text  x="320.53" y="383.5" ></text>
</g>
<g >
<title>_IO_do_write@@GLIBC_2.2.5 (1 samples, 0.04%)</title><rect x="1066.0" y="533" width="0.6" height="15.0" fill="rgb(236,194,32)" rx="2" ry="2" />
<text  x="1069.04" y="543.5" ></text>
</g>
<g >
<title>do_syscall_64 (11 samples, 0.49%)</title><rect x="1140.4" y="517" width="5.8" height="15.0" fill="rgb(220,125,9)" rx="2" ry="2" />
<text  x="1143.42" y="527.5" ></text>
</g>
<g >
<title>std::deque&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::pop_front (14 samples, 0.63%)</title><rect x="940.5" y="357" width="7.4" height="15.0" fill="rgb(241,100,10)" rx="2" ry="2" />
<text  x="943.50" y="367.5" ></text>
</g>
<g >
<title>__remove_hrtimer (1 samples, 0.04%)</title><rect x="843.4" y="293" width="0.6" height="15.0" fill="rgb(254,88,10)" rx="2" ry="2" />
<text  x="846.44" y="303.5" ></text>
</g>
<g >
<title>iov_iter_copy_from_user_atomic (3 samples, 0.13%)</title><rect x="59.1" y="341" width="1.5" height="15.0" fill="rgb(215,188,41)" rx="2" ry="2" />
<text  x="62.06" y="351.5" ></text>
</g>
<g >
<title>ext4_do_update_inode (3 samples, 0.13%)</title><rect x="52.2" y="245" width="1.6" height="15.0" fill="rgb(208,219,28)" rx="2" ry="2" />
<text  x="55.20" y="255.5" ></text>
</g>
<g >
<title>crypto_shash_update (2 samples, 0.09%)</title><rect x="52.2" y="213" width="1.1" height="15.0" fill="rgb(248,165,43)" rx="2" ry="2" />
<text  x="55.20" y="223.5" ></text>
</g>
<g >
<title>vma_set_page_prot (2 samples, 0.09%)</title><rect x="1113.0" y="437" width="1.0" height="15.0" fill="rgb(228,175,47)" rx="2" ry="2" />
<text  x="1115.99" y="447.5" ></text>
</g>
<g >
<title>std::deque&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_push_back_aux&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (2 samples, 0.09%)</title><rect x="1075.5" y="421" width="1.1" height="15.0" fill="rgb(205,183,43)" rx="2" ry="2" />
<text  x="1078.53" y="431.5" ></text>
</g>
<g >
<title>[C2J] (1 samples, 0.04%)</title><rect x="1077.6" y="485" width="0.6" height="15.0" fill="rgb(244,82,27)" rx="2" ry="2" />
<text  x="1080.64" y="495.5" ></text>
</g>
<g >
<title>std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::~pair (3 samples, 0.13%)</title><rect x="971.6" y="389" width="1.6" height="15.0" fill="rgb(208,134,4)" rx="2" ry="2" />
<text  x="974.62" y="399.5" ></text>
</g>
<g >
<title>apparmor_file_mprotect (1 samples, 0.04%)</title><rect x="1101.4" y="453" width="0.5" height="15.0" fill="rgb(240,202,23)" rx="2" ry="2" />
<text  x="1104.38" y="463.5" ></text>
</g>
<g >
<title>clear_page_erms (5 samples, 0.22%)</title><rect x="1132.0" y="357" width="2.6" height="15.0" fill="rgb(206,18,47)" rx="2" ry="2" />
<text  x="1134.98" y="367.5" ></text>
</g>
<g >
<title>__do_page_fault (18 samples, 0.80%)</title><rect x="1129.9" y="485" width="9.5" height="15.0" fill="rgb(215,41,5)" rx="2" ry="2" />
<text  x="1132.87" y="495.5" ></text>
</g>
<g >
<title>do_syscall_64 (4 samples, 0.18%)</title><rect x="1187.9" y="501" width="2.1" height="15.0" fill="rgb(246,95,28)" rx="2" ry="2" />
<text  x="1190.89" y="511.5" ></text>
</g>
<g >
<title>ext4_da_reserve_space (1 samples, 0.04%)</title><rect x="35.8" y="277" width="0.6" height="15.0" fill="rgb(208,73,19)" rx="2" ry="2" />
<text  x="38.85" y="287.5" ></text>
</g>
<g >
<title>__mprotect (37 samples, 1.65%)</title><rect x="1100.9" y="533" width="19.5" height="15.0" fill="rgb(207,193,12)" rx="2" ry="2" />
<text  x="1103.85" y="543.5" ></text>
</g>
<g >
<title>__x64_sys_openat (8 samples, 0.36%)</title><rect x="18.4" y="469" width="4.3" height="15.0" fill="rgb(231,50,13)" rx="2" ry="2" />
<text  x="21.44" y="479.5" ></text>
</g>
<g >
<title>free_unref_page_commit (1 samples, 0.04%)</title><rect x="21.6" y="53" width="0.5" height="15.0" fill="rgb(244,64,51)" rx="2" ry="2" />
<text  x="24.60" y="63.5" ></text>
</g>
<g >
<title>__handle_mm_fault (17 samples, 0.76%)</title><rect x="1130.4" y="437" width="9.0" height="15.0" fill="rgb(230,181,25)" rx="2" ry="2" />
<text  x="1133.39" y="447.5" ></text>
</g>
<g >
<title>schedule (9 samples, 0.40%)</title><rect x="86.0" y="405" width="4.7" height="15.0" fill="rgb(246,123,32)" rx="2" ry="2" />
<text  x="88.96" y="415.5" ></text>
</g>
<g >
<title>down_write_killable (3 samples, 0.13%)</title><rect x="1101.9" y="453" width="1.6" height="15.0" fill="rgb(252,209,9)" rx="2" ry="2" />
<text  x="1104.91" y="463.5" ></text>
</g>
<g >
<title>get_task_policy.part.0 (1 samples, 0.04%)</title><rect x="43.2" y="277" width="0.6" height="15.0" fill="rgb(212,89,21)" rx="2" ry="2" />
<text  x="46.23" y="287.5" ></text>
</g>
<g >
<title>__add_to_page_cache_locked (5 samples, 0.22%)</title><rect x="44.3" y="277" width="2.6" height="15.0" fill="rgb(206,43,45)" rx="2" ry="2" />
<text  x="47.29" y="287.5" ></text>
</g>
<g >
<title>std::queue&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::deque&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::empty (2 samples, 0.09%)</title><rect x="935.7" y="373" width="1.1" height="15.0" fill="rgb(226,25,28)" rx="2" ry="2" />
<text  x="938.75" y="383.5" ></text>
</g>
<g >
<title>load_elf_binary (1 samples, 0.04%)</title><rect x="319.1" y="437" width="0.5" height="15.0" fill="rgb(236,179,35)" rx="2" ry="2" />
<text  x="322.11" y="447.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.0 (4 samples, 0.18%)</title><rect x="30.0" y="181" width="2.2" height="15.0" fill="rgb(214,55,22)" rx="2" ry="2" />
<text  x="33.04" y="191.5" ></text>
</g>
<g >
<title>__add_to_page_cache_locked (1 samples, 0.04%)</title><rect x="83.3" y="229" width="0.5" height="15.0" fill="rgb(218,150,46)" rx="2" ry="2" />
<text  x="86.32" y="239.5" ></text>
</g>
<g >
<title>add_to_page_cache_lru (1 samples, 0.04%)</title><rect x="83.3" y="245" width="0.5" height="15.0" fill="rgb(251,31,6)" rx="2" ry="2" />
<text  x="86.32" y="255.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="319.1" y="517" width="0.5" height="15.0" fill="rgb(234,71,16)" rx="2" ry="2" />
<text  x="322.11" y="527.5" ></text>
</g>
<g >
<title>__ext4_get_inode_loc (1 samples, 0.04%)</title><rect x="53.8" y="245" width="0.5" height="15.0" fill="rgb(228,186,2)" rx="2" ry="2" />
<text  x="56.78" y="255.5" ></text>
</g>
<g >
<title>_int_malloc (38 samples, 1.70%)</title><rect x="1120.4" y="533" width="20.0" height="15.0" fill="rgb(242,222,41)" rx="2" ry="2" />
<text  x="1123.37" y="543.5" ></text>
</g>
<g >
<title>_IO_file_xsputn@@GLIBC_2.2.5 (3 samples, 0.13%)</title><rect x="1078.2" y="469" width="1.6" height="15.0" fill="rgb(213,125,21)" rx="2" ry="2" />
<text  x="1081.17" y="479.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.04%)</title><rect x="1099.3" y="341" width="0.5" height="15.0" fill="rgb(216,195,39)" rx="2" ry="2" />
<text  x="1102.27" y="351.5" ></text>
</g>
<g >
<title>ext4_journal_check_start (1 samples, 0.04%)</title><rect x="51.1" y="261" width="0.6" height="15.0" fill="rgb(242,71,33)" rx="2" ry="2" />
<text  x="54.14" y="271.5" ></text>
</g>
<g >
<title>rmqueue (5 samples, 0.22%)</title><rect x="1177.3" y="357" width="2.7" height="15.0" fill="rgb(224,17,33)" rx="2" ry="2" />
<text  x="1180.34" y="367.5" ></text>
</g>
<g >
<title>ktime_get_update_offsets_now (1 samples, 0.04%)</title><rect x="276.9" y="437" width="0.5" height="15.0" fill="rgb(214,180,30)" rx="2" ry="2" />
<text  x="279.91" y="447.5" ></text>
</g>
<g >
<title>change_protection_range (6 samples, 0.27%)</title><rect x="1104.5" y="421" width="3.2" height="15.0" fill="rgb(244,120,9)" rx="2" ry="2" />
<text  x="1107.55" y="431.5" ></text>
</g>
<g >
<title>try_charge (2 samples, 0.09%)</title><rect x="45.9" y="245" width="1.0" height="15.0" fill="rgb(210,64,18)" rx="2" ry="2" />
<text  x="48.87" y="255.5" ></text>
</g>
<g >
<title>copy_page_to_iter (9 samples, 0.40%)</title><rect x="67.5" y="341" width="4.7" height="15.0" fill="rgb(214,72,24)" rx="2" ry="2" />
<text  x="70.50" y="351.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void  (1,163 samples, 51.99%)</title><rect x="359.7" y="517" width="613.5" height="15.0" fill="rgb(210,119,48)" rx="2" ry="2" />
<text  x="362.73" y="527.5" >std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void </text>
</g>
<g >
<title>__do_execve_file.isra.0 (1 samples, 0.04%)</title><rect x="319.1" y="469" width="0.5" height="15.0" fill="rgb(249,188,1)" rx="2" ry="2" />
<text  x="322.11" y="479.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (62 samples, 2.77%)</title><rect x="27.9" y="389" width="32.7" height="15.0" fill="rgb(249,52,39)" rx="2" ry="2" />
<text  x="30.93" y="399.5" >ex..</text>
</g>
<g >
<title>free_buffer_head (3 samples, 0.13%)</title><rect x="20.5" y="197" width="1.6" height="15.0" fill="rgb(214,226,28)" rx="2" ry="2" />
<text  x="23.55" y="207.5" ></text>
</g>
<g >
<title>rb_next (1 samples, 0.04%)</title><rect x="843.4" y="277" width="0.6" height="15.0" fill="rgb(238,124,54)" rx="2" ry="2" />
<text  x="846.44" y="287.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.04%)</title><rect x="748.5" y="245" width="0.5" height="15.0" fill="rgb(217,121,7)" rx="2" ry="2" />
<text  x="751.49" y="255.5" ></text>
</g>
<g >
<title>block_invalidatepage (3 samples, 0.13%)</title><rect x="20.5" y="277" width="1.6" height="15.0" fill="rgb(230,6,9)" rx="2" ry="2" />
<text  x="23.55" y="287.5" ></text>
</g>
<g >
<title>schedule (4 samples, 0.18%)</title><rect x="30.0" y="245" width="2.2" height="15.0" fill="rgb(225,196,41)" rx="2" ry="2" />
<text  x="33.04" y="255.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="11.1" y="517" width="0.5" height="15.0" fill="rgb(223,40,13)" rx="2" ry="2" />
<text  x="14.05" y="527.5" ></text>
</g>
<g >
<title>__lll_lock_wait_private (13 samples, 0.58%)</title><rect x="84.4" y="517" width="6.8" height="15.0" fill="rgb(235,19,31)" rx="2" ry="2" />
<text  x="87.38" y="527.5" ></text>
</g>
<g >
<title>__do_execve_file.isra.0 (4 samples, 0.18%)</title><rect x="1187.9" y="469" width="2.1" height="15.0" fill="rgb(218,227,41)" rx="2" ry="2" />
<text  x="1190.89" y="479.5" ></text>
</g>
<g >
<title>ext4_inode_csum.isra.0 (1 samples, 0.04%)</title><rect x="53.3" y="213" width="0.5" height="15.0" fill="rgb(205,71,40)" rx="2" ry="2" />
<text  x="56.25" y="223.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (1 samples, 0.04%)</title><rect x="1184.7" y="373" width="0.6" height="15.0" fill="rgb(213,138,22)" rx="2" ry="2" />
<text  x="1187.73" y="383.5" ></text>
</g>
<g >
<title>do_syscall_64 (33 samples, 1.48%)</title><rect x="67.0" y="485" width="17.4" height="15.0" fill="rgb(229,29,37)" rx="2" ry="2" />
<text  x="69.97" y="495.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.04%)</title><rect x="38.5" y="229" width="0.5" height="15.0" fill="rgb(223,67,10)" rx="2" ry="2" />
<text  x="41.48" y="239.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (4 samples, 0.18%)</title><rect x="127.6" y="501" width="2.1" height="15.0" fill="rgb(223,220,16)" rx="2" ry="2" />
<text  x="130.63" y="511.5" ></text>
</g>
<g >
<title>__x64_sys_execve (4 samples, 0.18%)</title><rect x="1187.9" y="485" width="2.1" height="15.0" fill="rgb(207,164,15)" rx="2" ry="2" />
<text  x="1190.89" y="495.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (2 samples, 0.09%)</title><rect x="748.0" y="341" width="1.0" height="15.0" fill="rgb(229,8,35)" rx="2" ry="2" />
<text  x="750.96" y="351.5" ></text>
</g>
<g >
<title>__ext4_journal_get_write_access (1 samples, 0.04%)</title><rect x="54.3" y="245" width="0.5" height="15.0" fill="rgb(215,109,2)" rx="2" ry="2" />
<text  x="57.31" y="255.5" ></text>
</g>
<g >
<title>read_pages (1 samples, 0.04%)</title><rect x="83.3" y="293" width="0.5" height="15.0" fill="rgb(242,59,36)" rx="2" ry="2" />
<text  x="86.32" y="303.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void  (1,163 samples, 51.99%)</title><rect x="359.7" y="421" width="613.5" height="15.0" fill="rgb(219,40,40)" rx="2" ry="2" />
<text  x="362.73" y="431.5" >std::__invoke&lt;void </text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (27 samples, 1.21%)</title><rect x="1100.9" y="517" width="14.2" height="15.0" fill="rgb(236,0,49)" rx="2" ry="2" />
<text  x="1103.85" y="527.5" ></text>
</g>
<g >
<title>_IO_no_init (3 samples, 0.13%)</title><rect x="14.7" y="517" width="1.6" height="15.0" fill="rgb(213,135,53)" rx="2" ry="2" />
<text  x="17.75" y="527.5" ></text>
</g>
<g >
<title>account_process_tick (1 samples, 0.04%)</title><rect x="748.0" y="245" width="0.5" height="15.0" fill="rgb(231,192,32)" rx="2" ry="2" />
<text  x="750.96" y="255.5" ></text>
</g>
<g >
<title>rwsem_down_read_slowpath (1 samples, 0.04%)</title><rect x="35.3" y="261" width="0.5" height="15.0" fill="rgb(231,33,8)" rx="2" ry="2" />
<text  x="38.32" y="271.5" ></text>
</g>
<g >
<title>do_writepages (2 samples, 0.09%)</title><rect x="1066.6" y="357" width="1.0" height="15.0" fill="rgb(245,5,51)" rx="2" ry="2" />
<text  x="1069.57" y="367.5" ></text>
</g>
<g >
<title>ext4_invalidatepage (4 samples, 0.18%)</title><rect x="20.0" y="293" width="2.1" height="15.0" fill="rgb(233,9,16)" rx="2" ry="2" />
<text  x="23.02" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.04%)</title><rect x="820.2" y="373" width="0.6" height="15.0" fill="rgb(205,44,49)" rx="2" ry="2" />
<text  x="823.23" y="383.5" ></text>
</g>
<g >
<title>_IO_default_xsputn (1 samples, 0.04%)</title><rect x="11.1" y="501" width="0.5" height="15.0" fill="rgb(210,55,7)" rx="2" ry="2" />
<text  x="14.05" y="511.5" ></text>
</g>
<g >
<title>mpage_map_and_submit_extent (1 samples, 0.04%)</title><rect x="1066.6" y="325" width="0.5" height="15.0" fill="rgb(231,211,40)" rx="2" ry="2" />
<text  x="1069.57" y="335.5" ></text>
</g>
<g >
<title>__enqueue_entity (1 samples, 0.04%)</title><rect x="318.1" y="341" width="0.5" height="15.0" fill="rgb(206,161,30)" rx="2" ry="2" />
<text  x="321.06" y="351.5" ></text>
</g>
<g >
<title>crypto_shash_update (1 samples, 0.04%)</title><rect x="53.3" y="197" width="0.5" height="15.0" fill="rgb(229,199,32)" rx="2" ry="2" />
<text  x="56.25" y="207.5" ></text>
</g>
<g >
<title>ondemand_readahead (1 samples, 0.04%)</title><rect x="83.3" y="325" width="0.5" height="15.0" fill="rgb(239,157,47)" rx="2" ry="2" />
<text  x="86.32" y="335.5" ></text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.04%)</title><rect x="49.6" y="309" width="0.5" height="15.0" fill="rgb(208,109,26)" rx="2" ry="2" />
<text  x="52.56" y="319.5" ></text>
</g>
<g >
<title>main (62 samples, 2.77%)</title><rect x="1067.6" y="517" width="32.7" height="15.0" fill="rgb(230,107,4)" rx="2" ry="2" />
<text  x="1070.62" y="527.5" >main</text>
</g>
<g >
<title>__slab_free (2 samples, 0.09%)</title><rect x="21.1" y="165" width="1.0" height="15.0" fill="rgb(241,138,39)" rx="2" ry="2" />
<text  x="24.08" y="175.5" ></text>
</g>
<g >
<title>alloc_pages_vma (1 samples, 0.04%)</title><rect x="1099.3" y="373" width="0.5" height="15.0" fill="rgb(229,189,5)" rx="2" ry="2" />
<text  x="1102.27" y="383.5" ></text>
</g>
<g >
<title>__do_page_cache_readahead (1 samples, 0.04%)</title><rect x="83.3" y="309" width="0.5" height="15.0" fill="rgb(232,214,26)" rx="2" ry="2" />
<text  x="86.32" y="319.5" ></text>
</g>
<g >
<title>wait_transaction_locked (4 samples, 0.18%)</title><rect x="30.0" y="261" width="2.2" height="15.0" fill="rgb(247,204,48)" rx="2" ry="2" />
<text  x="33.04" y="271.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.04%)</title><rect x="1173.6" y="357" width="0.6" height="15.0" fill="rgb(232,15,27)" rx="2" ry="2" />
<text  x="1176.65" y="367.5" ></text>
</g>
<g >
<title>do_futex (9 samples, 0.40%)</title><rect x="314.4" y="453" width="4.7" height="15.0" fill="rgb(226,204,16)" rx="2" ry="2" />
<text  x="317.36" y="463.5" ></text>
</g>
<g >
<title>native_write_msr (20 samples, 0.89%)</title><rect x="72.2" y="213" width="10.6" height="15.0" fill="rgb(246,11,52)" rx="2" ry="2" />
<text  x="75.24" y="223.5" ></text>
</g>
<g >
<title>rmqueue (1 samples, 0.04%)</title><rect x="38.5" y="213" width="0.5" height="15.0" fill="rgb(217,42,42)" rx="2" ry="2" />
<text  x="41.48" y="223.5" ></text>
</g>
<g >
<title>ext4_da_write_end (1 samples, 0.04%)</title><rect x="28.5" y="357" width="0.5" height="15.0" fill="rgb(251,99,29)" rx="2" ry="2" />
<text  x="31.46" y="367.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (2 samples, 0.09%)</title><rect x="946.8" y="293" width="1.1" height="15.0" fill="rgb(225,28,49)" rx="2" ry="2" />
<text  x="949.83" y="303.5" ></text>
</g>
<g >
<title>get_futex_key (1 samples, 0.04%)</title><rect x="90.7" y="405" width="0.5" height="15.0" fill="rgb(234,7,41)" rx="2" ry="2" />
<text  x="93.71" y="415.5" ></text>
</g>
<g >
<title>do_sys_open (8 samples, 0.36%)</title><rect x="18.4" y="453" width="4.3" height="15.0" fill="rgb(250,61,24)" rx="2" ry="2" />
<text  x="21.44" y="463.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (20 samples, 0.89%)</title><rect x="72.2" y="229" width="10.6" height="15.0" fill="rgb(231,75,8)" rx="2" ry="2" />
<text  x="75.24" y="239.5" ></text>
</g>
<g >
<title>__x64_sys_futex (11 samples, 0.49%)</title><rect x="85.4" y="469" width="5.8" height="15.0" fill="rgb(228,73,47)" rx="2" ry="2" />
<text  x="88.43" y="479.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.04%)</title><rect x="1099.3" y="405" width="0.5" height="15.0" fill="rgb(218,220,52)" rx="2" ry="2" />
<text  x="1102.27" y="415.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (1 samples, 0.04%)</title><rect x="62.2" y="469" width="0.5" height="15.0" fill="rgb(225,213,48)" rx="2" ry="2" />
<text  x="65.22" y="479.5" ></text>
</g>
<g >
<title>unfreeze_partials.isra.0 (1 samples, 0.04%)</title><rect x="21.6" y="133" width="0.5" height="15.0" fill="rgb(234,204,26)" rx="2" ry="2" />
<text  x="24.60" y="143.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (2 samples, 0.09%)</title><rect x="810.2" y="373" width="1.1" height="15.0" fill="rgb(237,110,8)" rx="2" ry="2" />
<text  x="813.21" y="383.5" ></text>
</g>
<g >
<title>__mod_memcg_state (1 samples, 0.04%)</title><rect x="1183.7" y="373" width="0.5" height="15.0" fill="rgb(215,59,21)" rx="2" ry="2" />
<text  x="1186.67" y="383.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (1 samples, 0.04%)</title><rect x="45.3" y="261" width="0.6" height="15.0" fill="rgb(242,137,46)" rx="2" ry="2" />
<text  x="48.34" y="271.5" ></text>
</g>
<g >
<title>rw_verify_area (2 samples, 0.09%)</title><rect x="61.2" y="421" width="1.0" height="15.0" fill="rgb(228,54,8)" rx="2" ry="2" />
<text  x="64.17" y="431.5" ></text>
</g>
<g >
<title>activate_page (1 samples, 0.04%)</title><rect x="82.8" y="325" width="0.5" height="15.0" fill="rgb(252,101,7)" rx="2" ry="2" />
<text  x="85.79" y="335.5" ></text>
</g>
<g >
<title>pmd_devmap_trans_unstable (1 samples, 0.04%)</title><rect x="1138.8" y="421" width="0.6" height="15.0" fill="rgb(251,50,32)" rx="2" ry="2" />
<text  x="1141.83" y="431.5" ></text>
</g>
<g >
<title>generic_file_buffered_read (32 samples, 1.43%)</title><rect x="67.0" y="357" width="16.8" height="15.0" fill="rgb(206,171,32)" rx="2" ry="2" />
<text  x="69.97" y="367.5" ></text>
</g>
<g >
<title>std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair (1 samples, 0.04%)</title><rect x="935.2" y="373" width="0.5" height="15.0" fill="rgb(230,143,50)" rx="2" ry="2" />
<text  x="938.22" y="383.5" ></text>
</g>
<g >
<title>vfs_write (67 samples, 3.00%)</title><rect x="26.9" y="437" width="35.3" height="15.0" fill="rgb(217,175,47)" rx="2" ry="2" />
<text  x="29.88" y="447.5" >vf..</text>
</g>
<g >
<title>up_write (1 samples, 0.04%)</title><rect x="60.6" y="389" width="0.6" height="15.0" fill="rgb(228,152,4)" rx="2" ry="2" />
<text  x="63.64" y="399.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.04%)</title><rect x="1076.1" y="373" width="0.5" height="15.0" fill="rgb(209,86,33)" rx="2" ry="2" />
<text  x="1079.06" y="383.5" ></text>
</g>
<g >
<title>do_syscall_64 (26 samples, 1.16%)</title><rect x="1100.9" y="501" width="13.7" height="15.0" fill="rgb(243,39,47)" rx="2" ry="2" />
<text  x="1103.85" y="511.5" ></text>
</g>
<g >
<title>clear_page_erms (6 samples, 0.27%)</title><rect x="1174.2" y="357" width="3.1" height="15.0" fill="rgb(245,228,30)" rx="2" ry="2" />
<text  x="1177.18" y="367.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void  (1,163 samples, 51.99%)</title><rect x="359.7" y="469" width="613.5" height="15.0" fill="rgb(238,71,11)" rx="2" ry="2" />
<text  x="362.73" y="479.5" >std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void </text>
</g>
<g >
<title>try_to_wake_up (6 samples, 0.27%)</title><rect x="315.4" y="405" width="3.2" height="15.0" fill="rgb(222,9,7)" rx="2" ry="2" />
<text  x="318.42" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::c_str (8 samples, 0.36%)</title><rect x="821.8" y="373" width="4.2" height="15.0" fill="rgb(251,99,40)" rx="2" ry="2" />
<text  x="824.81" y="383.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (4 samples, 0.18%)</title><rect x="30.0" y="197" width="2.2" height="15.0" fill="rgb(215,98,37)" rx="2" ry="2" />
<text  x="33.04" y="207.5" ></text>
</g>
<g >
<title>find_get_entries (1 samples, 0.04%)</title><rect x="19.5" y="293" width="0.5" height="15.0" fill="rgb(222,126,52)" rx="2" ry="2" />
<text  x="22.49" y="303.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (1 samples, 0.04%)</title><rect x="27.9" y="357" width="0.6" height="15.0" fill="rgb(215,23,14)" rx="2" ry="2" />
<text  x="30.93" y="367.5" ></text>
</g>
<g >
<title>release_pages (9 samples, 0.40%)</title><rect x="1141.5" y="325" width="4.7" height="15.0" fill="rgb(243,181,15)" rx="2" ry="2" />
<text  x="1144.47" y="335.5" ></text>
</g>
<g >
<title>__schedule (20 samples, 0.89%)</title><rect x="72.2" y="309" width="10.6" height="15.0" fill="rgb(234,227,16)" rx="2" ry="2" />
<text  x="75.24" y="319.5" ></text>
</g>
<g >
<title>page_cache_async_readahead (1 samples, 0.04%)</title><rect x="83.3" y="341" width="0.5" height="15.0" fill="rgb(243,31,53)" rx="2" ry="2" />
<text  x="86.32" y="351.5" ></text>
</g>
<g >
<title>perf_iterate_sb (7 samples, 0.31%)</title><rect x="1107.7" y="421" width="3.7" height="15.0" fill="rgb(224,158,26)" rx="2" ry="2" />
<text  x="1110.71" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (4 samples, 0.18%)</title><rect x="1073.4" y="405" width="2.1" height="15.0" fill="rgb(240,102,6)" rx="2" ry="2" />
<text  x="1076.42" y="415.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (37 samples, 1.65%)</title><rect x="29.0" y="341" width="19.5" height="15.0" fill="rgb(205,225,35)" rx="2" ry="2" />
<text  x="31.99" y="351.5" ></text>
</g>
<g >
<title>do_syscall_64 (8 samples, 0.36%)</title><rect x="18.4" y="485" width="4.3" height="15.0" fill="rgb(210,154,53)" rx="2" ry="2" />
<text  x="21.44" y="495.5" ></text>
</g>
<g >
<title>std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::~pair (1 samples, 0.04%)</title><rect x="945.2" y="325" width="0.6" height="15.0" fill="rgb(246,115,28)" rx="2" ry="2" />
<text  x="948.24" y="335.5" ></text>
</g>
<g >
<title>mem_cgroup_throttle_swaprate (1 samples, 0.04%)</title><rect x="1136.7" y="389" width="0.6" height="15.0" fill="rgb(209,227,53)" rx="2" ry="2" />
<text  x="1139.72" y="399.5" ></text>
</g>
<g >
<title>__generic_file_write_iter (62 samples, 2.77%)</title><rect x="27.9" y="373" width="32.7" height="15.0" fill="rgb(233,217,51)" rx="2" ry="2" />
<text  x="30.93" y="383.5" >__..</text>
</g>
<g >
<title>[unknown] (1,833 samples, 81.94%)</title><rect x="10.0" y="533" width="966.9" height="15.0" fill="rgb(245,148,25)" rx="2" ry="2" />
<text  x="13.00" y="543.5" >[unknown]</text>
</g>
<g >
<title>native_write_msr (4 samples, 0.18%)</title><rect x="30.0" y="133" width="2.2" height="15.0" fill="rgb(209,44,23)" rx="2" ry="2" />
<text  x="33.04" y="143.5" ></text>
</g>
<g >
<title>release_pages (1 samples, 0.04%)</title><rect x="19.0" y="293" width="0.5" height="15.0" fill="rgb(209,47,32)" rx="2" ry="2" />
<text  x="21.97" y="303.5" ></text>
</g>
<g >
<title>find_get_pages_range (1 samples, 0.04%)</title><rect x="1066.6" y="277" width="0.5" height="15.0" fill="rgb(219,28,22)" rx="2" ry="2" />
<text  x="1069.57" y="287.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.04%)</title><rect x="26.4" y="437" width="0.5" height="15.0" fill="rgb(223,167,36)" rx="2" ry="2" />
<text  x="29.35" y="447.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (4 samples, 0.18%)</title><rect x="793.9" y="373" width="2.1" height="15.0" fill="rgb(222,210,23)" rx="2" ry="2" />
<text  x="796.85" y="383.5" ></text>
</g>
<g >
<title>std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair (2 samples, 0.09%)</title><rect x="1074.5" y="389" width="1.0" height="15.0" fill="rgb(240,39,45)" rx="2" ry="2" />
<text  x="1077.48" y="399.5" ></text>
</g>
<g >
<title>jbd2__journal_start (6 samples, 0.27%)</title><rect x="29.0" y="309" width="3.2" height="15.0" fill="rgb(211,189,24)" rx="2" ry="2" />
<text  x="31.99" y="319.5" ></text>
</g>
<g >
<title>std::queue&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::deque&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::push (9 samples, 0.40%)</title><rect x="1071.8" y="469" width="4.8" height="15.0" fill="rgb(235,99,7)" rx="2" ry="2" />
<text  x="1074.84" y="479.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (75 samples, 3.35%)</title><rect x="24.2" y="501" width="39.6" height="15.0" fill="rgb(231,179,25)" rx="2" ry="2" />
<text  x="27.24" y="511.5" >ent..</text>
</g>
<g >
<title>tick_sched_timer (2 samples, 0.09%)</title><rect x="748.0" y="293" width="1.0" height="15.0" fill="rgb(253,44,46)" rx="2" ry="2" />
<text  x="750.96" y="303.5" ></text>
</g>
<g >
<title>do_anonymous_page (1 samples, 0.04%)</title><rect x="1099.3" y="389" width="0.5" height="15.0" fill="rgb(207,87,45)" rx="2" ry="2" />
<text  x="1102.27" y="399.5" ></text>
</g>
<g >
<title>get_page_from_freelist (12 samples, 0.54%)</title><rect x="1173.6" y="373" width="6.4" height="15.0" fill="rgb(228,86,40)" rx="2" ry="2" />
<text  x="1176.65" y="383.5" ></text>
</g>
<g >
<title>__x64_sys_read (33 samples, 1.48%)</title><rect x="67.0" y="469" width="17.4" height="15.0" fill="rgb(253,132,43)" rx="2" ry="2" />
<text  x="69.97" y="479.5" ></text>
</g>
<g >
<title>block_write_end (7 samples, 0.31%)</title><rect x="54.8" y="309" width="3.7" height="15.0" fill="rgb(254,158,20)" rx="2" ry="2" />
<text  x="57.84" y="319.5" ></text>
</g>
<g >
<title>all (2,237 samples, 100%)</title><rect x="10.0" y="565" width="1180.0" height="15.0" fill="rgb(240,117,20)" rx="2" ry="2" />
<text  x="13.00" y="575.5" ></text>
</g>
<g >
<title>handle_mm_fault (35 samples, 1.56%)</title><rect x="1167.3" y="453" width="18.5" height="15.0" fill="rgb(206,209,51)" rx="2" ry="2" />
<text  x="1170.32" y="463.5" ></text>
</g>
<g >
<title>error_exit (1 samples, 0.04%)</title><rect x="1164.7" y="517" width="0.5" height="15.0" fill="rgb(243,178,27)" rx="2" ry="2" />
<text  x="1167.68" y="527.5" ></text>
</g>
<g >
<title>alloc_buffer_head (1 samples, 0.04%)</title><rect x="33.2" y="277" width="0.5" height="15.0" fill="rgb(223,175,29)" rx="2" ry="2" />
<text  x="36.21" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator[] (110 samples, 4.92%)</title><rect x="859.3" y="373" width="58.0" height="15.0" fill="rgb(252,103,15)" rx="2" ry="2" />
<text  x="862.26" y="383.5" >std::_..</text>
</g>
<g >
<title>ext4_setattr (8 samples, 0.36%)</title><rect x="18.4" y="357" width="4.3" height="15.0" fill="rgb(238,99,54)" rx="2" ry="2" />
<text  x="21.44" y="367.5" ></text>
</g>
<g >
<title>_IO_old_init (3 samples, 0.13%)</title><rect x="16.3" y="517" width="1.6" height="15.0" fill="rgb(241,39,24)" rx="2" ry="2" />
<text  x="19.33" y="527.5" ></text>
</g>
<g >
<title>mem_cgroup_from_task (1 samples, 0.04%)</title><rect x="1185.3" y="437" width="0.5" height="15.0" fill="rgb(208,70,15)" rx="2" ry="2" />
<text  x="1188.25" y="447.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (2 samples, 0.09%)</title><rect x="748.0" y="357" width="1.0" height="15.0" fill="rgb(226,108,5)" rx="2" ry="2" />
<text  x="750.96" y="367.5" ></text>
</g>
<g >
<title>jbd2_journal_try_to_free_buffers (3 samples, 0.13%)</title><rect x="20.5" y="229" width="1.6" height="15.0" fill="rgb(211,56,17)" rx="2" ry="2" />
<text  x="23.55" y="239.5" ></text>
</g>
<g >
<title>page_fault (40 samples, 1.79%)</title><rect x="1165.2" y="517" width="21.1" height="15.0" fill="rgb(209,191,45)" rx="2" ry="2" />
<text  x="1168.21" y="527.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (2 samples, 0.09%)</title><rect x="748.0" y="309" width="1.0" height="15.0" fill="rgb(233,223,29)" rx="2" ry="2" />
<text  x="750.96" y="319.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (14 samples, 0.63%)</title><rect x="1173.1" y="389" width="7.4" height="15.0" fill="rgb(226,224,27)" rx="2" ry="2" />
<text  x="1176.12" y="399.5" ></text>
</g>
<g >
<title>std::getline&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (1 samples, 0.04%)</title><rect x="1097.2" y="485" width="0.5" height="15.0" fill="rgb(248,107,51)" rx="2" ry="2" />
<text  x="1100.16" y="495.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (2 samples, 0.09%)</title><rect x="64.3" y="501" width="1.1" height="15.0" fill="rgb(214,13,12)" rx="2" ry="2" />
<text  x="67.33" y="511.5" ></text>
</g>
<g >
<title>_IO_str_init_static_internal (1 samples, 0.04%)</title><rect x="17.9" y="517" width="0.5" height="15.0" fill="rgb(215,177,6)" rx="2" ry="2" />
<text  x="20.91" y="527.5" ></text>
</g>
<g >
<title>generic_file_read_iter (33 samples, 1.48%)</title><rect x="67.0" y="373" width="17.4" height="15.0" fill="rgb(218,136,31)" rx="2" ry="2" />
<text  x="69.97" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (13 samples, 0.58%)</title><rect x="964.8" y="389" width="6.8" height="15.0" fill="rgb(220,47,13)" rx="2" ry="2" />
<text  x="967.76" y="399.5" ></text>
</g>
<g >
<title>do_mprotect_pkey (25 samples, 1.12%)</title><rect x="1101.4" y="469" width="13.2" height="15.0" fill="rgb(244,118,39)" rx="2" ry="2" />
<text  x="1104.38" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (8 samples, 0.36%)</title><rect x="816.0" y="373" width="4.2" height="15.0" fill="rgb(240,72,10)" rx="2" ry="2" />
<text  x="819.01" y="383.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (1 samples, 0.04%)</title><rect x="1128.3" y="517" width="0.5" height="15.0" fill="rgb(223,192,31)" rx="2" ry="2" />
<text  x="1131.28" y="527.5" ></text>
</g>
<g >
<title>std::deque&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::begin (3 samples, 0.13%)</title><rect x="938.9" y="341" width="1.6" height="15.0" fill="rgb(211,10,14)" rx="2" ry="2" />
<text  x="941.91" y="351.5" ></text>
</g>
<g >
<title>ext4_mark_inode_dirty (6 samples, 0.27%)</title><rect x="51.7" y="277" width="3.1" height="15.0" fill="rgb(253,179,6)" rx="2" ry="2" />
<text  x="54.67" y="287.5" ></text>
</g>
<g >
<title>__getblk_gfp (1 samples, 0.04%)</title><rect x="53.8" y="229" width="0.5" height="15.0" fill="rgb(213,176,6)" rx="2" ry="2" />
<text  x="56.78" y="239.5" ></text>
</g>
<g >
<title>rwsem_spin_on_owner (2 samples, 0.09%)</title><rect x="1166.3" y="405" width="1.0" height="15.0" fill="rgb(243,203,34)" rx="2" ry="2" />
<text  x="1169.26" y="415.5" ></text>
</g>
<g >
<title>CSV2JSON::ThreadingParseDatas (1,115 samples, 49.84%)</title><rect x="359.7" y="389" width="588.2" height="15.0" fill="rgb(245,78,20)" rx="2" ry="2" />
<text  x="362.73" y="399.5" >CSV2JSON::ThreadingParseDatas</text>
</g>
<g >
<title>__lru_cache_add (5 samples, 0.22%)</title><rect x="1181.0" y="389" width="2.7" height="15.0" fill="rgb(236,94,2)" rx="2" ry="2" />
<text  x="1184.03" y="399.5" ></text>
</g>
<g >
<title>search_binary_handler (4 samples, 0.18%)</title><rect x="1187.9" y="453" width="2.1" height="15.0" fill="rgb(253,10,34)" rx="2" ry="2" />
<text  x="1190.89" y="463.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::destroy&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (5 samples, 0.22%)</title><rect x="943.1" y="341" width="2.7" height="15.0" fill="rgb(213,78,24)" rx="2" ry="2" />
<text  x="946.13" y="351.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void  (1,163 samples, 51.99%)</title><rect x="359.7" y="453" width="613.5" height="15.0" fill="rgb(231,59,9)" rx="2" ry="2" />
<text  x="362.73" y="463.5" >std::thread::_Invoker&lt;std::tuple&lt;void </text>
</g>
<g >
<title>operator delete (2 samples, 0.09%)</title><rect x="956.3" y="389" width="1.1" height="15.0" fill="rgb(247,172,51)" rx="2" ry="2" />
<text  x="959.32" y="399.5" ></text>
</g>
<g >
<title>mem_cgroup_page_lruvec (1 samples, 0.04%)</title><rect x="1136.2" y="357" width="0.5" height="15.0" fill="rgb(243,194,36)" rx="2" ry="2" />
<text  x="1139.20" y="367.5" ></text>
</g>
<g >
<title>__ext4_journal_start_sb (6 samples, 0.27%)</title><rect x="29.0" y="325" width="3.2" height="15.0" fill="rgb(229,218,3)" rx="2" ry="2" />
<text  x="31.99" y="335.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (33 samples, 1.48%)</title><rect x="67.0" y="389" width="17.4" height="15.0" fill="rgb(235,152,2)" rx="2" ry="2" />
<text  x="69.97" y="399.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1,163 samples, 51.99%)</title><rect x="359.7" y="485" width="613.5" height="15.0" fill="rgb(214,78,13)" rx="2" ry="2" />
<text  x="362.73" y="495.5" >[libstdc++.so.6.0.28]</text>
</g>
<g >
<title>__libc_start_main (62 samples, 2.77%)</title><rect x="1067.6" y="533" width="32.7" height="15.0" fill="rgb(253,132,8)" rx="2" ry="2" />
<text  x="1070.62" y="543.5" >__..</text>
</g>
<g >
<title>std::getline&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (2 samples, 0.09%)</title><rect x="357.6" y="485" width="1.1" height="15.0" fill="rgb(207,60,25)" rx="2" ry="2" />
<text  x="360.62" y="495.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.04%)</title><rect x="1099.3" y="437" width="0.5" height="15.0" fill="rgb(234,176,31)" rx="2" ry="2" />
<text  x="1102.27" y="447.5" ></text>
</g>
<g >
<title>schedule (20 samples, 0.89%)</title><rect x="72.2" y="325" width="10.6" height="15.0" fill="rgb(250,174,47)" rx="2" ry="2" />
<text  x="75.24" y="335.5" ></text>
</g>
<g >
<title>truncate_exceptional_pvec_entries.part.0 (1 samples, 0.04%)</title><rect x="22.1" y="309" width="0.6" height="15.0" fill="rgb(224,95,19)" rx="2" ry="2" />
<text  x="25.13" y="319.5" ></text>
</g>
<g >
<title>load_elf_binary (4 samples, 0.18%)</title><rect x="1187.9" y="437" width="2.1" height="15.0" fill="rgb(215,229,31)" rx="2" ry="2" />
<text  x="1190.89" y="447.5" ></text>
</g>
<g >
<title>C2J (2,233 samples, 99.82%)</title><rect x="10.0" y="549" width="1177.9" height="15.0" fill="rgb(251,172,36)" rx="2" ry="2" />
<text  x="13.00" y="559.5" >C2J</text>
</g>
<g >
<title>ext4_da_write_end (19 samples, 0.85%)</title><rect x="48.5" y="341" width="10.0" height="15.0" fill="rgb(250,76,38)" rx="2" ry="2" />
<text  x="51.51" y="351.5" ></text>
</g>
<g >
<title>ctx_resched (4 samples, 0.18%)</title><rect x="1187.9" y="389" width="2.1" height="15.0" fill="rgb(224,43,16)" rx="2" ry="2" />
<text  x="1190.89" y="399.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (1 samples, 0.04%)</title><rect x="1135.7" y="341" width="0.5" height="15.0" fill="rgb(247,162,50)" rx="2" ry="2" />
<text  x="1138.67" y="351.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (2 samples, 0.09%)</title><rect x="1137.8" y="373" width="1.0" height="15.0" fill="rgb(241,169,18)" rx="2" ry="2" />
<text  x="1140.78" y="383.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.45%)</title><rect x="313.8" y="501" width="5.3" height="15.0" fill="rgb(215,155,1)" rx="2" ry="2" />
<text  x="316.84" y="511.5" ></text>
</g>
<g >
<title>hash_futex (1 samples, 0.04%)</title><rect x="318.6" y="437" width="0.5" height="15.0" fill="rgb(207,81,25)" rx="2" ry="2" />
<text  x="321.58" y="447.5" ></text>
</g>
<g >
<title>_IO_file_overflow@@GLIBC_2.2.5 (2 samples, 0.09%)</title><rect x="11.6" y="517" width="1.0" height="15.0" fill="rgb(210,17,43)" rx="2" ry="2" />
<text  x="14.58" y="527.5" ></text>
</g>
<g >
<title>std::deque&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::empty (1 samples, 0.04%)</title><rect x="936.3" y="357" width="0.5" height="15.0" fill="rgb(234,202,29)" rx="2" ry="2" />
<text  x="939.28" y="367.5" ></text>
</g>
<g >
<title>__schedule (9 samples, 0.40%)</title><rect x="86.0" y="389" width="4.7" height="15.0" fill="rgb(247,178,22)" rx="2" ry="2" />
<text  x="88.96" y="399.5" ></text>
</g>
<g >
<title>free_unref_page (1 samples, 0.04%)</title><rect x="21.6" y="69" width="0.5" height="15.0" fill="rgb(223,86,18)" rx="2" ry="2" />
<text  x="24.60" y="79.5" ></text>
</g>
<g >
<title>free_unref_page_commit (6 samples, 0.27%)</title><rect x="1142.5" y="293" width="3.2" height="15.0" fill="rgb(229,53,22)" rx="2" ry="2" />
<text  x="1145.53" y="303.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="843.4" y="341" width="0.6" height="15.0" fill="rgb(250,69,26)" rx="2" ry="2" />
<text  x="846.44" y="351.5" ></text>
</g>
<g >
<title>error_entry (1 samples, 0.04%)</title><rect x="1164.2" y="517" width="0.5" height="15.0" fill="rgb(222,184,50)" rx="2" ry="2" />
<text  x="1167.15" y="527.5" ></text>
</g>
<g >
<title>mpage_map_and_submit_buffers (1 samples, 0.04%)</title><rect x="1066.6" y="309" width="0.5" height="15.0" fill="rgb(225,102,42)" rx="2" ry="2" />
<text  x="1069.57" y="319.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_deallocate_node (4 samples, 0.18%)</title><rect x="945.8" y="325" width="2.1" height="15.0" fill="rgb(244,12,21)" rx="2" ry="2" />
<text  x="948.77" y="335.5" ></text>
</g>
<g >
<title>rwsem_down_write_slowpath (1 samples, 0.04%)</title><rect x="1103.0" y="437" width="0.5" height="15.0" fill="rgb(225,11,35)" rx="2" ry="2" />
<text  x="1105.96" y="447.5" ></text>
</g>
<g >
<title>__ext4_journal_start_sb (1 samples, 0.04%)</title><rect x="51.1" y="277" width="0.6" height="15.0" fill="rgb(215,193,32)" rx="2" ry="2" />
<text  x="54.14" y="287.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (1 samples, 0.04%)</title><rect x="1099.8" y="469" width="0.5" height="15.0" fill="rgb(226,11,46)" rx="2" ry="2" />
<text  x="1102.80" y="479.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (2 samples, 0.09%)</title><rect x="45.9" y="261" width="1.0" height="15.0" fill="rgb(240,211,6)" rx="2" ry="2" />
<text  x="48.87" y="271.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (11 samples, 0.49%)</title><rect x="1140.4" y="341" width="5.8" height="15.0" fill="rgb(244,13,38)" rx="2" ry="2" />
<text  x="1143.42" y="351.5" ></text>
</g>
<g >
<title>down_read (2 samples, 0.09%)</title><rect x="1166.3" y="453" width="1.0" height="15.0" fill="rgb(220,144,50)" rx="2" ry="2" />
<text  x="1169.26" y="463.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void  (1,163 samples, 51.99%)</title><rect x="359.7" y="405" width="613.5" height="15.0" fill="rgb(218,121,10)" rx="2" ry="2" />
<text  x="362.73" y="415.5" >std::__invoke_impl&lt;void, void </text>
</g>
<g >
<title>__handle_mm_fault (31 samples, 1.39%)</title><rect x="1168.9" y="437" width="16.4" height="15.0" fill="rgb(227,207,28)" rx="2" ry="2" />
<text  x="1171.90" y="447.5" ></text>
</g>
<g >
<title>__es_insert_extent (1 samples, 0.04%)</title><rect x="36.4" y="261" width="0.5" height="15.0" fill="rgb(224,39,2)" rx="2" ry="2" />
<text  x="39.37" y="271.5" ></text>
</g>
<g >
<title>security_file_permission (1 samples, 0.04%)</title><rect x="61.7" y="405" width="0.5" height="15.0" fill="rgb(248,80,29)" rx="2" ry="2" />
<text  x="64.69" y="415.5" ></text>
</g>
<g >
<title>rwsem_optimistic_spin (1 samples, 0.04%)</title><rect x="1103.0" y="421" width="0.5" height="15.0" fill="rgb(230,20,43)" rx="2" ry="2" />
<text  x="1105.96" y="431.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (6 samples, 0.27%)</title><rect x="1142.5" y="277" width="3.2" height="15.0" fill="rgb(210,31,21)" rx="2" ry="2" />
<text  x="1145.53" y="287.5" ></text>
</g>
<g >
<title>__pagevec_lru_add_fn (1 samples, 0.04%)</title><rect x="1135.7" y="357" width="0.5" height="15.0" fill="rgb(250,217,21)" rx="2" ry="2" />
<text  x="1138.67" y="367.5" ></text>
</g>
<g >
<title>unmap_single_vma (11 samples, 0.49%)</title><rect x="1140.4" y="405" width="5.8" height="15.0" fill="rgb(242,49,29)" rx="2" ry="2" />
<text  x="1143.42" y="415.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (8 samples, 0.36%)</title><rect x="68.0" y="325" width="4.2" height="15.0" fill="rgb(221,21,2)" rx="2" ry="2" />
<text  x="71.02" y="335.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.04%)</title><rect x="276.9" y="453" width="0.5" height="15.0" fill="rgb(237,95,5)" rx="2" ry="2" />
<text  x="279.91" y="463.5" ></text>
</g>
<g >
<title>vm_stat_account (1 samples, 0.04%)</title><rect x="1114.0" y="453" width="0.6" height="15.0" fill="rgb(227,165,53)" rx="2" ry="2" />
<text  x="1117.04" y="463.5" ></text>
</g>
<g >
<title>mpage_prepare_extent_to_map (1 samples, 0.04%)</title><rect x="1067.1" y="325" width="0.5" height="15.0" fill="rgb(229,87,44)" rx="2" ry="2" />
<text  x="1070.09" y="335.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (1 samples, 0.04%)</title><rect x="82.8" y="277" width="0.5" height="15.0" fill="rgb(206,189,3)" rx="2" ry="2" />
<text  x="85.79" y="287.5" ></text>
</g>
<g >
<title>common_file_perm (1 samples, 0.04%)</title><rect x="61.7" y="373" width="0.5" height="15.0" fill="rgb(240,33,14)" rx="2" ry="2" />
<text  x="64.69" y="383.5" ></text>
</g>
<g >
<title>__strlen_avx2 (29 samples, 1.30%)</title><rect x="182.5" y="501" width="15.3" height="15.0" fill="rgb(238,119,13)" rx="2" ry="2" />
<text  x="185.49" y="511.5" ></text>
</g>
<g >
<title>sysmalloc (56 samples, 2.50%)</title><rect x="1158.4" y="533" width="29.5" height="15.0" fill="rgb(246,24,11)" rx="2" ry="2" />
<text  x="1161.35" y="543.5" >sy..</text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="276.9" y="485" width="0.5" height="15.0" fill="rgb(224,217,26)" rx="2" ry="2" />
<text  x="279.91" y="495.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.04%)</title><rect x="1180.0" y="373" width="0.5" height="15.0" fill="rgb(253,117,12)" rx="2" ry="2" />
<text  x="1182.98" y="383.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="319.1" y="501" width="0.5" height="15.0" fill="rgb(214,33,36)" rx="2" ry="2" />
<text  x="322.11" y="511.5" ></text>
</g>
<g >
<title>[unknown] (10 samples, 0.45%)</title><rect x="353.4" y="501" width="5.3" height="15.0" fill="rgb(209,125,8)" rx="2" ry="2" />
<text  x="356.40" y="511.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;&amp;, std::pair&lt;unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*&gt;::_Deque_iterator (2 samples, 0.09%)</title><rect x="939.4" y="325" width="1.1" height="15.0" fill="rgb(251,103,47)" rx="2" ry="2" />
<text  x="942.44" y="335.5" ></text>
</g>
<g >
<title>do_page_fault (39 samples, 1.74%)</title><rect x="1165.7" y="501" width="20.6" height="15.0" fill="rgb(242,152,7)" rx="2" ry="2" />
<text  x="1168.74" y="511.5" ></text>
</g>
<g >
<title>start_this_handle (5 samples, 0.22%)</title><rect x="29.5" y="293" width="2.7" height="15.0" fill="rgb(209,41,24)" rx="2" ry="2" />
<text  x="32.52" y="303.5" ></text>
</g>
</g>
</svg>
